<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/task     http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/tx       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util     http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- Properties file configuration of existing beans -->
	<bean id="configProperties" class="org.jasig.ssp.config.ConfigPostProcessingPropertiesFactoryBean">
		<constructor-arg type="java.util.Properties">
			<bean class="org.jasig.ssp.util.spring.PlaceholderDereferencingPropertiesFactoryBean">
				<constructor-arg type="java.util.Properties">
					<bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
						<property name="ignoreResourceNotFound" value="true" />
						<property name="locations">
							<list>
								<value>classpath:ssp-config.default.properties</value>
								<value>classpath:ssp-config.test.properties</value>
								<value>file:${SSP_TESTCONFIGDIR}/ssp-config.properties</value>
							</list>
						</property>
					</bean>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

	<util:properties id="contextProperties">
		<prop key="applicationMode">TEST</prop>
		<!-- applicationMode should be referenced almost never, please think 
		thrice before using it. Values are:  RUN and TEST -->
	</util:properties>
	
	<tx:annotation-driven />

	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
		<property name="dataSource">
			<bean class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
				<property name="driverClass" value="#{configProperties.db_driver_class}" />
				<property name="url" value="#{configProperties.db_url}" />
				<property name="username" value="#{configProperties.db_admin_username}" />
				<property name="password" value="#{configProperties.db_admin_password}" />
			</bean>
		</property>
		<property name="changeLog"
			value="classpath:org/jasig/ssp/database/masterChangeLog-test.xml" />
		<property name="changeLogParameters">
			<util:map>
				<entry key="database.name" value="#{configProperties.db_name}" />
				<entry key="database.app.username" value="#{configProperties.db_username}" />
				<entry key="database.admin.username" value="#{configProperties.db_admin_username}" />
				<entry key="set.mssql.snapshot.isolation" value="#{configProperties.db_liquibase_set_mssql_snapshot_isolation}" />
				<entry key="database.timezone.legacy" value="#{configProperties.db_time_zone_legacy}" />
				<entry key="database.timezone" value="#{configProperties.db_time_zone}" />
			</util:map>
		</property>
	</bean>

	<!-- Hibernate -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="uuidCustomType" class="org.jasig.ssp.util.uuid.UUIDCustomTypeSetup"
		init-method="initSettings" />

	<bean id="securityService"
		class="org.jasig.ssp.service.impl.SecurityServiceInTestEnvironment" />

	<bean id="sspTimeZones" class="org.jasig.ssp.util.SspTimeZones" />

	<!-- Hibernate Session Factory -->
	<bean id="sessionFactory"
		class="org.jasig.ssp.util.hibernate.TypeRegistryOverridingLocalSessionFactoryBean"
		depends-on="sspTimeZones,liquibase,uuidCustomType">
		<property name="dataSource" ref="sspDataSource" />
		<property name="packagesToScan" value="org.jasig.ssp.model" />
		<property name="entityInterceptor">
			<bean class="org.jasig.ssp.dao.AuditableEntityInterceptor" />
		</property>
		<!-- property name="mappingResources"> <array> <value>mappings.xml</value> 
			</array> </property -->
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=#{configProperties.db_dialect}
				hibernate.show_sql=false
				hibernate.format_sql=true
			</value>
		</property>
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="basicTypeOverrides">
			<list>
				<bean class="org.jasig.ssp.util.hibernate.ConfigurableTimestampType">
					<constructor-arg type="org.hibernate.type.descriptor.sql.TimestampTypeDescriptor">
						<bean class="org.jasig.ssp.util.hibernate.SspTimestampTypeDescriptor" />
					</constructor-arg>
				</bean>
				<bean class="org.jasig.ssp.util.hibernate.ConfigurableDateType">
					<constructor-arg type="org.hibernate.type.descriptor.sql.DateTypeDescriptor">
						<bean class="org.jasig.ssp.util.hibernate.SspDateTypeDescriptor" />
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>

	<!-- We need to be able to flush and reload the entire conn pool, e.g.
		b/c Postgres connections cache the current default timezone but we
		have tests that need to manipulate that default. Can't do this
		with the DBCP API, though. So we make the actual datasource a prototype
		bean so we get a new instance every time we reference it. But all
		references actually go through this Groovy wrapper bean, which
		exposes a method for disposing of the current underlying datasource
		and loading up a new one -->
	<bean id="sspDataSource" class="org.jasig.ssp.util.database.ReloadableBasicDataSourceWrapper"
			destroy-method="close">
		<property name="basicDataSourcePrototypeName" value="sspDataSourcePrototype" />
	</bean>

	<bean id="sspDataSourcePrototype" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" scope="prototype">
		<property name="driverClassName" value="#{configProperties.db_driver_class}" />
		<property name="url" value="#{configProperties.db_url}" />
		<property name="username" value="#{configProperties.db_username}" />
		<property name="password" value="#{configProperties.db_password}" />
		<property name="validationQuery" value="select 1" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
		<property name="maxWait" value="10000" />
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=string
				string.resource.loader.class=org.apache.velocity.runtime.resource.loader.StringResourceLoader
			</value>
		</property>
	</bean>
	
	
	<!-- External Data Access Mechanism -->
	<bean id="ldapContextSource" class="org.springframework.ldap.core.support.LdapContextSource">
		<property name="url" value="ldap://localhost:33389" />
		<property name="base" value="dc=springframework,dc=org" />
	</bean>

	<bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
		<constructor-arg ref="ldapContextSource" />
	</bean>
	
	<bean id="ldapPersonAttributesService" 
			class="org.jasig.ssp.service.impl.LdapPersonAttributesService"/>

	
			
	<!-- Don't setup a javaMailSender in here, as the MessageService will 
	override the send_mail config value - setting it to true, and send mail 
	to the Mock SMTP server using the MockMailService-->

	<!-- Allow proper instrumentation with cobertura -->
	<beans profile="cobertura">
		<aop:aspectj-autoproxy proxy-target-class="true" />
	</beans>

</beans>