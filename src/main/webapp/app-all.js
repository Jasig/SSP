Ext.define("Ssp.model.AbstractBase",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"createdBy",convert:function(b,a){var c={id:b.id||"",firstName:b.firstName||"",lastName:b.lastName||""};return c}},{name:"modifiedBy",convert:function(b,a){var c={id:b.id||"",firstName:b.firstName||"",lastName:b.lastName||""};return c}},{name:"createdDate",type:"date",dateFormat:"time"}],populateFromGenericObject:function(a){if(a!=null){for(fieldName in this.data){if(a[fieldName]){this.set(fieldName,a[fieldName])}}}},getCreatedByPersonName:function(){return this.get("createdBy").firstName+" "+this.get("createdBy").lastName},getCreatedById:function(){return this.get("createdBy").id+" "+this.get("createdBy").id},});Ext.define("Ssp.model.reference.AbstractReference",{extend:"Ssp.model.AbstractBase",fields:[{name:"name",type:"string"},{name:"description",type:"string"}]});Ext.define("Ssp.store.reference.AbstractReferences",{extend:"Ext.data.Store",model:"Ssp.model.reference.AbstractReference",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){var a=this;Ext.apply(a,{proxy:a.apiProperties.getProxy(""),autoLoad:false,autoSync:false,pageSize:a.apiProperties.getPagingSize(),params:{page:0,start:0,limit:a.apiProperties.getPagingSize()}});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.AdminMain",{extend:"Ext.panel.Panel",alias:"widget.adminmain",id:"AdminMain",title:"Admin Main",height:"100%",width:"100%",initComponent:function(){Ext.apply(this,{layout:{type:"border",align:"stretch"},split:true});this.callParent(arguments)}});Ext.define("Ssp.view.admin.AdminForms",{extend:"Ext.container.Container",alias:"widget.adminforms",id:"AdminForms",width:"100%",height:"100%",layout:"fit"});Ext.define("Ssp.view.component.MappedTextField",{extend:"Ext.form.field.Text",alias:"widget.mappedtextfield",config:{parentId:null,validationExpression:"[a-zA-Z]"},initComponent:function(){return this.callParent(arguments)}});Ext.define("Ssp.view.component.MappedTextArea",{extend:"Ext.form.field.TextArea",alias:"widget.mappedtextarea",config:{parentId:null,validationExpression:"[a-zA-Z]"},initComponent:function(){return this.callParent(arguments)}});Ext.define("Ssp.view.component.MappedCheckBox",{extend:"Ext.form.field.Checkbox",alias:"widget.mappedcheckbox",config:{mapId:null},initComponent:function(){return this.callParent(arguments)}});Ext.define("Ssp.view.component.MappedRadioButton",{extend:"Ext.form.field.Radio",alias:"widget.mappedradiobutton",config:{parentId:null,validationExpression:"[a-zA-Z]"},initComponent:function(){return this.callParent(arguments)}});Ext.define("Ssp.view.Tools",{extend:"Ext.panel.Panel",alias:"widget.tools",id:"Tools",width:"100%",height:"100%",layout:"fit"});Ext.define("Ssp.view.tools.profile.SpecialServiceGroups",{extend:"Ext.grid.Panel",alias:"widget.profilespecialservicegroups",mixins:["Deft.mixin.Injectable"],inject:{store:"profileSpecialServiceGroupsStore"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{hideHeaders:true,store:a.store,autoScroll:true,columns:[{header:"Group",dataIndex:"name",flex:1,}],});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.profile.ReferralSources",{extend:"Ext.grid.Panel",alias:"widget.profilereferralsources",mixins:["Deft.mixin.Injectable"],inject:{store:"profileReferralSourcesStore"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{hideHeaders:true,autoScroll:true,store:a.store,columns:[{header:"Source",dataIndex:"name",flex:1,}],});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.profile.ServiceReasons",{extend:"Ext.grid.Panel",alias:"widget.profileservicereasons",mixins:["Deft.mixin.Injectable"],inject:{store:"profileServiceReasonsStore"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{hideHeaders:true,autoScroll:true,store:a.store,columns:[{header:"Reason",dataIndex:"name",flex:1,}],});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.actionplan.AddTask",{extend:"Ext.panel.Panel",alias:"widget.addtask",mixins:["Deft.mixin.Injectable"],inject:{model:"currentTask"},width:"100%",height:"100%",initComponent:function(){Ext.apply(this,{autoScroll:true,layout:{type:"vbox",align:"stretch"},title:"Add Action Plan Tasks",items:[{xtype:"tasktree",flex:0.5},{xtype:"addtaskform",flex:0.5}]});return this.callParent(arguments)}});Ext.define("Ssp.view.tools.studentintake.Challenges",{extend:"Ext.form.Panel",alias:"widget.studentintakechallenges",id:"StudentIntakeChallenges",width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,border:0,bodyPadding:5,layout:"anchor",defaults:{anchor:"100%"},defaultType:"checkbox"});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.studentintake.EducationLevels",{extend:"Ext.form.Panel",alias:"widget.studentintakeeducationlevels",id:"StudentIntakeEducationLevels",width:"100%",height:"100%",initComponent:function(){Ext.apply(this,{autoScroll:true,bodyPadding:5,border:0,layout:"anchor",defaults:{anchor:"100%"},defaultType:"checkbox"});return this.callParent(arguments)}});Ext.define("Ssp.view.tools.studentintake.Funding",{extend:"Ext.form.Panel",alias:"widget.studentintakefunding",id:"StudentIntakeFunding",width:"100%",height:"100%",initComponent:function(){Ext.apply(this,{autoScroll:true,border:0,bodyPadding:5,layout:"anchor",defaults:{anchor:"100%"},defaultType:"checkbox"});return this.callParent(arguments)}});Ext.define("Ssp.view.tools.sis.StudentInformationSystem",{extend:"Ext.panel.Panel",alias:"widget.studentinformationsystem",title:"Student Information System",width:"100%",height:"100%",autoScroll:true,initComponent:function(){var a=this;Ext.apply(a,{border:0,items:[Ext.createWidget("tabpanel",{width:"100%",height:"100%",activeTab:0,border:0,items:[{title:"Registration",autoScroll:true,items:[{xtype:"sisregistration"}]},{title:"Transcript",autoScroll:true,border:0,items:[{xtype:"sistranscript"}]},{title:"Assessment",autoScroll:true,border:0,items:[{xtype:"sisassessment"}]}]})]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.sis.Registration",{extend:"Ext.form.Panel",alias:"widget.sisregistration",width:"100%",height:"100%",autoScroll:true,initComponent:function(){var a=this;Ext.applyIf(a,{items:[{xtype:"displayfield",fieldLabel:"Academic Status",anchor:"100%"},{xtype:"displayfield",fieldLabel:"Registration Status",anchor:"100%"},{xtype:"displayfield",fieldLabel:"Start Term",anchor:"100%"},{xtype:"displayfield",fieldLabel:"CUM GPA",anchor:"100%"}]});a.callParent(arguments)}});Ext.define("Ssp.view.tools.sis.Assessment",{extend:"Ext.grid.Panel",alias:"widget.sisassessment",width:"100%",height:"100%",autoScroll:true,initComponent:function(){var a=this;Ext.applyIf(a,{columns:[{xtype:"gridcolumn",dataIndex:"string",text:"Type"},{xtype:"gridcolumn",dataIndex:"string",text:"Score"},{xtype:"gridcolumn",dataIndex:"string",text:"Status"},{xtype:"gridcolumn",dataIndex:"string",text:"Date"}],viewConfig:{}});a.callParent(arguments)}});Ext.define("Ssp.controller.tool.disabilityintake.GeneralViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],init:function(){var a=this;return a.callParent(arguments)}});Ext.define("Ssp.controller.tool.disabilityintake.DisabilityIntakeToolViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson",appEventsController:"appEventsController",formUtils:"formRendererUtils",disabilityAccommodationsStore:"disabilityAccommodationsStore",disabilityAgenciesStore:"disabilityAgenciesStore",disabilityIntake:"currentDisabilityIntake",disabilityStatusesStore:"disabilityStatusesStore",disabilityTypesStore:"disabilityTypesStore",personLite:"personLite",person:"currentPerson",service:"disabilityIntakeService",},config:{disabilityIntakeForm:null},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"},saveSuccessMessage:"#saveSuccessMessage"},init:function(){var a=this;a.initDisabilityIntakeViews();a.appEventsController.getApplication().addListener("dynamicCompChange",function(c){var b=Ext.ComponentQuery.query(".mappedtextfield");var d=Ext.ComponentQuery.query(".mappedtextarea");Ext.each(b,function(f,e){if(c.id==f.parentId){if(c.checked){f.show();Ext.apply(f,{allowBlank:false})}else{f.hide();Ext.apply(f,{allowBlank:true})}}},this);Ext.each(d,function(f,e){if(c.id==f.parentId){if(c.checked){f.show();Ext.apply(f,{allowBlank:false})}else{f.hide();Ext.apply(f,{allowBlank:true})}}},this)},a);a.getView().setLoading(true);a.service.get(a.personLite.get("id"),{success:a.getDisabilityIntakeSuccess,failure:a.getDisabilityIntakeFailure,scope:a});return a.callParent(arguments)},destroy:function(){return this.callParent(arguments)},initDisabilityIntakeViews:function(){var b=this;var a=[Ext.createWidget("tabpanel",{width:"100%",height:"100%",activeTab:0,border:0,items:[{title:"General",autoScroll:true,items:[{xtype:"disabilitygeneral"}]},{title:"Agency Contacts",autoScroll:true,items:[{xtype:"disabilityagencycontacts"}]},{title:"Disability",autoScroll:true,items:[{xtype:"disabilitytypes"}]},{title:"Disposition",autoScroll:true,items:[{xtype:"disabilitydisposition"}]},{title:"Accommodations",autoScroll:true,items:[{xtype:"disabilityaccommodations"}]}]})];b.getView().add(a)},getDisabilityIntakeSuccess:function(d,a){var c=a;var b;c.getView().setLoading(false);if(d!=null){b=Ext.ModelManager.getModel("Ssp.model.tool.disabilityintake.DisabilityIntakeForm");c.disabilityIntake.data=b.getProxy().getReader().read(d).records[0].data;c.buildDisabilityIntake(c.disabilityIntake)}else{Ext.Msg.alert("Error","There was an error loading the Disability Intake form for this student.")}},getDisabilityIntakeFailure:function(a,b){var c=b;c.getView().setLoading(false)},buildDisabilityIntake:function(p){var t=this;var c=p.data.person;var g=p.data.personDisability;var e=p.data.personDisabilityAgencies;var q=p.data.personDisabilityTypes;var l=p.data.personDisabilityAccommodations;var m=Ext.getCmp("DisabilityIntakeGeneral");var n=Ext.getCmp("DisabilityIntakeAgencyContactName");var k=Ext.getCmp("DisabilityIntakeDisposition");var a;var f;var d;var r;var u;var h;var j;var o=t.formUtils.alphaSortByField(p.data.referenceData.disabilityAccommodations,"name");var i=t.formUtils.alphaSortByField(p.data.referenceData.disabilityAgencies,"name");var s=t.formUtils.alphaSortByField(p.data.referenceData.disabilityStatuses,"name");var b=t.formUtils.alphaSortByField(p.data.referenceData.disabilityTypes,"name");t.disabilityAgenciesStore.loadData(i);t.disabilityAccommodationsStore.loadData(o);t.disabilityStatusesStore.loadData(s);t.disabilityTypesStore.loadData(b);if(g!=null&&g!=undefined){m.loadRecord(g)}if(g!=null&&g!=undefined){n.loadRecord(g)}if(g!=null&&g!=undefined){k.loadRecord(g)}j=150;f=[{parentId:Ssp.util.Constants.DISABILITY_AGENCY_OTHER_ID,parentName:"other",name:"description",label:"Please Explain",fieldType:"mappedtextarea",labelWidth:j}];a={mainComponentType:"checkbox",formId:"DisabilityIntakeDisabilityAgencies",fieldSetTitle:"Select all agencies that apply",itemsArr:i,selectedItemsArr:e,idFieldName:"id",selectedIdFieldName:"disabilityAgencyId",additionalFieldsMap:f};t.formUtils.createForm(a);r=[];Ext.Array.each(b,function(x,w,v){var y=b[w];var z={parentId:y.id,parentName:y.name,name:"description",label:"Please Explain",fieldType:"mappedtextarea",labelWidth:80,width:"350"};r.push(z)});d={mainComponentType:"checkbox",formId:"DisabilityIntakeDisabilityTypes",fieldSetTitle:"Select all that apply",itemsArr:b,selectedItemsArr:q,idFieldName:"id",selectedIdFieldName:"disabilityTypeId",additionalFieldsMap:r};t.formUtils.createForm(d);h=[];Ext.Array.each(o,function(y,x,w){var A;var z=o[x];var v="mappedtextfield";if(z.useDescription===true){if(z.descriptionFieldType.toLowerCase()==="long"){v="mappedtextarea"}A={parentId:z.id,parentName:z.name,name:"description",label:z.descriptionFieldLabel,fieldType:v,labelWidth:100,width:"350"};h.push(A)}});u={mainComponentType:"checkbox",formId:"DisabilityIntakeDisabilityAccommodations",fieldSetTitle:"Select all that apply",itemsArr:o,selectedItemsArr:l,idFieldName:"id",selectedIdFieldName:"disabilityAccommodationId",additionalFieldsMap:h};t.formUtils.createForm(u)},onSaveClick:function(h){var k=this;var q=k.formUtils;var o=Ext.getCmp("DisabilityIntakeGeneral").getForm();var i=Ext.getCmp("DisabilityIntakeAgencyContactName").getForm();var m=Ext.getCmp("DisabilityIntakeDisposition").getForm();var j=Ext.getCmp("DisabilityIntakeDisabilityAgencies").getForm();var b=Ext.getCmp("DisabilityIntakeDisabilityTypes").getForm();var n=Ext.getCmp("DisabilityIntakeDisabilityAccommodations").getForm();var g=null;var c=null;var l=null;var a=null;var p="";var f={};var e=[o,i,m,j,n,b];var d=k.formUtils.validateForms(e);if(d.valid){o.updateRecord(k.disabilityIntake.get("personDisability"));i.updateRecord(k.disabilityIntake.get("personDisability"));m.updateRecord(k.disabilityIntake.get("personDisability"));p=k.disabilityIntake.get("person").data.id;f={person:k.disabilityIntake.get("person").data,personDisability:k.disabilityIntake.get("personDisability").data,personDisabilityAgencies:[],personDisabilityAccommodations:[],personDisabilityTypes:[]};if(f.personDisability.eligibleLetterDate!=null){f.personDisability.eligibleLetterDate=k.formUtils.fixDateOffset(f.personDisability.eligibleLetterDate)}if(f.personDisability.ineligibleLetterDate!=null){f.personDisability.ineligibleLetterDate=k.formUtils.fixDateOffset(f.personDisability.ineligibleLetterDate)}f.person=k.person.setPropsNullForSave(f.person);f.personDisability.personId=p;f.personDisability=k.disabilityIntake.get("personDisability").setPropsNullForSave(f.personDisability);g=j.getValues();f.personDisabilityAgencies=q.createTransferObjectsFromSelectedValues("disabilityAgencyId",g,p);l=b.getValues();f.personDisabilityTypes=q.createTransferObjectsFromSelectedValues("disabilityTypeId",l,p);c=n.getValues();f.personDisabilityAccommodations=q.createTransferObjectsFromSelectedValues("disabilityAccommodationId",c,p);k.getView().setLoading(true);k.service.save(k.personLite.get("id"),f,{success:k.saveDisabilityIntakeSuccess,failure:k.saveDisabilityIntakeFailure,scope:k})}else{k.formUtils.displayErrors(d.fields)}},saveDisabilityIntakeSuccess:function(c,a){var b=a;b.getView().setLoading(false);if(c.success==true){b.formUtils.displaySaveSuccessMessage(b.getSaveSuccessMessage())}},saveDisabilityIntakeFailure:function(a,b){var c=b;c.getView().setLoading(false)},onCancelClick:function(a){var b=this;b.getView().removeAll();b.initDisabilityIntakeViews();b.buildDisabilityIntake(b.disabilityIntake)}});Ext.define("Ssp.view.tools.disabilityintake.General",{extend:"Ext.form.Panel",alias:"widget.disabilitygeneral",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.disabilityintake.GeneralViewController",inject:{disabilityStatusesStore:"disabilityStatusesStore"},height:"100%",width:"100%",id:"DisabilityIntakeGeneral",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,layout:{type:"vbox",align:"stretch"},border:0,padding:10,defaults:{anchor:"95%"},fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:200},defaultType:"textfield",items:[{xtype:"displayfield",name:"odsRegistrationDate",fieldLabel:"ODS Registration Date",renderer:Ext.util.Format.dateRenderer("m/d/Y")},{xtype:"combobox",name:"disabilityStatusId",fieldLabel:"ODS Status",emptyText:"Select One",store:a.disabilityStatusesStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{xtype:"textareafield",fieldLabel:"Please Explain Temporary Eligibility",name:"tempEligibilityDescription"},{xtype:"textfield",name:"intakeCounselor",fieldLabel:"ODS Counselor"},{xtype:"textfield",name:"referredBy",fieldLabel:"Referred to ODS by"}]});a.callParent(arguments)}});Ext.define("Ssp.view.tools.disabilityintake.AgencyContacts",{extend:"Ext.panel.Panel",alias:"widget.disabilityagencycontacts",width:"100%",height:"100%",autoScroll:true,initComponent:function(){var a=this;Ext.apply(a,{bodyPadding:10,border:0,items:[{xtype:"form",id:"DisabilityIntakeDisabilityAgencies",layout:"anchor",border:0,defaults:{anchor:"100%"},defaultType:"checkbox"},{xtype:"form",id:"DisabilityIntakeAgencyContactName",layout:"anchor",border:0,defaults:{anchor:"95%"},items:[{xtype:"textfield",fieldLabel:"Name of Contact",name:"contactName"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.disabilityintake.Disposition",{extend:"Ext.form.Panel",alias:"widget.disabilitydisposition",height:"100%",width:"100%",id:"DisabilityIntakeDisposition",initComponent:function(){var a=this;Ext.apply(a,{border:0,padding:10,defaults:{anchor:"95%"},autoScroll:true,items:[{xtype:"fieldcontainer",fieldLabel:"Disposition",layout:"vbox",items:[{xtype:"checkboxfield",boxLabel:"Release Signed",name:"releaseSigned"},{xtype:"checkboxfield",boxLabel:"Records Requested",name:"recordsRequested"},{xtype:"textfield",fieldLabel:"Records Requested From",labelWidth:150,name:"recordsRequestedFrom"},{xtype:"checkboxfield",boxLabel:"Referred for Screening of LD/ADD",name:"referForScreening"},{xtype:"textfield",fieldLabel:"Documents Requested From",labelWidth:180,name:"documentsRequestedFrom"},{xtype:"checkboxfield",boxLabel:"Rights and Duties",name:"rightsAndDuties"},{xtype:"checkboxfield",boxLabel:"Eligibility Letter Sent",name:"eligibleLetterSent"},{xtype:"datefield",fieldLabel:"Eligibility Letter Date",itemId:"eligibleLetterDate",labelWidth:180,altFormats:"m/d/Y|m-d-Y",invalidText:"{0} is not a valid date - it must be in the format: 06/02/2012 or 06-02-2012",name:"eligibleLetterDate",allowBlank:true},{xtype:"checkboxfield",boxLabel:"Ineligibility Letter Sent",name:"ineligibleLetterSent"},{xtype:"datefield",fieldLabel:"Ineligibility Letter Date",itemId:"ineligibleLetterDate",labelWidth:180,altFormats:"m/d/Y|m-d-Y",invalidText:"{0} is not a valid date - it must be in the format: 06/02/2012 or 06-02-2012",name:"ineligibleLetterDate",allowBlank:true},{xtype:"checkboxfield",boxLabel:"No disability documentation received",name:"noDocumentation"},{xtype:"checkboxfield",boxLabel:"Inadequate documentation",name:"inadequateDocumentation"},{xtype:"checkboxfield",boxLabel:"Document states individual has no disability",name:"noDisability"},{xtype:"checkboxfield",boxLabel:"HS reports no special ed placement/no report",name:"noSpecialEd"}]},{xtype:"checkboxfield",boxLabel:"",fieldLabel:"On Medication",name:"onMedication"},{xtype:"textareafield",fieldLabel:"Please list medications",name:"medicationList"},{xtype:"textareafield",fieldLabel:"Functional limitations?, please explain",name:"functionalLimitations"}]});a.callParent(arguments)}});Ext.define("Ssp.view.tools.disabilityintake.Accommodations",{extend:"Ext.form.Panel",alias:"widget.disabilityaccommodations",id:"DisabilityIntakeDisabilityAccommodations",width:"100%",height:"100%",autoScroll:true,initComponent:function(){var a=this;Ext.apply(a,{bodyPadding:10,border:0,layout:"anchor",defaults:{anchor:"95%"},defaultType:"checkbox"});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.displacedworker.DisplacedWorker",{extend:"Ext.panel.Panel",alias:"widget.displacedworker",title:"Displaced Workers",width:"100%",height:"100%",autoScroll:true,initComponent:function(){return this.callParent(arguments)}});Ext.define("Ssp.view.tools.studentsuccess.StudentSuccess",{extend:"Ext.panel.Panel",alias:"widget.studentsuccess",title:"Student Success",width:"100%",height:"100%",autoScroll:true,initComponent:function(){return this.callParent(arguments)}});Ext.define("Ssp.view.ErrorWindow",{extend:"Ext.window.Window",alias:"widget.ssperrorwindow",mixins:["Deft.mixin.Injectable"],inject:{columnRendererUtils:"columnRendererUtils",store:"errorsStore"},width:"100%",height:"100%",title:"Error! Please correct the errors listed below:",initComponent:function(){var a=this;Ext.apply(a,{modal:true,layout:"fit",items:[{xtype:"grid",border:false,columns:[{header:"Error",dataIndex:"label",sortable:false,menuDisabled:true,flex:0.25},{header:"Message",dataIndex:"errorMessage",renderer:a.columnRendererUtils.renderErrorMessage,sortable:false,menuDisabled:true,flex:0.75}],store:a.store}],bbar:[{xtype:"button",text:"OK",itemId:"closeButton",handler:function(){a.close()}}]});return a.callParent(arguments)}});Ext.define("Ssp.view.Report",{extend:"Ext.Component",alias:"widget.sspreport",height:0,width:0,config:{downloadForm:null,downloadFrame:null},autoEl:{tag:"iframe",cls:"x-hidden",src:Ext.SSL_SECURE_URL},initComponent:function(){var a=this;a.downloadForm=Ext.getBody().createChild({tag:"form",cls:"x-hidden",id:"sspPortletReportform",target:"sspPortletIFrame"});a.downloadFrame=Ext.getBody().createChild({tag:"iframe",cls:"x-hidden",id:"sspPortletIFrame",name:"iframe",src:Ext.SSL_SECURE_URL});return a.callParent(arguments)},load:function(a){this.getEl().dom.src=a.url+(a.params?"?"+Ext.urlEncode(a.params):"")},loadBlankReport:function(a){window.open(a,"_blank","")},postReport:function(a){var b=this;Ext.Ajax.request({url:a.url,form:b.downloadForm,params:a.params,isUpload:true,headers:{"Content-Type":"application/json"},success:function(c,d){},failure:function(c,d){Ext.Msg.alert("Notification",c.responseText)},scope:b},b)}});Ext.define("Ssp.model.SimpleItemDisplay",{extend:"Ext.data.Model",fields:[{name:"name",type:"string"}]});Ext.define("Ssp.model.ObjectPermission",{extend:"Ext.data.Model",fields:[{name:"name",type:"string"},{name:"hasAccess",type:"boolean"}]});Ext.define("Ssp.model.Preferences",{extend:"Ext.data.Model",fields:[{name:"SEARCH_GRID_VIEW_TYPE",type:"int",defaultValue:1},{name:"ACTION_PLAN_ACTIVE_VIEW",type:"int",defaultValue:0},{name:"EARLY_ALERT_SELECTED_NODE",type:"auto",defaultValue:""}]});Ext.define("Ssp.model.FieldError",{extend:"Ext.data.Model",fields:[{name:"label",type:"string"},{name:"errorMessage",type:"string"}]});Ext.define("Ssp.model.util.TreeRequest",{extend:"Ext.data.Model",fields:[{name:"url",type:"string"},{name:"nodeType",type:"string"},{name:"isLeaf",type:"boolean"},{name:"nodeToAppendTo",defaultValue:null},{name:"destroyBeforeAppend",type:"boolean",defaultValue:false},{name:"enableCheckedItems",type:"boolean",defaultValue:true},{name:"expanded",type:"boolean",defaultValue:false},{name:"expandable",type:"boolean",defaultValue:true},{name:"callbackFunc",type:"auto"},{name:"callbackScope",type:"auto"},{name:"removeParentWhenNoChildrenExist",type:"boolean",defaultValue:false},{name:"includeToolTip",type:"boolean",defaultValue:false},{name:"toolTipFieldName",type:"string",defaultValue:""}]});Ext.define("Ssp.model.Configuration",{extend:"Ext.data.Model",fields:[{name:"syncStudentPersonalDataWithExternalData",type:"boolean",defaultValue:false},{name:"allowExternalRetrievalOfStudentDataFromCaseloadAssignment",type:"boolean",defaultValue:true},{name:"coachSetFromExternalData",type:"boolean",defaultValue:false},{name:"studentTypeSetFromExternalData",type:"boolean",defaultValue:false},{name:"studentIdAlias",type:"string",defaultValue:"Tartan ID"},{name:"studentIdMinValidationLength",type:"number",defaultValue:3},{name:"studentIdMinValidationErrorText",type:"string",defaultValue:"The entered value is not long enough."},{name:"studentIdMaxValidationLength",type:"number",defaultValue:8},{name:"studentIdMaxValidationErrorText",type:"string",defaultValue:"The entered value is too long."},{name:"studentIdAllowableCharacters",type:"string",defaultValue:"a-zA-Z0-9"},{name:"studentIdValidationErrorText",type:"string",defaultValue:"Not a valid Student Id"},{name:"displayStudentIntakeDemographicsEmploymentShift",type:"boolean",defaultValue:true},{name:"educationPlanParentsDegreeLabel",type:"string",defaultValue:"Have your parents obtained a college degree?"},{name:"educationPlanSpecialNeedsLabel",type:"string",defaultValue:"Special needs or require special accommodation?"},{name:"coachFieldLabel",type:"string",defaultValue:"Coach"}],constructor:function(){var e=this;e.callParent(arguments);var d=e.get("studentIdMinValidationLength");var g=e.get("studentIdMaxValidationLength");var b=e.get("studentIdAllowableCharacters");var c="^(["+b+"]";c=c+"{"+d+",";c=c+g+"})";var f=new RegExp(c);var a="You should only use the following character list for input: "+b;e.set("studentIdValidationErrorText",a);e.set("studentIdMinValidationErrorText","Value should be at least "+d+" characters & no more than "+g+" characters");e.set("studentIdMaxValidationErrorText","Value should be at least "+d+" characters & no more than "+g+" characters");Ext.apply(Ext.form.field.VTypes,{studentIdValidator:function(i,h){return f.test(i)}});return e}});Ext.define("Ssp.model.CaseloadPerson",{extend:"Ext.data.Model",fields:[{name:"personId",type:"string"},{name:"schoolId",type:"string"},{name:"firstName",type:"string"},{name:"lastName",type:"string"},{name:"middleName",type:"string"},{name:"studentTypeName",type:"string"},{name:"currentAppointmentStartDate",type:"date",dateFormat:"time"},{name:"numberOfEarlyAlerts",type:"string"},{name:"studentIntakeComplete",type:"boolean"},{name:"currentAppointmentStartTime",type:"date",dateFormat:"time"},{name:"currentProgramStatusName",type:"string"}],getFullName:function(){var c=this.get("firstName")||"";var b=this.get("middleName")||"";var a=this.get("lastName")||"";return c+" "+b+" "+a},getStudentTypeName:function(){return((this.get("studentTypeName")!=null)?this.get("studentTypeName"):"")}});Ext.define("Ssp.model.SearchPerson",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"schoolId",type:"string"},{name:"firstName",type:"string"},{name:"middleName",type:"string"},{name:"lastName",type:"string"},{name:"photoUrl",type:"string"},{name:"currentProgramStatusName",type:"string"},{name:"coach",type:"auto"}],getFullName:function(){var d=this;var c=d.get("firstName")?d.get("firstName"):"";var b=d.get("middleName")?d.get("middleName"):"";var a=d.get("lastName")?d.get("lastName"):"";return c+" "+b+" "+a},getCoachFullName:function(){var c=this;var b=c.get("coach")?c.get("coach").firstName:"";var a=c.get("coach")?c.get("coach").lastName:"";return b+" "+a}});Ext.define("Ssp.model.SearchCriteria",{extend:"Ext.data.Model",fields:[{name:"searchTerm",type:"string"},{name:"outsideCaseload",type:"boolean",defaultValue:true}]});Ext.define("Ssp.model.CaseloadFilterCriteria",{extend:"Ext.data.Model",fields:[{name:"programStatusId",type:"string"}]});Ext.define("Ssp.model.PersonLite",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"firstName",type:"string"},{name:"lastName",type:"string"},{name:"middleName",type:"string"},{name:"displayFullName",convert:function(b,a){return a.get("firstName")+" "+a.get("lastName")}}]});Ext.define("Ssp.model.PersonSearchLite",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"firstName",type:"string"},{name:"lastName",type:"string"},{name:"middleName",type:"string"},{name:"displayFullName",convert:function(b,a){return a.get("firstName")+" "+a.get("lastName")}}]});Ext.define("Ssp.model.tool.studentintake.StudentIntakeForm",{extend:"Ext.data.Model",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},fields:[{name:"person",convert:function(c,a){var b=Ext.create("Ssp.model.Person",{});b.populateFromGenericObject(c);return b}},{name:"personDemographics",convert:function(b,a){var c=Ext.create("Ssp.model.tool.studentintake.PersonDemographics",{});c.populateFromGenericObject(b);return c}},{name:"personEducationGoal",convert:function(c,b){var a=Ext.create("Ssp.model.tool.studentintake.PersonEducationGoal",{});a.populateFromGenericObject(c);return a}},{name:"personEducationPlan",convert:function(c,a){var b=Ext.create("Ssp.model.tool.studentintake.PersonEducationPlan",{});b.populateFromGenericObject(c);return b}},"personEducationLevels","personFundingSources","personChallenges","referenceData"],autoLoad:false,proxy:{type:"rest",url:"/ssp/api/1/tool/studentIntake/",actionMethods:{create:"POST",read:"GET",update:"PUT",destroy:"DELETE"},reader:{type:"json"},writer:{type:"json",successProperty:"success"}}});Ext.define("Ssp.model.tool.journal.JournalEntryDetail",{extend:"Ext.data.Model",fields:[{name:"group",type:"string"},{name:"id",type:"string"},{name:"name",type:"string"}]});Ext.define("Ssp.model.ApiUrl",{extend:"Ext.data.Model",fields:[{name:"name",type:"string"},{name:"url",type:"string"}]});Ext.define("Ssp.mixin.ApiProperties",{Extend:"Ext.Component",mixins:["Deft.mixin.Injectable"],config:{baseUrl:"",baseApiUrl:""},inject:{apiUrlStore:"apiUrlStore"},statics:{getBaseApiUrl:function(){var a="1";var b=document.getElementsByTagName("base")[0];if(b&&b.href&&(b.href.length>0)){b=b.href}else{b=document.URL}return b.substr(0,b.indexOf("/",b.indexOf("//")+2)+1)+Ext.Loader.getPath("ContextName")+"/api/"+a+"/"},getBaseAppUrl:function(){var a="1";var b=document.getElementsByTagName("base")[0];if(b&&b.href&&(b.href.length>0)){b=b.href}else{b=document.URL}return b.substr(0,b.indexOf("/",b.indexOf("//")+2)+1)+Ext.Loader.getPath("ContextName")}},initComponent:function(){var a=this;a.baseUrl=Ssp.mixin.ApiProperties.getBaseAppUrl();a.baseApiUrl=Ssp.mixin.ApiProperties.getBaseApiUrl();this.callParent(arguments)},getContext:function(){return Ssp.mixin.ApiProperties.getBaseAppUrl()},getAPIContext:function(){return Ssp.mixin.ApiProperties.getBaseApiUrl()},createUrl:function(a){return Ssp.mixin.ApiProperties.getBaseApiUrl()+a},getPagingSize:function(){return 20},getProxy:function(a){var b={type:"rest",url:this.createUrl(a),actionMethods:{create:"POST",read:"GET",update:"PUT",destroy:"DELETE"},reader:{type:"json",root:"rows",totalProperty:"results",successProperty:"success",message:"message"},writer:{type:"json",successProperty:"success"}};return b},makeRequest:function(b){var d=this;var e="application/json";var a=d.handleError;var c=d;if(b.failureFunc!=null){a=b.failureFunc}if(b.contentType!=null){e=b.contentType}if(b.scope!=undefined&&b.scope!=null){c=b.scope}Ext.Ajax.request({url:b.url,method:b.method,headers:{"Content-Type":e},jsonData:b.jsonData||"",success:b.successFunc,failure:a,scope:c},d)},handleError:function(a){var c=this;var d="Status Error: "+a.status+" - "+a.statusText;var b;if(a.status==403){Ext.Msg.confirm({title:"Access Denied Error",msg:"It looks like you are trying to access restricted information or your login session has expired. Would you like to login to continue working in SSP?",buttons:Ext.Msg.YESNO,fn:function(e){if(e=="yes"){window.location.reload()}else{window.location.reload()}},scope:c})}if(a.status==404){Ext.Msg.alert("SSP Error",d)}if(a.status==500){if(a.responseText!=null){if(a.responseText!=""){b=Ext.decode(a.responseText);if(b.message!=null){if(b.message!=""){d=d+" "+b.message;Ext.Msg.alert("SSP Error",d)}}else{Ext.Msg.alert("Internal Server Error - 500","Unable to determine the source of this error. See logs for additional details.")}}}}if(a.status==200){if(a.responseText!=null){if(a.responseText!=""){b=Ext.decode(a.responseText);if(b.message!=null){if(b.message!=""){d=d+" "+b.message;Ext.Msg.alert("SSP Error",d)}}}}}},getItemUrl:function(c){var a=this.apiUrlStore.findRecord("name",c);var b="";if(a!=null){b=a.get("url")}return b},getReporter:function(){return Ext.ComponentQuery.query("sspreport")[0]}});Ext.define("Ssp.util.FormRendererUtils",{extend:"Ext.Component",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController",errorsStore:"errorsStore"},config:{additionalFieldsKeySeparator:"_"},initComponent:function(){Ext.apply(Ext.form.field.VTypes,{mappedFieldValidator:function(e,c){var b=true;var d=new RegExp(c.validationExpression);var a=Ext.ComponentQuery.query("#"+c.parentId)[0];if(a!=null){if(a.getValue()==true){b=d.test(e)}}return b}});Ext.apply(Ext.form.field.VTypes,{forceDateValidator:function(e,c){var b=true;var d=new RegExp(/\d{4}\/\d{2}\/\d{2} \d{2}:\d{2}:\d{2}/);var a=c;if(a!=null){if(a.getValue()==true){b=d.test(e)}}return b}});return this.callParent(arguments)},constructor:function(){this.callParent(arguments);return this},cleanAll:function(a){if(a.items){if(a.items.length>0){a.removeAll(true)}}},cleanItems:function(a){var b=a.items.length;while(a.items.length>0){var c=a.items.getAt(b);if(c!=undefined){a.remove(c,true)}b=b-1}},getProfileFormItems:function(){var b=Ext.create("Ssp.util.TemplateDataUtil");var a=Ext.getStore("ApplicationForms");return b.prepareTemplateData(a)},createRadioButtonGroup:function(k){var m=this;var o=k.formId;var d=k.radioGroupId;var n=k.radioGroupFieldSetId;var i=k.selectedItemId;var e=k.additionalFieldsMap;var b=k.itemsArr;var l=k.idFieldName;var a=k.selectedIdFieldName;var f=k.selectedItemsArr[0];var c=Ext.getCmp(o);var h=Ext.getCmp(d);var j=b;var p=false;var g=[];var q=Ext.ComponentQuery.query("#"+n)[0];Ext.each(j,function(t,s){var u=t[l];var r={xtype:"mappedradiobutton"};r.id=u;r.boxLabel=t.name;r.name=a;r.inputValue=t[l];r.listeners={change:function(v,w,y,x){m.appEventsController.getApplication().fireEvent("dynamicCompChange",v)}};additionalFieldsArr=m.getMappedFields(u,e);Ext.each(additionalFieldsArr,function(x,v){var w=x.name.split(m.additionalFieldsKeySeparator);if(x.parentId==i){x.setValue(f[w[1]])}else{x.setValue("")}},this);m.hideEmptyFields(additionalFieldsArr);q.add(additionalFieldsArr);if(i==t[l]){r.checked=true}h.add(r)},this)},createForm:function(f){var r=this;var g=f.mainComponentType;var q=f.formId;var j=f.fieldSetTitle||null;var b=f.itemsArr;var l=f.selectedItemsArr||null;var k=f.idFieldName;var o=f.selectedIdFieldName;var p=f.additionalFieldsMap||[];var d=Ext.getCmp(q);var m=l;var a;var h;var n=false;var c="";var i={xtype:"fieldset",padding:0,border:0,layout:{type:"auto"},title:j};var e=[];var m=l||[];if(g=="radio"){this.createRadioButtonGroup(f)}else{Ext.each(b,function(B,v){var y=B[k];var u={xtype:"mappedcheckbox"};u.id=y;u.mapId=y;u.boxLabel=B.name;u.name=B.name;u.inputValue=y;u.listeners={change:function(s,z,F,E){r.appEventsController.getApplication().fireEvent("dynamicCompChange",s)}};var D=[];D.push(u);additionalFieldsArr=r.getMappedFields(y,p);for(var C=0;C<m.length;C++){a=m[C];h=a[o];if(h==B[k]){u.checked=true;for(var x=0;x<additionalFieldsArr.length;x++){var A=additionalFieldsArr[x];var w=A.name.split(r.additionalFieldsKeySeparator);if(A.parentId==h){A.setValue(a[w[1]])}else{A.setValue("")}}break}}this.hideEmptyFields(additionalFieldsArr);if(additionalFieldsArr.length>0){var t={xtype:"fieldset",padding:0,border:0,layout:{type:"auto"},title:""};Ext.Array.insert(D,1,additionalFieldsArr);Ext.apply(t,{items:D})}if(D.length>1){e.push(t)}else{e.push(u)}},r);d.removeAll();Ext.apply(i,{items:e});d.insert(d.items.length,i)}},hideEmptyFields:function(a){Ext.each(a,function(c,b){if(c.getValue()==""){c.hide();Ext.apply(c,{allowBlank:true})}else{c.show();Ext.apply(c,{allowBlank:false})}})},getMappedFields:function(c,b){var a=[];Ext.each(b,function(e,d){if(c==e.parentId){a.push(this.getFieldFromMap(e))}},this);return a},getFieldFromMap:function(d){var c=Ext.createWidget(d.fieldType.toLowerCase());var b="Not a valid input.";var a=c.validationExpression;if(d.validationExpression!=null){a=d.validationExpression}if(d.validationErrorMessage!=null){b=d.validationErrorMessage}Ext.apply(c,{parentId:d.parentId,name:d.parentId+this.additionalFieldsKeySeparator+d.name,fieldLabel:d.label,labelWidth:d.labelWidth,anchor:"100%",vtype:"mappedFieldValidator",vtypeText:b,validationExpression:a});c.on("hide",function(e,f){e.setValue("")});return c},isAdditionalFieldKey:function(a){var b=(a.indexOf(this.additionalFieldsKeySeparator)!=-1);return b},getMappedFieldValueFromFormValuesByIdKey:function(b,c){var a="";Ext.iterate(b,function(d,e){if(this.isAdditionalFieldKey(d)){keys=d.split(this.additionalFieldsKeySeparator);if(keys[0]==c){a=e}}},this);return a},getAdditionalFieldsArrayFromFormValues:function(b){var a=[];Ext.iterate(b,function(c,d){if(this.isAdditionalFieldKey(c)){keys=c.split(this.additionalFieldsKeySeparator);a.push({id:keys[0],name:keys[1],value:d})}},this);return a},dropAdditionalFieldsKeysFromFormValues:function(a){Ext.iterate(a,function(b,c){if(this.isAdditionalFieldKey(b)){delete a[b]}},this);return a},createTransferObjectsFromSelectedValues:function(b,f,e){var c=[];var a=this.formUtils;var d=[];additionalFieldsArr=this.getAdditionalFieldsArrayFromFormValues(f);f=this.dropAdditionalFieldsKeysFromFormValues(f);Ext.iterate(f,function(g,h){var i=new Object();i[b]=h;i.personId=e;Ext.Array.each(additionalFieldsArr,function(k,j){if(h==k.id){i[k.name]=k.value}},this);c.push(i)});return c},onMapFieldHidden:function(a,b){a.setValue("")},alphaSortByField:function(a,b){return Ext.Array.sort(a,function(d,c){var f=d[b].toLowerCase(),e=c[b].toLowerCase();if(f<e){return -1}if(f>e){return 1}return 0})},getSelectedValuesAsTransferObject:function(a,b){var d=[];for(prop in a){var c=Ext.create(b,{id:a[prop]});d.push(c.data)}return d},getSelectedIdsAsArray:function(b){var a=[];for(prop in b){a.push({id:b[prop]})}return a},loadDisplay:function(g,a,f,e){var d=null;var c=null;var b=Ext.ComponentQuery.query(g.toLowerCase())[0];if(b.items.length>0&&f==true){b.removeAll()}d=Ext.widget(a.toLowerCase(),e);b.add(d);return d},showHideFieldByStoreValue:function(i,h,a,g,d,e){var b="#"+i;var f=Ext.ComponentQuery.query(b)[0];var c=g.findRecord(d,e);if(h==c.get(a)){f.show()}else{f.hide()}},reconfigureGridPanel:function(c,a,b){var d=c,e=d.headerCt;if(d.lockable){d.reconfigureLockable(a,b)}else{if(b){e.suspendLayout=true;e.removeAll();e.add(b)}if(a){a=Ext.StoreManager.lookup(a);d.down("pagingtoolbar").bindStore(a);d.bindStore(a)}else{d.getView().refresh()}if(b){e.suspendLayout=false;d.forceComponentLayout()}}d.fireEvent("reconfigure",d)},validateForms:function(b){var d=this;var c;var a={fields:[],valid:true};Ext.Array.each(b,function(h,e){var i;if(h.isValid()==false){var g=d.findInvalidFields(h);if(g.items.length>0){Ext.Array.each(g.items,function(j,f){a.fields.push(d.cleanInvalidField(j))},d)}if(a.valid==true){a.valid=false;i=h.findInvalid()[0];if(i){i.ensureVisible()}}}});return a},findInvalidFields:function(a){return a.getFields().filterBy(function(c){var b=false;if(!c.validate()){b=true}return b})},cleanInvalidField:function(a){return new Ssp.model.FieldError({label:a.fieldLabel.replace(Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY,"","gi"),errorMessage:a.activeErrors.join(". ")})},displayErrors:function(a){this.errorsStore.loadData(a);Ext.create("Ssp.view.ErrorWindow",{height:300,width:500}).show()},displaySaveSuccessMessage:function(a){var b=a;var d=function(){b.hide()};var c=setTimeout(d,Ssp.util.Constants.DATA_SAVE_SUCCESS_MESSAGE_TIMEOUT);b.show()},fixDateOffset:function(a){return new Date(a.toUTCString().substr(0,25))},fixDateOffsetWithTime:function(a){return new Date(a.getUTCFullYear(),a.getUTCMonth(),a.getUTCDate(),a.getUTCHours(),a.getUTCMinutes(),a.getUTCSeconds())},dateWithin:function(d,g,h){var a,f,i;a=Date.parse(d);f=Date.parse(g);i=Date.parse(h);if((i<=f&&i>=a)){return true}return false},getSimpleItemsForDisplay:function(b,c,a){var d=this;var e=[];Ext.Array.each(c,function(i,g){var h={name:""};var f;if(i instanceof Object){f=b.getById(i.id)}else{f=b.getById(i)}if(f!=null){h={name:f.get("name")}}e.push(h)});if(e.length==0){e.push({name:"No "+a})}return e}});Ext.define("Ssp.util.ColumnRendererUtils",{extend:"Ext.Component",initComponent:function(){return this.callParent(arguments)},renderFriendlyBoolean:function(d,c,b){var a="";if(d!==null){if(d!==""){a=((d===true||d==="true")?"Yes":"No")}}return a},renderTaskName:function(d,b,a){var c='<div style="white-space:normal !important;">';c+="<p>"+a.get("name").toUpperCase()+"</p>";c+="<p>"+a.get("description")+"</p>";c+="</div>";return c},renderTaskDueDate:function(d,b,a){var c='<div style="white-space:normal !important;">';c+="<p>"+Ext.util.Format.date(a.get("dueDate"),"m/d/Y")+"</p>";c+="<p>"+((a.get("completedDate")!=null)?"COMPLETE":"ACTIVE")+"</p>";c+="<p>"+a.get("confidentialityLevel").name.toUpperCase()+"<br/>"+a.getCreatedByPersonName().toUpperCase()+"</p>";c+="</div>";return c},renderGoalName:function(d,b,a){var c='<div style="white-space:normal !important;">';c+="<p>"+a.get("name").toUpperCase()+"</p>";c+="<p>"+a.get("description")+"</p>";c+="</div>";return c},renderConfidentialityLevelName:function(d,b,a){var c='<div style="white-space:normal !important;">';c+="<p>"+a.get("confidentialityLevel").name.toUpperCase()+"</p>";c+="</div>";return c},renderCreatedByDate:function(c,b,a){return Ext.util.Format.date(a.get("createdDate"),"m/d/Y")},renderCreatedByDateWithTime:function(c,b,a){return Ext.util.Format.date(a.get("createdDate"),"m/d/Y g:i A")},renderCreatedBy:function(c,b,a){return a.get("createdBy").firstName.toUpperCase()+" "+a.get("createdBy").lastName.toUpperCase()},renderCreatedByDateAndName:function(d,b,a){var c='<div style="white-space:normal !important;">';c+="<p>"+a.get("createdBy").firstName.toUpperCase()+" "+a.get("createdBy").lastName.toUpperCase()+"</p>";c+="<p>"+Ext.util.Format.date(a.get("createdDate"),"m/d/Y")+"</p>";c+="</div>";return c},renderJournalSourceName:function(d,b,a){var c='<div style="white-space:normal !important;">';c+="<p>"+a.get("journalSource").name.toUpperCase()+"</p>";c+="</div>";return c},renderPhotoIcon:function(a){return'<img src="'+a+'">'},renderCoachName:function(d,b,a){var c="<div>";c+="<p>"+a.getCoachFullName()+"</p>";c+="</div>";return c},renderSearchStudentName:function(d,b,a){var c="<div>";c+="<p>"+a.getFullName()+"</p>";c+="</div>";return c},renderPersonFullName:function(d,b,a){var c="<div>";c+="<p>"+a.getPersonFullName()+"</p>";c+="</div>";return c},renderStudentDetails:function(d,b,a){var c="<div>";c+="<p>"+a.getFullName()+"</p>";c+="<p>COACH: "+a.getCoachFullName()+"</p>";c+="<p>ID: "+a.get("schoolId")+"</p>";c+="<p>STATUS: "+a.get("currentProgramStatusName")+"</p>";c+="</div>";return c},renderStudentType:function(d,b,a){var c="<div>";c+="<p>"+a.getStudentTypeName()+"</p>";c+="</div>";return c},renderAddToolIcon:function(d,e,a,f,c,b){return(a.get("active")==false)?"addToolIcon":"hideAddToolIcon"},renderErrorMessage:function(d,b,a){var c='<div style="white-space:normal !important;">';c+="<p>"+a.get("errorMessage")+"</p>";c+="</div>";return c},renderEarlyAlertStatus:function(e,c,b){var a=((b.get("closedDate")!=null)?"Closed":"Open");var d='<div style="white-space:normal !important;">';d+="<p>"+((b.get("nodeType").toLowerCase()=="early alert")?a:"N/A")+"</p>";d+="</div>";return d},getSelectedIdsForMultiSelect:function(a){var b=[];Ext.each(a,function(d,c){b.push(d.id)});return b}});Ext.define("Ssp.util.TreeRendererUtils",{extend:"Ext.Component",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",treeStore:"treeStore"},initComponent:function(){return this.callParent(arguments)},getNodeById:function(a){return this.treeStore.getNodeById(a)},clearRootCategories:function(){this.treeStore.setRootNode({text:"root",expanded:true,children:[]})},appendChildren:function(b,a){if(b==null){b=this.treeStore.getRootNode()}else{b.removeAll()}if(a.length>0){b.appendChild(a)}},getNameFromNodeId:function(b){var a=b.split("_");return a[1]},getIdFromNodeId:function(b){var a=b.split("_");return a[0]},createNodes:function(c,b){var a=[];Ext.each(c,function(e,d){a.push({text:c[d].get("name"),id:c[d].get("id"),leaf:b||false})});return a},createNodesFromJson:function(d,c,f,h,g,b,i,e){var k="";var h=h;var a=[];var j=f||"";if(j!=""){k="_"+j}Ext.each(d,function(n,m){var l={text:d[m].name,id:d[m].id+k,qtip:((i===true)?d[m][e]:""),leaf:c||false,expanded:g,expandable:b};if(h&&c==true){l.checked=false}a.push(l)});return a},getItems:function(o){var j=this;var e=o.get("destroyBeforeAppend");var b=o.get("url");var c=o.get("isLeaf");var i=o.get("enableCheckedItems");var h=o.get("nodeToAppendTo");var f=o.get("nodeType");var g=o.get("expanded");var a=o.get("expandable");var m=o.get("callbackFunc");var n=o.get("callbackScope");var l=o.get("removeParentWhenNoChildrenExist");var k=o.get("includeToolTip");var d=o.get("toolTipFieldName");j.apiProperties.makeRequest({url:j.apiProperties.createUrl(b),method:"GET",jsonData:"",successFunc:function(t,p){var u=Ext.decode(t.responseText);var s=u.rows;var q=[];if(s.length>0){q=j.createNodesFromJson(s,c,f,i,g,a,k,d);j.appendChildren(h,q)}else{j.appendChildren(h,[]);if(l==true){h.remove(true)}}if(m!=null&&m!=""){m(n)}}})},});Ext.define("Ssp.util.Constants",{extend:"Ext.Component",statics:{isRestrictedAdminItemId:function(b){var a=[Ssp.util.Constants.DISABILITY_AGENCY_OTHER_ID,Ssp.util.Constants.EDUCATION_GOAL_OTHER_ID,Ssp.util.Constants.EDUCATION_GOAL_MILITARY_ID,Ssp.util.Constants.EDUCATION_GOAL_BACHELORS_DEGREE_ID,Ssp.util.Constants.EDUCATION_LEVEL_NO_DIPLOMA_GED_ID,Ssp.util.Constants.EDUCATION_LEVEL_GED_ID,Ssp.util.Constants.EDUCATION_LEVEL_HIGH_SCHOOL_GRADUATION_ID,Ssp.util.Constants.EDUCATION_LEVEL_SOME_COLLEGE_CREDITS_ID,Ssp.util.Constants.EDUCATION_LEVEL_OTHER_ID,Ssp.util.Constants.FUNDING_SOURCE_OTHER_ID,Ssp.util.Constants.CHALLENGE_OTHER_ID,Ssp.util.Constants.OTHER_EARLY_ALERT_OUTCOME_ID,Ssp.util.Constants.OTHER_EARLY_ALERT_REASON_ID,Ssp.util.Constants.OTHER_EARLY_ALERT_SUGGESTION_ID,Ssp.util.Constants.EARLY_ALERT_JOURNAL_TRACK_ID,Ssp.util.Constants.ACTIVE_PROGRAM_STATUS_ID,Ssp.util.Constants.NO_SHOW_PROGRAM_STATUS_ID,Ssp.util.Constants.NON_PARTICIPATING_PROGRAM_STATUS_ID,Ssp.util.Constants.INACTIVE_PROGRAM_STATUS_ID,Ssp.util.Constants.TRANSITIONED_PROGRAM_STATUS_ID];return((Ext.Array.indexOf(a,b)!=-1)?true:false)},DEFAULT_SYSTEM_CONFIDENTIALITY_LEVEL_ID:"",DISABILITY_AGENCY_OTHER_ID:"224b03d9-90da-4f9c-8959-ea2e97661f40",EDUCATION_GOAL_OTHER_ID:"78b54da7-fb19-4092-bb44-f60485678d6b",EDUCATION_GOAL_MILITARY_ID:"6c466885-d3f8-44d1-a301-62d6fe2d3553",EDUCATION_GOAL_BACHELORS_DEGREE_ID:"efeb5536-d634-4b79-80bc-1e1041dcd3ff",EDUCATION_LEVEL_NO_DIPLOMA_GED_ID:"5d967ba0-e086-4426-85d5-29bc86da9295",EDUCATION_LEVEL_GED_ID:"710add1c-7b53-4cbe-86cb-8d7c5837d68b",EDUCATION_LEVEL_HIGH_SCHOOL_GRADUATION_ID:"f4780d23-fd8a-4758-b772-18606dca32f0",EDUCATION_LEVEL_SOME_COLLEGE_CREDITS_ID:"c5111182-9e2f-4252-bb61-d2cfa9700af7",EDUCATION_LEVEL_OTHER_ID:"247165ae-3db4-4679-ac95-ca96488c3b27",FUNDING_SOURCE_OTHER_ID:"365e8c95-f356-4f1f-8d79-4771ae8b0291",CHALLENGE_OTHER_ID:"365e8c95-f356-4f1f-8d79-4771ae8b0291",OTHER_EARLY_ALERT_OUTCOME_ID:"0a080114-3799-1bf5-8137-9a778e200004",OTHER_EARLY_ALERT_REASON_ID:"b2d11335-5056-a51a-80ea-074f8fef94ea",OTHER_EARLY_ALERT_SUGGESTION_ID:"b2d1120c-5056-a51a-80ea-c779a3109f8f",EARLY_ALERT_JOURNAL_TRACK_ID:"b2d07b38-5056-a51a-809d-81ea2f3b27bf",ACTIVE_PROGRAM_STATUS_ID:"b2d12527-5056-a51a-8054-113116baab88",NON_PARTICIPATING_PROGRAM_STATUS_ID:"b2d125c3-5056-a51a-8004-f1dbabde80c2",NO_SHOW_PROGRAM_STATUS_ID:"b2d12640-5056-a51a-80cc-91264965731a",INACTIVE_PROGRAM_STATUS_ID:"b2d125a4-5056-a51a-8042-d50b8eff0df1",TRANSITIONED_PROGRAM_STATUS_ID:"b2d125e3-5056-a51a-800f-6891bc7d1ddc",GRID_ITEM_DELETE_ICON_PATH:"/ssp/images/delete-icon.png",GRID_ITEM_EDIT_ICON_PATH:"/ssp/images/edit-icon.jpg",GRID_ITEM_CLOSE_ICON_PATH:"/ssp/images/close-icon.jpg",GRID_ITEM_MAIL_REPLY_ICON_PATH:"/ssp/images/mail-reply-icon.png",REQUIRED_ASTERISK_DISPLAY:'<span style="color: rgb(255, 0, 0); padding-left: 2px;">*</span>',SSP_LABEL_STYLE:"color:#04408c;",DATA_SAVE_SUCCESS_MESSAGE_STYLE:"font-weight: 'bold'; color: rgb(0, 0, 0); padding-left: 2px;",DATA_SAVE_SUCCESS_MESSAGE:"&#10003 Data was successfully saved",DATA_SAVE_SUCCESS_MESSAGE_TIMEOUT:3000},initComponent:function(){return this.callParent(arguments)}});Ext.define("Ssp.store.Caseload",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.CaseloadPerson",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){var a=this;Ext.apply(a,{proxy:a.apiProperties.getProxy(a.apiProperties.getItemUrl("personCaseload")),autoLoad:false,autoSync:false,pageSize:a.apiProperties.getPagingSize(),params:{page:0,start:0,limit:a.apiProperties.getPagingSize()}});return a.callParent(arguments)}});Ext.define("Ssp.store.JournalEntryDetails",{extend:"Ext.data.Store",model:"Ssp.model.tool.journal.JournalEntryDetail",groupField:"group"});Ext.define("Ssp.store.EarlyAlertCoordinators",{extend:"Ext.data.Store",model:"Ssp.model.PersonLite",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){var a=this;Ext.apply(a,{proxy:a.apiProperties.getProxy(a.apiProperties.getItemUrl("personCoach")+"/?sort=lastName"),autoLoad:false,pageSize:1000,params:{page:0,start:0,limit:1000}});return a.callParent(arguments)}});Ext.define("Ssp.store.admin.AdminTreeMenus",{extend:"Ext.data.TreeStore",mixins:["Deft.mixin.Injectable"],inject:{columnRendererUtils:"columnRendererUtils"},autoLoad:false,constructor:function(){var b=this;var a={text:"Administrative Tools",title:"Administrative Tools",form:"",expanded:true,children:[{text:"Student Success",title:"Student Success",form:"",expanded:false,children:[{text:"Campus Services",title:"Campus Services",store:"campusServices",form:"AbstractReferenceAdmin",leaf:true},{text:"LASSI Skill Components",title:"LASSI Skill Components",store:"lassis",form:"AbstractReferenceAdmin",leaf:true},{text:"Personality Types",title:"Personality Types",store:"personalityTypes",form:"AbstractReferenceAdmin",leaf:true}]},{text:"Disability Intake",title:"Disability Intake",form:"",expanded:false,children:[{text:"Disability Accommodations",title:"Disability Accommodations",store:"disabilityAccommodations",form:"AbstractReferenceAdmin",leaf:true,columns:[{header:"Name",dataIndex:"name",required:true,field:{xtype:"textfield"},flex:1},{header:"Additional Desc",required:true,dataIndex:"useDescription",flex:0.2,renderer:b.columnRendererUtils.renderFriendlyBoolean,field:{xtype:"checkbox"}},{header:"Desc Label",required:false,dataIndex:"descriptionFieldLabel",field:{xtype:"textfield"},flex:0.2},{header:"Long/Short Desc",required:false,dataIndex:"descriptionFieldType",field:{xtype:"textfield"},flex:0.2}]},{text:"Disability Agencies",title:"Disability Agencies",store:"disabilityAgencies",form:"AbstractReferenceAdmin",leaf:true},{text:"Disability Statuses",title:"Disability Statuses",store:"disabilityStatuses",form:"AbstractReferenceAdmin",leaf:true},{text:"Disability Types",title:"Disability Types",store:"disabilityTypes",form:"AbstractReferenceAdmin",leaf:true}]},{text:"Caseload",title:"Caseload",form:"",expanded:false,children:[{text:"Program Status Change Reasons",title:"Program Status Change Reasons",store:"programStatusChangeReasons",form:"AbstractReferenceAdmin",leaf:true}]},{text:"Caseload Assignment",title:"Caseload Assignment",form:"",expanded:false,children:[{text:"Referral Sources",title:"Referral Sources",store:"referralSources",form:"AbstractReferenceAdmin",leaf:true},{text:"Special Service Groups",title:"Special Service Groups",store:"specialServiceGroups",form:"AbstractReferenceAdmin",leaf:true},{text:"Service Reasons",title:"Service Reasons",store:"serviceReasons",form:"AbstractReferenceAdmin",leaf:true},{text:"Student Types",title:"Student Types",store:"studentTypes",form:"AbstractReferenceAdmin",leaf:true,columns:[{header:"Name",dataIndex:"name",required:true,field:{xtype:"textfield"},flex:0.25},{header:"Description",required:false,dataIndex:"description",field:{xtype:"textfield"},flex:1},{header:"Require Initial Appointment",required:true,dataIndex:"requireInitialAppointment",flex:0.25,renderer:b.columnRendererUtils.renderFriendlyBoolean,field:{xtype:"checkbox"}}]}]},{text:"Student Intake",title:"Student Intake",form:"",expanded:false,children:[{text:"Child Care Arrangements",title:"Child Care Arrangements",store:"childCareArrangements",form:"AbstractReferenceAdmin",leaf:true},{text:"Citizenships",title:"Citizenships",store:"citizenships",form:"AbstractReferenceAdmin",leaf:true},{text:"Confidentiality Disclosure Agreement",title:"Confidentiality Disclosure Agreement",store:"",form:"ConfidentialityDisclosureAgreementAdmin",leaf:true},{text:"Education Goals",title:"Education Goals",store:"educationGoals",form:"AbstractReferenceAdmin",leaf:true},{text:"Education Levels",title:"Education Levels",store:"educationLevels",form:"AbstractReferenceAdmin",leaf:true},{text:"Ethnicities",title:"Ethnicities",store:"ethnicities",form:"AbstractReferenceAdmin",leaf:true},{text:"Funding Sources",title:"Funding Sources",store:"fundingSources",form:"AbstractReferenceAdmin",leaf:true},{text:"Marital Statuses",title:"Marital Statuses",store:"maritalStatuses",form:"AbstractReferenceAdmin",leaf:true},{text:"Military Affiliations",title:"Military Affiliations",store:"militaryAffiliations",form:"AbstractReferenceAdmin",leaf:true},{text:"Student Statuses",title:"Student Statuses",store:"studentStatuses",form:"AbstractReferenceAdmin",leaf:true},{text:"Veteran Statuses",title:"Veteran Statuses",store:"veteranStatuses",form:"AbstractReferenceAdmin",leaf:true}]},{text:"Counseling Reference Guide",title:"Counseling Reference Guide",form:"",expanded:false,children:[{text:"Categories",title:"Categories",store:"challengeCategories",form:"AbstractReferenceAdmin",leaf:true},{text:"Challenges",title:"Challenges",store:"",form:"ChallengeAdmin",leaf:true},{text:"Referrals",title:"Referrals",store:"",form:"ChallengeReferralAdmin",leaf:true}]},{text:"MyGPS",title:"MyGPS",form:"",expanded:false,children:[{text:"Self Help Guides",title:"Self Help Guides",store:"selfHelpGuides",form:"selfhelpguideadmin",leaf:true}]},{text:"Security",title:"Security",form:"",expanded:false,children:[{text:"Confidentiality Levels",title:"Confidentiality Levels",store:"confidentialityLevels",form:"AbstractReferenceAdmin",leaf:true,columns:[{header:"Name",dataIndex:"name",required:true,field:{xtype:"textfield"},flex:50},{header:"Description",dataIndex:"description",flex:50,field:{xtype:"textfield"},flex:50},{header:"Acronym",dataIndex:"acronym",required:true,flex:50,field:{xtype:"textfield"}}]}]},{text:"Early Alert",title:"Early Alert",form:"",expanded:false,children:[{text:"Campuses",title:"Campuses",store:"",form:"CampusAdmin",leaf:true},{text:"Outcomes",title:"Outcomes",store:"earlyAlertOutcomes",form:"AbstractReferenceAdmin",leaf:true},{text:"Outreaches",title:"Outreaches",store:"earlyAlertOutreaches",form:"AbstractReferenceAdmin",leaf:true},{text:"Reasons",title:"Reasons",store:"earlyAlertReasons",form:"AbstractReferenceAdmin",leaf:true},{text:"Referrals",title:"Referrals",store:"earlyAlertReferrals",form:"AbstractReferenceAdmin",leaf:true,columns:[{header:"Name",dataIndex:"name",required:true,field:{xtype:"textfield"},flex:50},{header:"Description",required:false,dataIndex:"description",flex:50,field:{xtype:"textfield"},flex:50},{header:"Acronym",required:true,dataIndex:"acronym",flex:50,field:{xtype:"textfield"}}]},{text:"Suggestions",title:"Suggestions",store:"earlyAlertSuggestions",form:"AbstractReferenceAdmin",leaf:true}]},{text:"Journal",title:"Journal",form:"",expanded:false,children:[{text:"Sources",title:"Sources",store:"journalSources",form:"AbstractReferenceAdmin",leaf:true},{text:"Details",title:"Details",store:"",form:"JournalStepDetailAdmin",leaf:true},{text:"Steps",title:"Steps",store:"",form:"JournalStepAdmin",leaf:true},{text:"Tracks",title:"Tracks",store:"journalTracks",form:"AbstractReferenceAdmin",leaf:true}]}]};Ext.apply(b,{root:a,folderSort:true,sorters:[{property:"text",direction:"ASC"}]});return b.callParent(arguments)}});Ext.define("Ssp.store.PeopleSearchLite",{extend:"Ext.data.Store",model:"Ssp.model.PersonSearchLite",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){var a=this;Ext.apply(a,{proxy:a.apiProperties.getProxy(a.apiProperties.getItemUrl("personSearch")+"/?outsideCaseload=true&requireProgramStatus=false"),autoLoad:false,autoSync:false,pageSize:a.apiProperties.getPagingSize(),params:{page:0,start:0,limit:a.apiProperties.getPagingSize()}});return a.callParent(arguments)}});Ext.define("Ssp.store.Search",{extend:"Ext.data.Store",model:"Ssp.model.SearchPerson",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){var a=this;Ext.apply(a,{proxy:a.apiProperties.getProxy(a.apiProperties.getItemUrl("personSearch")),autoLoad:false,autoSync:false,pageSize:a.apiProperties.getPagingSize(),params:{page:0,start:0,limit:a.apiProperties.getPagingSize()}});return a.callParent(arguments)}});Ext.define("Ssp.service.AbstractService",{extend:"Ext.Component",initComponent:function(){return this.callParent(arguments)},filterInactiveChildren:function(a){var b=this;var c=new Array();if(a!=null){c=b.collectInactiveChildren(a)}Ext.Array.forEach(c,function(e,d){Ext.Array.remove(e.array,e.inactiveItem)});return a},collectInactiveChildren:function(a){var b=this;var c=[];Ext.Array.each(a,function(f,e){if(b.isItemInactive(f)){c.push({array:a,inactiveItem:f})}else{for(prop in f){if(f[prop] instanceof Array){var d=b.collectInactiveChildren(f[prop]);c=Ext.Array.merge(c,d)}}}});return c},isItemInactive:function(b){var a=false;for(prop in b){if(prop=="objectStatus"){if(b[prop].toLowerCase()=="inactive"){a=true}}}return a}});Ext.define("Ssp.service.AppointmentService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appointment:"currentAppointment",currentPersonAppointment:"currentPersonAppointment"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(c){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("personAppointment"));a=a.replace("{id}",c);return a},getCurrentAppointment:function(g,f){var e=this;var d=e.getBaseUrl(g);var c=new Ssp.model.Appointment();var b=new Ssp.model.PersonAppointment();var h=function(j,i){var k;if(j.responseText!=""){k=Ext.decode(j.responseText);if(k!=null){e.currentPersonAppointment.populateFromGenericObject(k);if(e.currentPersonAppointment.get("id")!=""){e.appointment.populateFromGenericObject({id:e.currentPersonAppointment.get("id"),appointmentDate:Ext.Date.clearTime(e.currentPersonAppointment.get("startTime"),true),startTime:e.currentPersonAppointment.get("startTime").getTime(),endTime:e.currentPersonAppointment.get("endTime").getTime()})}}}f.success(k,f.scope)};var a=function(i){e.apiProperties.handleError(i);f.failure(i,f.scope)};e.appointment.data=c.data;e.currentPersonAppointment.data=b.data;e.apiProperties.makeRequest({url:d+"/current",method:"GET",successFunc:h,failureFunc:a,scope:e})},saveAppointment:function(f,c,e){var d=this;var b=d.getBaseUrl(f);var g=function(i,h){var j=Ext.decode(i.responseText);e.success(j,e.scope)};var a=function(h){d.apiProperties.handleError(h);e.failure(h,e.scope)};if(f!=""){id=c.id;if(id==""){d.apiProperties.makeRequest({url:b,method:"POST",jsonData:c,successFunc:g,failureFunc:a,scope:d})}else{d.apiProperties.makeRequest({url:b+"/"+id,method:"PUT",jsonData:c,successFunc:g,failureFunc:a,scope:d})}}else{Ext.Msg.alert("SSP Error","Error determining student to which to save an appointment. Unable to save to appointment.")}}});Ext.define("Ssp.service.AssessmentService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(c){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("personAssessment"));a=a.replace("{id}",c);return a},getAll:function(e,d){var c=this;var b=c.getBaseUrl(e);var f=function(h,g){var i=Ext.decode(h.responseText);d.success(i,d.scope)};var a=function(g){c.apiProperties.handleError(g);d.failure(g,d.scope)};c.apiProperties.makeRequest({url:b,method:"GET",successFunc:f,failureFunc:a,scope:c})}});Ext.define("Ssp.service.CaseloadService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",store:"caseloadStore"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("personCaseload"));return a},getCaseload:function(c,b){var a=this;a.store.removeAll();Ext.apply(a.store.getProxy(),{url:a.getBaseUrl()+"?programStatusId="+c});a.store.load({callback:function(e,d,f){if(f){if(b!=null){b.success(e,b.scope)}}else{if(b!=null){b.failure(e,b.scope)}}},scope:a})},getCaseloadById:function(d,c){var b=this;var e=function(g,f){var h=Ext.decode(g.responseText);if(h.rows.length>0){b.store.removeAll();b.store.loadData(h.rows)}if(c!=null){c.success(h,c.scope)}};var a=function(f){b.apiProperties.handleError(f);if(c!=null){c.failure(f,c.scope)}};b.apiProperties.makeRequest({url:b.getBaseUrl()+"/"+d+"/caseload",method:"GET",successFunc:e,failureFunc:a,scope:b})}});Ext.define("Ssp.service.CampusService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",model:"currentCampus"},config:{personUrl:null},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(c){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("campus"));return a},getCampus:function(e,c){var b=this;var d=function(g,f){var i=Ext.decode(g.responseText);var h=new Ssp.model.reference.Campus();b.model.data=h.data;if(g.responseText!=""){i=Ext.decode(g.responseText);b.model.populateFromGenericObject(i)}c.success(i,c.scope)};var a=function(f){b.apiProperties.handleError(f);c.failure(f,c.scope)};b.apiProperties.makeRequest({url:b.getBaseUrl()+"/"+e,method:"GET",successFunc:d,failureFunc:a,scope:b})},saveCampus:function(c,e){var d=this;var g=c.id;var b=d.getBaseUrl();var f=function(i,h){var j=Ext.decode(i.responseText);e.success(j,e.scope)};var a=function(h){d.apiProperties.handleError(h);e.failure(h,e.scope)};if(g==""){d.apiProperties.makeRequest({url:b,method:"POST",jsonData:c,successFunc:f,failureFunc:a,scope:d})}else{d.apiProperties.makeRequest({url:b+"/"+g,method:"PUT",jsonData:c,successFunc:f,failureFunc:a,scope:d})}},destroy:function(e,c){var b=this;var d=function(g,f){var h=Ext.decode(g.responseText);c.success(h,e,c.scope)};var a=function(f){b.apiProperties.handleError(f);c.failure(f,c.scope)};b.apiProperties.makeRequest({url:b.getBaseUrl()+"/"+e,method:"DELETE",successFunc:d,failureFunc:a,scope:b})}});Ext.define("Ssp.service.CampusEarlyAlertRoutingService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",model:"currentCampusEarlyAlertRouting",store:"campusEarlyAlertRoutingsStore"},config:{personUrl:null},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(a){var c=this;var b=c.apiProperties.createUrl(c.apiProperties.getItemUrl("campusEarlyAlertRouting"));b=b.replace("{id}",a);return b},getCampusEarlyAlertRouting:function(a,g,e){var d=this;var c=d.getBaseUrl(a);var f=function(i,h){var k=Ext.decode(i.responseText);var j=new Ssp.model.reference.CampusEarlyAlertRouting();d.model.data=j.data;if(i.responseText!=""){k=Ext.decode(i.responseText);d.model.populateFromGenericObject(k)}e.success(k,e.scope)};var b=function(h){d.apiProperties.handleError(h);e.failure(h,e.scope)};d.apiProperties.makeRequest({url:c+"/"+g,method:"GET",successFunc:f,failureFunc:b,scope:d})},getAllCampusEarlyAlertRoutings:function(a,e){var d=this;var c=d.getBaseUrl(a);var f=function(h,g){var i=Ext.decode(h.responseText);if(h.responseText!=""){i=Ext.decode(h.responseText);d.store.loadData(i.rows)}e.success(i,e.scope)};var b=function(g){d.apiProperties.handleError(g);e.failure(g,e.scope)};d.apiProperties.makeRequest({url:c,method:"GET",successFunc:f,failureFunc:b,scope:d})},saveCampusEarlyAlertRouting:function(a,d,f){var e=this;var h=d.id;var c=e.getBaseUrl(a);var g=function(j,i){var k=Ext.decode(j.responseText);f.success(k,f.scope)};var b=function(i){e.apiProperties.handleError(i);f.failure(i,f.scope)};if(h==""){e.apiProperties.makeRequest({url:c,method:"POST",jsonData:d,successFunc:g,failureFunc:b,scope:e})}else{e.apiProperties.makeRequest({url:c+"/"+h,method:"PUT",jsonData:d,successFunc:g,failureFunc:b,scope:e})}},destroy:function(a,g,e){var d=this;var c=d.getBaseUrl(a);var f=function(i,h){var j=Ext.decode(i.responseText);e.success(j,g,e.scope)};var b=function(h){d.apiProperties.handleError(h);e.failure(h,e.scope)};d.apiProperties.makeRequest({url:c+"/"+g,method:"DELETE",successFunc:f,failureFunc:b,scope:d})}});Ext.define("Ssp.service.ConfidentialityDisclosureAgreementService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("confidentialityDisclosureAgreement"));return a},save:function(c,e){var d=this;var b=d.getBaseUrl();var f=function(h,g){var i=Ext.decode(h.responseText);e.success(i,e.scope)};var a=function(g){d.apiProperties.handleError(g);e.failure(g,e.scope)};id=c.id;if(id==""){d.apiProperties.makeRequest({url:b,method:"POST",jsonData:c,successFunc:f,failureFunc:a,scope:d})}else{d.apiProperties.makeRequest({url:b+"/"+id,method:"PUT",jsonData:c,successFunc:f,failureFunc:a,scope:d})}}});Ext.define("Ssp.service.EarlyAlertService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",earlyAlertOutcomesStore:"earlyAlertOutcomesStore",treeStore:"earlyAlertsTreeStore",treeUtils:"treeRendererUtils"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(c){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("personEarlyAlert"));a=a.replace("{personId}",c);return a},getAll:function(d,c){var b=this;var e=function(g,f){var h=Ext.decode(g.responseText);if(h.rows.length>0){b.populateEarlyAlerts(h.rows)}if(c!=null){c.success(h,c.scope)}};var a=function(f){b.apiProperties.handleError(f);if(c!=null){c.failure(f,c.scope)}};b.treeStore.setRootNode({text:"EarlyAlerts",leaf:false,expanded:false});b.apiProperties.makeRequest({url:b.getBaseUrl(d),method:"GET",successFunc:e,failureFunc:a,scope:b})},getAllEarlyAlertResponses:function(f,h,e){var d=this;var b="";var c=d.cleanResponses(h);var g=function(j,i){var k=Ext.decode(j.responseText);if(k.rows.length>0){d.populateEarlyAlertResponses(c,k.rows)}if(e!=null){e.success(k,e.scope)}};var a=function(i){d.apiProperties.handleError(i);if(e!=null){e.failure(i,e.scope)}};b=d.getBaseUrl(f);if(h!=null&&h!=""){d.apiProperties.makeRequest({url:b+"/"+h+"/response",method:"GET",successFunc:g,failureFunc:a,scope:d})}},populateEarlyAlerts:function(a){var b=this;Ext.Array.each(a,function(c,d){c.leaf=false;c.nodeType="early alert";c.gridDisplayDetails=c.courseName+" - "+c.courseTitle;c.expanded=false});b.treeStore.getRootNode().appendChild(a)},populateEarlyAlertResponses:function(c,a){var b=this;Ext.Array.each(a,function(d,e){d.leaf=true;d.nodeType="early alert response";d.gridDisplayDetails=b.earlyAlertOutcomesStore.getById(d.earlyAlertOutcomeId).get("name")});c.appendChild(a)},cleanResponses:function(b){var a=this;node=a.treeStore.getNodeById(b);node.removeAll();return node},save:function(f,c,e){var d=this;var h=c.id;var b=d.getBaseUrl(f);var g=function(j,i){var k=Ext.decode(j.responseText);e.success(k,e.scope)};var a=function(i){d.apiProperties.handleError(i);e.failure(i,e.scope)};if(h==""){d.apiProperties.makeRequest({url:b,method:"POST",jsonData:c,successFunc:g,failureFunc:a,scope:d})}else{d.apiProperties.makeRequest({url:b+"/"+h,method:"PUT",jsonData:c,successFunc:g,failureFunc:a,scope:d})}}});Ext.define("Ssp.service.EarlyAlertResponseService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(c,d){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("personEarlyAlertResponse"));a=a.replace("{personId}",c);a=a.replace("{earlyAlertId}",d);return a},save:function(e,g,b,d){var c=this;var h=b.id;var f=function(j,i){var k=Ext.decode(j.responseText);if(k.id.length>0){if(d!=null){d.success(k,d.scope)}}};var a=function(i){c.apiProperties.handleError(i);if(d!=null){d.failure(i,d.scope)}};if(h.length>0){this.apiProperties.makeRequest({url:c.getBaseUrl(e,g)+"/"+h,method:"PUT",jsonData:b,successFunc:f,failureFunc:a,scope:c})}else{this.apiProperties.makeRequest({url:c.getBaseUrl(e,g),method:"POST",jsonData:b,successFunc:f,failureFunc:a,scope:c})}}});Ext.define("Ssp.service.EarlyAlertReferralService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("earlyAlertReferral"));return a},getAll:function(c){var b=this;var d=function(f,e){var g=Ext.decode(f.responseText);c.success(g,c.scope)};var a=function(e){b.apiProperties.handleError(e);c.failure(e,c.scope)};b.apiProperties.makeRequest({url:b.getBaseUrl(),method:"GET",successFunc:d,failureFunc:a,scope:b})},save:function(c,e){var d=this;var b=d.getBaseUrl();var f=function(h,g){var i=Ext.decode(h.responseText);e.success(i,e.scope)};var a=function(g){d.apiProperties.handleError(g);e.failure(g,e.scope)};id=c.id;if(id==""){d.apiProperties.makeRequest({url:b,method:"POST",jsonData:c,successFunc:f,failureFunc:a,scope:d})}else{d.apiProperties.makeRequest({url:b+"/"+id,method:"PUT",jsonData:c,successFunc:f,failureFunc:a,scope:d})}}});Ext.define("Ssp.service.JournalEntryService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(c){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("personJournalEntry"));a=a.replace("{id}",c);return a},getAll:function(d,c){var b=this;var e=function(g,f){var h=Ext.decode(g.responseText);h.rows=b.superclass.filterInactiveChildren(h.rows);c.success(h,c.scope)};var a=function(f){b.apiProperties.handleError(f);c.failure(f,c.scope)};b.apiProperties.makeRequest({url:b.getBaseUrl(d),method:"GET",successFunc:e,failureFunc:a,scope:b})},save:function(f,c,e){var d=this;var b=d.getBaseUrl(f);var g=function(i,h){var j=Ext.decode(i.responseText);e.success(j,e.scope)};var a=function(h){d.apiProperties.handleError(h);e.failure(h,e.scope)};id=c.id;if(id==""){d.apiProperties.makeRequest({url:b,method:"POST",jsonData:c,successFunc:g,failureFunc:a,scope:d})}else{d.apiProperties.makeRequest({url:b+"/"+id,method:"PUT",jsonData:c,successFunc:g,failureFunc:a,scope:d})}},destroy:function(d,f,c){var b=this;var e=function(h,g){var i=Ext.decode(h.responseText);c.success(i,f,c.scope)};var a=function(g){b.apiProperties.handleError(g);c.failure(g,c.scope)};b.apiProperties.makeRequest({url:b.getBaseUrl(d)+"/"+f,method:"DELETE",successFunc:e,failureFunc:a,scope:b})}});Ext.define("Ssp.service.PersonService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",person:"currentPerson",sspConfig:"sspConfig"},config:{personUrl:null},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(c){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("person"));return a},get:function(e,c){var b=this;var d=function(g,f){var h=Ext.decode(g.responseText);if(g.responseText!=""){h=Ext.decode(g.responseText)}h=b.superclass.filterInactiveChildren([h])[0];c.success(h,c.scope)};var a=function(f){b.apiProperties.handleError(f);c.failure(f,c.scope)};b.apiProperties.makeRequest({url:b.getBaseUrl()+"/"+e,method:"GET",successFunc:d,failureFunc:a,scope:b})},getBySchoolId:function(b,d){var c=this;var e=function(g,f){var h;if(g!=null){if(g.responseText!=""){h=Ext.decode(g.responseText)}}h=c.superclass.filterInactiveChildren([h])[0];d.success(h,d.scope)};var a=function(f){c.apiProperties.handleError(f);d.failure(f,d.scope)};c.apiProperties.makeRequest({url:c.getBaseUrl()+"/bySchoolId/"+b,method:"GET",successFunc:e,failureFunc:a,scope:c})},save:function(c,e){var d=this;var g=c.id;var b=d.getBaseUrl();var f=function(i,h){var j=i.responseText?Ext.decode(i.responseText):null;if(e.statusCode[i.status]){e.statusCode[i.status](j,e.scope)}else{e.success(j,e.scope)}};var a=function(h){var i;if(e.statusCode[h.status]){e.statusCode[h.status](h,e.scope)}else{d.apiProperties.handleError(h);e.failure(h,e.scope)}};if(g==""){d.apiProperties.makeRequest({url:b,method:"POST",jsonData:c,successFunc:f,failureFunc:a,scope:d})}else{d.apiProperties.makeRequest({url:b+"/"+g,method:"PUT",jsonData:c,successFunc:f,failureFunc:a,scope:d})}},destroy:function(e,c){var b=this;var d=function(g,f){var h=Ext.decode(g.responseText);c.success(h,c.scope)};var a=function(f){b.apiProperties.handleError(f);c.failure(f,c.scope)};b.apiProperties.makeRequest({url:b.getBaseUrl()+"/"+e,method:"DELETE",successFunc:d,failureFunc:a,scope:b})}});Ext.define("Ssp.service.ProgramStatusService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",store:"programStatusesStore"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("programStatus"));return a},getAll:function(c){var b=this;var d=function(f,e){var g=Ext.decode(f.responseText);if(g.rows.length>0){b.store.removeAll();b.store.loadData(g.rows)}if(c!=null){c.success(g,c.scope)}};var a=function(e){b.apiProperties.handleError(e);if(c!=null){c.failure(e,c.scope)}};b.apiProperties.makeRequest({url:b.getBaseUrl(),method:"GET",successFunc:d,failureFunc:a,scope:b})}});Ext.define("Ssp.service.ReferralSourceService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("referralSource"));return a},getAll:function(c){var b=this;var d=function(f,e){var g=Ext.decode(f.responseText);c.success(g,c.scope)};var a=function(e){b.apiProperties.handleError(e);c.failure(e,c.scope)};b.apiProperties.makeRequest({url:b.getBaseUrl(),method:"GET",successFunc:d,failureFunc:a,scope:b})},save:function(c,e){var d=this;var b=d.getBaseUrl();var f=function(h,g){var i=Ext.decode(h.responseText);e.success(i,e.scope)};var a=function(g){d.apiProperties.handleError(g);e.failure(g,e.scope)};id=c.id;if(id==""){d.apiProperties.makeRequest({url:b,method:"POST",jsonData:c,successFunc:f,failureFunc:a,scope:d})}else{d.apiProperties.makeRequest({url:b+"/"+id,method:"PUT",jsonData:c,successFunc:f,failureFunc:a,scope:d})}}});Ext.define("Ssp.service.SearchService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",store:"searchStore"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("personSearch"));return a},searchWithParams:function(d,b){var a=this;a.store.removeAll();queryStr="";for(var c in d){if(queryStr){queryStr+="&"}queryStr+=c+"="+d[c]}if(!("sort" in d)){if(queryStr){queryStr+="&"}queryStr+="sort=lastName"}Ext.apply(a.store.getProxy(),{url:a.getBaseUrl()+"?"+queryStr});a.store.load({params:{},callback:function(f,e,g){if(g){if(b!=null){b.success(f,b.scope)}}else{if(b!=null){b.failure(f,b.scope)}}},scope:a})},search:function(a,d,c){var b=this;b.searchWithParams({searchTerm:a,outsideCaseload:d},c)}});Ext.define("Ssp.service.SpecialServiceGroupService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("specialServiceGroup"));return a},getAll:function(c){var b=this;var d=function(f,e){var g=Ext.decode(f.responseText);c.success(g,c.scope)};var a=function(e){b.apiProperties.handleError(e);c.failure(e,c.scope)};b.apiProperties.makeRequest({url:b.getBaseUrl(),method:"GET",successFunc:d,failureFunc:a,scope:b})},save:function(c,e){var d=this;var b=d.getBaseUrl();var f=function(h,g){var i=Ext.decode(h.responseText);e.success(i,e.scope)};var a=function(g){d.apiProperties.handleError(g);e.failure(g,e.scope)};id=c.id;if(id==""){d.apiProperties.makeRequest({url:b,method:"POST",jsonData:c,successFunc:f,failureFunc:a,scope:d})}else{d.apiProperties.makeRequest({url:b+"/"+id,method:"PUT",jsonData:c,successFunc:f,failureFunc:a,scope:d})}}});Ext.define("Ssp.service.StudentIntakeService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("studentIntakeTool"));return a},get:function(e,d){var c=this;var b=c.getBaseUrl();var f=function(h,g){var i=Ext.decode(h.responseText);i.personEducationLevels=c.superclass.filterInactiveChildren(i.personEducationLevels);i.personFundingSources=c.superclass.filterInactiveChildren(i.personFundingSources);i.personChallenges=c.superclass.filterInactiveChildren(i.personChallenges);d.success(i,d.scope)};var a=function(g){c.apiProperties.handleError(g);d.failure(g,d.scope)};c.apiProperties.makeRequest({url:b+"/"+e,method:"GET",successFunc:f,failureFunc:a,scope:c})},save:function(f,c,e){var d=this;var b=d.getBaseUrl();var g=function(i,h){var j=Ext.decode(i.responseText);e.success(j,e.scope)};var a=function(h){d.apiProperties.handleError(h);e.failure(h,e.scope)};if(f==""){d.apiProperties.makeRequest({url:b,method:"POST",jsonData:c,successFunc:g,failureFunc:a,scope:d})}else{d.apiProperties.makeRequest({url:b+"/"+f,method:"PUT",jsonData:c,successFunc:g,failureFunc:a,scope:d})}}});Ext.define("Ssp.service.TranscriptService",{extend:"Ssp.service.AbstractService",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},initComponent:function(){return this.callParent(arguments)},getBaseUrl:function(c){var b=this;var a=b.apiProperties.createUrl(b.apiProperties.getItemUrl("personTranscript"));a=a.replace("{id}",c);return a},getFull:function(e,d){var c=this;var b=c.getBaseUrl(e);var f=function(h,g){var i=Ext.decode(h.responseText);d.success(i,d.scope)};var a=function(g){c.apiProperties.handleError(g);d.failure(g,d.scope)};c.apiProperties.makeRequest({url:b+"/full",method:"GET",successFunc:f,failureFunc:a,scope:c})}});Ext.define("Ssp.controller.ApplicationEventsController",{extend:"Ext.Base",config:{app:null},constructor:function(a){this.initConfig(a);return this.callParent(arguments)},setApplication:function(a){this.app=a},getApplication:function(){return this.app},assignEvent:function(a){if(!this.getApplication().hasListener(a.eventName)){this.getApplication().addListener(a.eventName,a.callBackFunc,a.scope)}},removeEvent:function(a){if(this.getApplication().hasListener(a.eventName)){this.getApplication().removeListener(a.eventName,a.callBackFunc,a.scope)}}});Ext.define("Ssp.controller.AdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{campusesStore:"campusesStore",campusServicesStore:"campusServicesStore",challengeCategoriesStore:"challengeCategoriesStore",challengesStore:"challengesStore",challengeReferralsStore:"challengeReferralsStore",childCareArrangementsStore:"childCareArrangementsStore",citizenshipsStore:"citizenshipsStore",confidentialityLevelsStore:"confidentialityLevelsStore",disabilityAccommodationsStore:"disabilityAccommodationsStore",disabilityAgenciesStore:"disabilityAgenciesStore",disabilityStatusesStore:"disabilityStatusesStore",disabilityTypesStore:"disabilityTypesStore",earlyAlertOutcomesStore:"earlyAlertOutcomesStore",earlyAlertOutreachesStore:"earlyAlertOutreachesStore",earlyAlertReasonsStore:"earlyAlertReasonsStore",earlyAlertReferralsStore:"earlyAlertReferralsStore",earlyAlertSuggestionsStore:"earlyAlertSuggestionsStore",educationGoalsStore:"educationGoalsStore",educationLevelsStore:"educationLevelsStore",employmentShiftsStore:"employmentShiftsStore",ethnicitiesStore:"ethnicitiesStore",formUtils:"formRendererUtils",fundingSourcesStore:"fundingSourcesStore",gendersStore:"gendersStore",journalSourcesStore:"journalSourcesStore",journalStepsStore:"journalStepsStore",journalTracksStore:"journalTracksStore",lassisStore:"lassisStore",maritalStatusesStore:"maritalStatusesStore",militaryAffiliationsStore:"militaryAffiliationsStore",personalityTypesStore:"personalityTypesStore",programStatusChangeReasonsStore:"programStatusChangeReasonsStore",referralSourcesStore:"referralSourcesStore",serviceReasonsStore:"serviceReasonsStore",specialServiceGroupsStore:"specialServiceGroupsStore",statesStore:"statesStore",studentStatusesStore:"studentStatusesStore",studentTypesStore:"studentTypesStore",veteranStatusesStore:"veteranStatusesStore"},control:{view:{itemclick:"onItemClick"}},init:function(){return this.callParent(arguments)},onItemClick:function(b,a,f,d,g){var c="";var e=null;if(a.raw!=undefined){if(a.raw.form!=""){if(a.raw.store!=""){c=a.raw.store}if(a.raw.columns!=null){e=a.raw.columns}this.loadAdmin(a.raw.title,a.raw.form,c,e)}}},loadAdmin:function(g,f,c,d){var e=this;var b=this.formUtils.loadDisplay("adminforms",f,true,{});var a=null;if(c!=""){a=e[c+"Store"];if(a!=null){if(d!=null){e.formUtils.reconfigureGridPanel(b,a,d)}else{e.formUtils.reconfigureGridPanel(b,a)}b.getStore().load()}}if(Ext.isFunction(b.setTitle)){b.setTitle(g+" Admin")}}});Ext.define("Ssp.controller.MainViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController",formUtils:"formRendererUtils"},config:{personButtonsVisible:true},control:{view:{add:"setListeners"},studentViewNav:{click:"onStudentRecordViewNavClick"},adminViewNav:{click:"onAdminViewNavClick"}},init:function(){this.displayStudentRecordView();return this.callParent(arguments)},setListeners:function(a,c,b,d){if(c instanceof Ext.ClassManager.get("Ssp.view.tools.profile.Profile")){this.appEventsController.assignEvent({eventName:"displayStudentRecordView",callBackFunc:this.onDisplayStudentRecordView,scope:this})}},destroy:function(){this.appEventsController.removeEvent({eventName:"displayStudentRecordView",callBackFunc:this.onDisplayStudentRecordView,scope:this});return this.callParent(arguments)},onDisplayStudentRecordView:function(){this.displayStudentRecordView()},onStudentRecordViewNavClick:function(a,b){this.displayStudentRecordView()},onAdminViewNavClick:function(a,b){this.displayAdminView()},displayStudentRecordView:function(){var c=this;var b=Ext.ComponentQuery.query("mainview")[0];var a;if(b.items.length>0){b.removeAll()}a=[{xtype:"search",flex:2},{xtype:"studentrecord",flex:4}];b.add(a)},displayAdminView:function(){var c=this;var b=Ext.ComponentQuery.query("mainview")[0];var a;if(b.items.length>0){b.removeAll()}a=[{xtype:"adminmain",items:[{xtype:"admintreemenu",region:"west",width:275},{xtype:"adminforms",region:"center"}],flex:5}];b.add(a)}});Ext.define("Ssp.controller.SearchViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",authenticatedPerson:"authenticatedPerson",caseloadFilterCriteria:"caseloadFilterCriteria",caseloadStore:"caseloadStore",caseloadService:"caseloadService",columnRendererUtils:"columnRendererUtils",formUtils:"formRendererUtils",person:"currentPerson",personLite:"personLite",personService:"personService",personProgramStatusService:"personProgramStatusService",preferences:"preferences",programStatusesStore:"programStatusesStore",programStatusService:"programStatusService",searchCriteria:"searchCriteria",searchService:"searchService",searchStore:"searchStore",sspConfig:"sspConfig"},control:{view:{selectionchange:"onSelectionChange",viewready:"onViewReady"},caseloadStatusCombo:{selector:"#caseloadStatusCombo",listeners:{select:"onCaseloadStatusComboSelect"}},retrieveCaseloadButton:{click:"onRetrieveCaseloadClick"},searchGridPager:"#searchGridPager",searchText:{selector:"#searchText",listeners:{keypress:"onSearchKeyPress"}},searchCaseloadCheck:"#searchCaseloadCheck",searchBar:"#searchBar",caseloadBar:"#caseloadBar",searchButton:{click:"onSearchClick"},displaySearchBarButton:{click:"onDisplaySearchBarClick"},displayCaseloadBarButton:{click:"onDisplayCaseloadBarClick"},addPersonButton:{selector:"#addPersonButton",listeners:{click:"onAddPersonClick"}},editPersonButton:{selector:"#editPersonButton",listeners:{click:"onEditPersonClick"}},deletePersonButton:{selector:"#deletePersonButton",listeners:{click:"onDeletePersonClick"}},setTransitionStatusButton:{click:"onSetProgramStatusClick"},setNonParticipatingStatusButton:{click:"onSetProgramStatusClick"},setNoShowStatusButton:{click:"onSetProgramStatusClick"},setActiveStatusButton:{click:"onSetProgramStatusClick"}},init:function(){var a=this;a.personLite.set("id","");a.getSearchText().setValue(a.searchCriteria.get("searchTerm"));a.getSearchCaseloadCheck().setValue(!a.searchCriteria.get("outsideCaseload"));return a.callParent(arguments)},onSelectionChange:function(b,a,d){var e=this;var c=new Ssp.model.Person();e.person.data=c.data;if(a.length>0){if(a[0].data.id!=null){e.personLite.set("id",a[0].data.id)}else{e.personLite.set("id",a[0].data.personId)}e.personLite.set("firstName",a[0].data.firstName);e.personLite.set("middleName",a[0].data.middleName);e.personLite.set("lastName",a[0].data.lastName);e.personLite.set("displayFullName",a[0].data.firstName+" "+a[0].data.lastName);e.appEventsController.getApplication().fireEvent("loadPerson")}},onViewReady:function(b,a){var c=this;c.appEventsController.assignEvent({eventName:"collapseSearch",callBackFunc:c.onCollapseSearch,scope:c});c.appEventsController.assignEvent({eventName:"collapseStudentRecord",callBackFunc:c.onCollapseStudentRecord,scope:c});c.appEventsController.assignEvent({eventName:"expandStudentRecord",callBackFunc:c.onExpandStudentRecord,scope:c});c.appEventsController.assignEvent({eventName:"setNonParticipatingProgramStatusComplete",callBackFunc:c.onSetNonParticipatingProgramStatusComplete,scope:c});c.initSearchGrid();c.getProgramStatuses()},destroy:function(){var a=this;a.appEventsController.removeEvent({eventName:"collapseSearch",callBackFunc:a.onCollapseSearch,scope:a});a.appEventsController.removeEvent({eventName:"collapseStudentRecord",callBackFunc:a.onCollapseStudentRecord,scope:a});a.appEventsController.removeEvent({eventName:"expandStudentRecord",callBackFunc:a.onExpandStudentRecord,scope:a});a.appEventsController.removeEvent({eventName:"retrieveCaseload",callBackFunc:a.onRetrieveCaseload,scope:a});return a.callParent(arguments)},initSearchGrid:function(){var a=this;if(a.preferences.get("SEARCH_GRID_VIEW_TYPE")==0){a.search();a.displaySearchBar()}else{if(a.authenticatedPerson.hasAccess("CASELOAD_FILTERS")){a.preferences.set("SEARCH_GRID_VIEW_TYPE",1);if(a.caseloadFilterCriteria.get("programStatusId")==""){a.caseloadFilterCriteria.set("programStatusId",Ssp.util.Constants.ACTIVE_PROGRAM_STATUS_ID)}a.getCaseload();a.displayCaseloadBar()}else{a.search();a.displaySearchBar()}}},selectFirstItem:function(){var a=this;if(a.getView().getStore().getCount()>0){a.getView().getSelectionModel().select(0)}else{a.personLite.set("id","");a.appEventsController.getApplication().fireEvent("loadPerson")}a.refreshPagingToolBar()},onCollapseStudentRecord:function(){},onExpandStudentRecord:function(){},setGridView:function(a){var b=this;b.applyColumns()},onCollapseSearch:function(){console.log("search collapse");var a=Ext.ComponentQuery.query("search")[0];a.collapse()},onDisplaySearchBarClick:function(a){this.displaySearchBar()},onDisplayCaseloadBarClick:function(a){this.displayCaseloadBar()},displaySearchBar:function(){var a=this;a.preferences.set("SEARCH_GRID_VIEW_TYPE",0);a.getCaseloadBar().hide();a.getSearchBar().show();a.setGridView()},displayCaseloadBar:function(){var a=this;a.preferences.set("SEARCH_GRID_VIEW_TYPE",1);a.getCaseloadBar().show();a.getSearchBar().hide();a.setGridView()},applyColumns:function(){var e=this;var b=e.getView();var a;var c=false;var d=e.sspConfig.get("studentIdAlias");if(e.preferences.get("SEARCH_GRID_VIEW_TYPE")==1){a=e.caseloadStore;columns=[{sortable:c,header:"First",dataIndex:"firstName",flex:1},{sortable:c,header:"MI",dataIndex:"middleName",flex:0.2},{sortable:c,header:"Last",dataIndex:"lastName",flex:1},{sortable:c,header:"Type",dataIndex:"studentType",renderer:e.columnRendererUtils.renderStudentType,flex:0.2},{sortable:c,header:d,dataIndex:"schoolId",flex:1},{sortable:c,header:"Alerts",dataIndex:"numberOfEarlyAlerts",flex:0.2}]}else{a=e.searchStore;columns=[{sortable:c,header:"First",dataIndex:"firstName",flex:0.2},{sortable:c,header:"MI",dataIndex:"middleName",flex:0.05},{sortable:c,header:"Last",dataIndex:"lastName",flex:0.2},{sortable:c,header:"Coach",dataIndex:"coach",renderer:e.columnRendererUtils.renderCoachName,flex:0.25},{sortable:c,header:d,dataIndex:"schoolId",flex:0.15},{sortable:c,header:"Status",dataIndex:"currentProgramStatusName",flex:0.15}]}b.getView().getRowClass=function(j,i){var g="";var h=Ext.Date.clearTime(new Date());var f=Ext.Date.clearTime(new Date());f.setDate(h.getDate()+1);if(j.get("currentAppointmentStartTime")!=null){if(e.formUtils.dateWithin(h,f,j.get("currentAppointmentStartTime"))){g="caseload-appointment-indicator"}}if(j.get("numberOfEarlyAlerts")!=null){if(j.get("numberOfEarlyAlerts")>0){g="caseload-early-alert-indicator"}}return g};e.formUtils.reconfigureGridPanel(b,a,columns)},onAddPersonClick:function(a){var b=this;b.onAddPerson()},onEditPersonClick:function(a){var b=this;b.onEditPerson()},onDeletePersonClick:function(a){var b=this;b.onDeletePerson()},onAddPerson:function(){var b=this;var a=new Ssp.model.Person();b.person.data=a.data;b.personLite.set("id","");b.loadCaseloadAssignment()},onEditPerson:function(){var b=this;var a=this.getView().getSelectionModel().getSelection();if(a.length>0){b.loadCaseloadAssignment()}else{Ext.Msg.alert("Error","Please select a student to edit.")}},onDeletePerson:function(){var a=this.getView().getSelectionModel().getSelection();if(a.length>0){this.deleteConfirmation()}else{Ext.Msg.alert("Error","Please select a student to delete.")}},deleteConfirmation:function(){var b='You are about to delete the student: "'+this.person.getFullName()+'". Would you like to continue?';var a=this.person;if(a.get("id")!=""){Ext.Msg.confirm({title:"Delete Student?",msg:b,buttons:Ext.Msg.YESNO,fn:this.deletePerson,scope:this})}else{Ext.Msg.alert("SSP Error","Unable to delete student.")}},deletePerson:function(c){var a=this;var b=a.personLite.get("id");if(c=="yes"){a.getView().setLoading(true);a.personService.destroy(b,{success:a.deletePersonSuccess,failure:a.deletePersonFailure,scope:a})}},deletePersonSuccess:function(d,b){var c=b;var a=c.searchStore;var e=c.personLite.get("id");c.getView().setLoading(false);a.remove(a.getById(e))},deletePersonFailure:function(c,a){var b=a;b.getView().setLoading(false)},refreshPagingToolBar:function(){this.getSearchGridPager().onLoad()},loadCaseloadAssignment:function(){var a=this.formUtils.loadDisplay("mainview","caseloadassignment",true,{flex:1})},onSetProgramStatusClick:function(a){var b=this;var c=a.action;switch(c){case"active":b.setProgramStatus(c);break;case"no-show":b.setProgramStatus(c);break;case"transition":break;case"non-participating":Ext.create("Ssp.view.ProgramStatusChangeReasonWindow",{height:150,width:500}).show();break}},setProgramStatus:function(c){var b=this;var a=b.personLite.get("id");var d="";if(a!=""){if(c=="active"){d=Ssp.util.Constants.ACTIVE_PROGRAM_STATUS_ID}if(c=="no-show"){d=Ssp.util.Constants.NO_SHOW_PROGRAM_STATUS_ID}personProgramStatus=new Ssp.model.PersonProgramStatus();personProgramStatus.set("programStatusId",d);personProgramStatus.set("effectiveDate",Ext.Date.now());b.personProgramStatusService.save(a,personProgramStatus.data,{success:b.saveProgramStatusSuccess,failure:b.saveProgramStatusFailure,scope:b})}else{Ext.Msg.alert("SSP Error","Unable to determine student to set to No-Show status")}},saveProgramStatusSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.initSearchGrid()},saveProgramStatusFailure:function(c,a){var b=a;b.getView().setLoading(false)},onSetNonParticipatingProgramStatusComplete:function(){this.initSearchGrid()},onSearchClick:function(a){var b=this;b.setSearchCriteria();if(b.searchCriteria.get("searchTerm")!=""){b.search()}else{b.clearSearch()}},setSearchCriteria:function(){var b=this;var c=!b.getSearchCaseloadCheck().getValue();var a=b.getSearchText().value;b.searchCriteria.set("searchTerm",a);b.searchCriteria.set("outsideCaseload",c)},clearSearch:function(){var a=this;a.searchStore.removeAll();a.searchStore.totalCount=0;a.getSearchGridPager().onLoad()},onSearchKeyPress:function(a,c){var b=this;if(c.getKey()==c.ENTER){b.setSearchCriteria();if(b.searchCriteria.get("searchTerm")!=""){b.search()}else{b.clearSearch()}}},search:function(){var a=this;a.preferences.set("SEARCH_GRID_VIEW_TYPE",0);a.setGridView();if(a.searchCriteria.get("searchTerm")!=""){a.getView().setLoading(true);a.searchService.search(a.searchCriteria.get("searchTerm"),a.searchCriteria.get("outsideCaseload"),{success:a.searchSuccess,failure:a.searchFailure,scope:a})}},searchSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.selectFirstItem();b.getSearchGridPager().onLoad()},searchFailure:function(c,a){var b=a;b.getView().setLoading(false)},onRetrieveCaseloadClick:function(a){var b=this;b.getCaseload()},onCaseloadStatusComboSelect:function(b,a,c){var d=this;if(a.length>0){d.caseloadFilterCriteria.set("programStatusId",a[0].get("id"))}},getProgramStatuses:function(){var a=this;a.programStatusService.getAll({success:a.getProgramStatusesSuccess,failure:a.getProgramStatusesFailure,scope:a})},getProgramStatusesSuccess:function(e,b){var d=b;var c="";var a;if(d.programStatusesStore.getCount()>0){d.getCaseloadStatusCombo().setValue(d.caseloadFilterCriteria.get("programStatusId"))}},getProgramStatusesFailure:function(c,a){var b=a},getCaseload:function(){var a=this;a.preferences.set("SEARCH_GRID_VIEW_TYPE",1);a.setGridView();a.getView().setLoading(true);a.caseloadService.getCaseload(a.caseloadFilterCriteria.get("programStatusId"),{success:a.getCaseloadSuccess,failure:a.getCaseloadFailure,scope:a})},getCaseloadSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.selectFirstItem();b.getSearchGridPager().onLoad()},getCaseloadFailure:function(c,a){var b=a;b.getView().setLoading(false)}});Ext.define("Ssp.controller.StudentRecordViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController"},control:{view:{collapse:"onCollapsed",expand:"onExpanded"}},init:function(){return this.callParent(arguments)},onCollapsed:function(){this.appEventsController.getApplication().fireEvent("collapseStudentRecord")},onExpanded:function(){this.appEventsController.getApplication().fireEvent("expandStudentRecord")}});Ext.define("Ssp.controller.ProgramStatusChangeReasonWindowViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController",personLite:"personLite",programStatusChangeReasonsStore:"programStatusChangeReasonsStore",personProgramStatusService:"personProgramStatusService"},control:{view:{show:"onShow"},saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"},programStatusChangeReasonCombo:"#programStatusChangeReasonCombo"},init:function(){var a=this;return a.callParent(arguments)},onShow:function(){var a=this;a.getProgramStatusChangeReasonCombo().reset();a.programStatusChangeReasonsStore.load({params:{start:0,limit:50}})},onSaveClick:function(a){var d=this;var c=d.personLite.get("id");var b=d.getProgramStatusChangeReasonCombo().isValid();var e=d.getProgramStatusChangeReasonCombo().value;if(b&&e!=""){if(c!=""){personProgramStatus=new Ssp.model.PersonProgramStatus();personProgramStatus.set("programStatusId",Ssp.util.Constants.NON_PARTICIPATING_PROGRAM_STATUS_ID);personProgramStatus.set("effectiveDate",new Date());personProgramStatus.set("programStatusChangeReasonId",e);d.getView().setLoading(true);d.personProgramStatusService.save(c,personProgramStatus.data,{success:d.saveProgramStatusSuccess,failure:d.saveProgramStatusFailure,scope:d})}else{Ext.Msg.alert("SSP Error","Unable to determine student to set to No-Show status")}}else{Ext.Msg.alert("SSP Error","Please correct the hilited errors in the form")}},saveProgramStatusSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.appEventsController.getApplication().fireEvent("setNonParticipatingProgramStatusComplete");b.close()},saveProgramStatusFailure:function(c,a){var b=a;b.getView().setLoading(false)},onCancelClick:function(a){this.close()},close:function(){this.getView().close()}});Ext.define("Ssp.controller.person.CaseloadAssignmentViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appointmentService:"appointmentService",appEventsController:"appEventsController",apiProperties:"apiProperties",appointment:"currentAppointment",formUtils:"formRendererUtils",person:"currentPerson",personLite:"personLite",personService:"personService",personProgramStatusService:"personProgramStatusService",currentPersonAppointment:"currentPersonAppointment"},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"},printButton:{click:"onPrintClick"},emailButton:{click:"onEmailClick"},resetActiveStatusCheck:"#resetActiveStatusCheck"},init:function(){var a=this;a.resetAppointmentModels();var b=a.personLite.get("id");if(b.length>0){a.getView().setLoading(true);a.personService.get(b,{success:a.getPersonSuccess,failure:a.getPersonFailure,scope:a})}else{a.initForms();a.updateTitle()}a.appEventsController.assignEvent({eventName:"studentNameChange",callBackFunc:this.onPersonNameChange,scope:this});return this.callParent(arguments)},resetAppointmentModels:function(){var c=this;var b=new Ssp.model.PersonAppointment();var a=new Ssp.model.Appointment();c.appointment.data=a.data;c.currentPersonAppointment.data=b.data},destroy:function(){this.appEventsController.removeEvent({eventName:"studentNameChange",callBackFunc:this.onPersonNameChange,scope:this});return this.callParent(arguments)},initForms:function(){var b,a;var b=Ext.ComponentQuery.query(".caseloadassignment")[0];a=[{title:"Personal"+Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY,autoScroll:true,items:[{xtype:"editperson"}]},{title:"Appointment"+Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY,autoScroll:true,items:[{xtype:"personcoach"},{xtype:"personappointment"}]},{title:"Special Service Groups",autoScroll:true,items:[{xtype:"personspecialservicegroups"}]},{title:"Referral Sources",autoScroll:true,items:[{xtype:"personreferralsources"}]},{title:"Reasons for Service",autoScroll:true,items:[{xtype:"personservicereasons"}]},{title:"Ability to Benefit/Anticipated Start Date",autoScroll:true,items:[{xtype:"personanticipatedstartdate"}]}];b.add(a)},getPersonSuccess:function(d,b){var c=b;var a=new Ssp.model.Person();c.getView().setLoading(false);c.person.data=a.data;c.person.populateFromGenericObject(d);c.getCurrentAppointment();c.updateTitle()},getPersonFailure:function(a,b){var c=b;c.getView().setLoading(false)},getCurrentAppointment:function(){var b=this;var a=b.person.get("id");if(a!=null){b.getView().setLoading(true);b.appointmentService.getCurrentAppointment(a,{success:b.getAppointmentSuccess,failure:b.getAppointmentFailure,scope:b})}else{b.initForms()}},getAppointmentSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.initForms()},getAppointmentFailure:function(a,b){var c=b;c.getView().setLoading(false)},onPersonNameChange:function(){this.updateTitle()},updateTitle:function(){var a=this;a.getView().setTitle("Caseload Assignment "+((a.person.get("id")!="")?"Edit":"Add")+" - "+a.person.getFullName())},onSaveClick:function(a){var b=this;b.doSave()},doSave:function(){var x=this;var f=x.person;var o=f.get("id");var e=new Object();var s;var d=Ext.ComponentQuery.query(".editperson")[0];var q=d.getForm();var g=Ext.ComponentQuery.query(".personcoach")[0];var u=g.getForm();var l=Ext.ComponentQuery.query(".personappointment")[0];var b=l.getForm();var n=Ext.ComponentQuery.query(".personspecialservicegroups")[0];var c=n.getForm();var v=Ext.ComponentQuery.query("#specialServiceGroupsItemSelector")[0];var i=[];var r=Ext.ComponentQuery.query(".personreferralsources")[0];var h=r.getForm();var t=Ext.ComponentQuery.query("#referralSourcesItemSelector")[0];var p=[];var w=Ext.ComponentQuery.query(".personservicereasons")[0];var m=w.getForm();var j=[];var k=Ext.ComponentQuery.query(".personanticipatedstartdate")[0];var z=k.getForm();var y=[q,u,b,z,m,c,h];var a=x.formUtils.validateForms(y);if(a.valid){q.updateRecord();z.updateRecord();f.setCoachId(u.findField("coachId").getValue());f.setStudentTypeId(u.findField("studentTypeId").getValue());b.updateRecord();specialServiceGroupsFormValues=v.getValue();i=x.getSelectedItemSelectorIdsForTransfer(specialServiceGroupsFormValues);f.set("specialServiceGroups",i);referralSourcesFormValues=t.getValue();p=x.getSelectedItemSelectorIdsForTransfer(referralSourcesFormValues);f.set("referralSources",p);serviceReasonsFormValues=m.getValues();j=x.formUtils.getSelectedIdsAsArray(serviceReasonsFormValues);f.set("serviceReasons",j);x.getView().setLoading(true);e=f.setPropsNullForSave(f.data);x.personService.save(e,{success:x.savePersonSuccess,failure:x.savePersonFailure,statusCode:{409:x.savePersonConflict},scope:x})}else{x.formUtils.displayErrors(a.fields)}},savePersonSuccess:function(d,b){var c=b;var a;c.getView().setLoading(false);if(d.id!=""){if(c.person.get("id")==""||c.getResetActiveStatusCheck().checked==true){a=new Ssp.model.PersonProgramStatus();a.set("programStatusId",Ssp.util.Constants.ACTIVE_PROGRAM_STATUS_ID);a.set("effectiveDate",Ext.Date.now());c.personProgramStatusService.save(d.id,a.data,{success:c.saveProgramStatusSuccess,failure:c.saveProgramStatusFailure,scope:c})}c.person.populateFromGenericObject(d);c.saveAppointment()}else{Ext.Msg.alert("Error","Error saving student record. Please see your administrator for additional details.")}},savePersonFailure:function(a,b){var c=b;c.getView().setLoading(false)},savePersonConflict:function(a,c){var d=c;d.savePersonFailure(a,c);var g={buttons:Ext.Msg.YESNOCANCEL,icon:Ext.Msg.WARNING,fn:d.resolvePersonConflict,scope:d};var b=d.person;var f=b.get("id");if(f){g.title="Conflicting Student Record Updates";g.msg="Your changes did not save because another user modified the student record while you were filling out this form. Do you want to save your changes anyway?<br/><br/>Press 'Yes' to overwrite the existing record with your changes.<br/>Press 'No' to discard your changes and load the existing record into this form.<br/>Press 'Cancel' to do nothing and resume editing."}else{var e=d.parseConflictingPersonId(a);if(e){g.title="Student Already on File";g.msg="The student record did not save because another student record already exists for the specified external identifier. Do you want to save your changes anyway?<br/><br/>Press 'Yes' to overwrite the existing record with your changes.<br/>Press 'No' to discard your changes and load the existing record into this form.<br/>Press 'Cancel' to do nothing and resume editing.";g.personId=e}else{g.buttons=Ext.Msg.OK;dialogOptsicon=Ext.Msg.ERROR;g.fn=function(){};g.title="Unresolvable Student Record Conflict";g.msg="Your changes could not be saved because they conflict with an existing student record but the exact cause of the conflict could not be determined.<br/><br/> Either contact your system administrator or try searching for an existing student record with the same name and/or identifier."}}Ext.Msg.show(g)},parseConflictingPersonId:function(c){var f=this;if(!(c.responseText)){return null}var d=Ext.decode(c.responseText);var e=d.detail;if(!(e)){return null}var g=e.typeInfo;if(!(g)){return null}var b=g.name;if(!(b)||"org.jasig.ssp.model.Person"!==b){return null}var a=e.lookupFields;if(!(a)){return null}return a.id||null},resolvePersonConflict:function(b,d,a){var c=this;if(b==="yes"){c.personService.get(a.personId,{success:c.doBlindOverwriteOfPersistentPerson,failure:c.getPersonFailure,scope:c})}else{if(b==="no"){c.personService.get(a.personId,{success:c.doReloadWithExistingPersonRecord,failure:c.getPersonFailure,scope:c})}else{}}},doBlindOverwriteOfPersistentPerson:function(c,a){var b=a;if(!(b.assertMatchingSchoolIds(c))){return}b.person.set("id",c.id);b.person.data.username=c.username;b.doSave()},doReloadWithExistingPersonRecord:function(d,b){var c=b;if(!(c.assertMatchingSchoolIds(d))){return}var a=new Ssp.model.Person();c.person.data=a.data;c.personLite.set("id",d.id);c.resetAppointmentModels();c.formUtils.loadDisplay("mainview","caseloadassignment",true,{flex:1})},assertMatchingSchoolIds:function(b){var a=this;if(a.person.data.schoolId){if(a.person.data.schoolId.toUpperCase()!==b.schoolId.toUpperCase()){Ext.Msg.alert("Form Save Error","Could not overwrite the existing record because the system might have found multiple conflicting records or detected it was at risk of updating the wrong record your edits. Please contact your system administrators.");return false}}return true},saveProgramStatusSuccess:function(c,a){var b=a},saveProgramStatusFailure:function(a,b){var c=b},saveAppointment:function(){var c=this;var a,b;if(c.appointment.get("appointmentDate")!=null&&c.appointment.get("startTime")!=null&&c.appointment.get("endTime")!=null){c.currentPersonAppointment.set("startTime",c.formUtils.fixDateOffsetWithTime(c.appointment.getStartDate()));c.currentPersonAppointment.set("endTime",c.formUtils.fixDateOffsetWithTime(c.appointment.getEndDate()));a=c.currentPersonAppointment.data;b=c.person.get("id");c.appointmentService.saveAppointment(b,a,{success:c.saveAppointmentSuccess,failure:c.saveAppointmentFailure,scope:c})}else{c.loadStudentToolsView()}},saveAppointmentSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.loadStudentToolsView()},saveAppointmentFailure:function(a,b){var c=b;c.getView().setLoading(false)},getSelectedItemSelectorIdsForTransfer:function(b){var a=new Array();Ext.Array.each(b,function(d,c){if(d!=undefined){a.push({id:d})}});return a},onCancelClick:function(a){this.loadStudentToolsView()},onPrintClick:function(a){Ext.Msg.alert("Attention","This feature is not yet implemented")},onEmailClick:function(a){Ext.Msg.alert("Attention","This feature is not yet implemented")},loadStudentToolsView:function(){this.appEventsController.getApplication().fireEvent("displayStudentRecordView")}});Ext.define("Ssp.controller.person.EditPersonViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController",person:"currentPerson",personService:"personService",sspConfig:"sspConfig"},control:{retrieveFromExternalButton:{selector:"#retrieveFromExternalButton",listeners:{click:"onRetrieveFromExternalClick"}},firstNameField:{selector:"#firstName",listeners:{change:"onStudentNameChange"}},middleNameField:{selector:"#middleName",listeners:{change:"onStudentNameChange"}},lastNameField:{selector:"#lastName",listeners:{change:"onStudentNameChange"}},studentIdField:{selector:"#studentId",listeners:{validityChange:"onStudentIdValidityChange"}},homePhoneField:"#homePhone",workPhoneField:"#workPhone",homePhoneField:"#homePhone",primaryEmailAddressField:"#primaryEmailAddress",secondaryEmailAddressField:"#secondaryEmailAddress"},init:function(){var c=this;var a=c.sspConfig.get("syncStudentPersonalDataWithExternalData");var b=c.sspConfig.get("allowExternalRetrievalOfStudentDataFromCaseloadAssignment");var d=c.getStudentIdField();d.setFieldLabel(c.sspConfig.get("studentIdAlias")+Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY);Ext.apply(d,{minLength:c.sspConfig.get("studentIdMinValidationLength"),minLengthText:c.sspConfig.get("studentIdMinValidationErrorText"),maxLength:c.sspConfig.get("studentIdMaxValidationLength"),maxLengthText:c.sspConfig.get("studentIdMaxValidationErrorText"),vtype:"studentIdValidator",vtypeText:c.sspConfig.get("studentIdValidationErrorText")});if(c.person.get("id")!=""){c.getRetrieveFromExternalButton().setVisible(false);c.getFirstNameField().setDisabled(a);c.getMiddleNameField().setDisabled(a);c.getLastNameField().setDisabled(a);d.setDisabled(a);c.getHomePhoneField().setDisabled(a);c.getWorkPhoneField().setDisabled(a);c.getPrimaryEmailAddressField().setDisabled(a);c.getSecondaryEmailAddressField().setDisabled(a)}c.getView().getForm().reset();c.getView().loadRecord(c.person);if(c.person.get("id")==""){c.getRetrieveFromExternalButton().setVisible(b);c.setRetrieveFromExternalButtonDisabled(!d.isValid())}else{c.getRetrieveFromExternalButton().setVisible(false)}return c.callParent(arguments)},onStudentNameChange:function(a,e,b,c){var d=this;d.person.set(a.name,e);d.appEventsController.getApplication().fireEvent("studentNameChange")},onStudentIdValidityChange:function(a,d,b){var c=this;c.setRetrieveFromExternalButtonDisabled(!d)},setRetrieveFromExternalButtonDisabled:function(a){this.getRetrieveFromExternalButton().setDisabled(a)},onRetrieveFromExternalClick:function(b){var c=this;var d=c.getStudentIdField();var a=d.value;if(d.isValid()){if(a!=""){c.getView().setLoading(true);c.personService.getBySchoolId(a,{success:c.getBySchoolIdSuccess,failure:c.getBySchoolIdFailure,scope:c})}}else{Ext.Msg.alert("SSP Error","Please correct the errors in your form.")}},getBySchoolIdSuccess:function(d,b){var c=b;var a=new Ssp.model.Person();c.getView().setLoading(false);if(d!=null){c.getView().getForm().reset();a.populateFromExternalData(d);c.person.data=a.data;c.getView().loadRecord(c.person)}else{Ext.Msg.alert("SSP Notification","There were no records found with the provided ID. Please try a different value.")}},getBySchoolIdFailure:function(a,b){var c=b;c.getView().setLoading(false)}});Ext.define("Ssp.controller.person.CoachViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController",coachesStore:"coachesStore",person:"currentPerson",sspConfig:"sspConfig",studentTypesStore:"studentTypesStore"},config:{inited:false},control:{departmentField:"#departmentField",phoneField:"#phoneField",officeField:"#officeField",emailAddressField:"#emailAddressField",coachCombo:{selector:"#coachCombo",listeners:{change:"onCoachComboChange",select:"onCoachComboSelect"}},studentTypeCombo:{selector:"#studentTypeCombo",listeners:{select:"onStudentTypeComboSelect"}}},init:function(){var a=this;if(a.person.get("id")!=""){a.getCoachCombo().setDisabled(a.sspConfig.get("coachSetFromExternalData"));a.getStudentTypeCombo().setDisabled(a.sspConfig.get("studentTypeSetFromExternalData"))}a.studentTypesStore.load();a.coachesStore.load(function(c,b,d){if(!d){Ext.Msg.alert("Error","Unable to load Coaches. Please see your system administrator for assistance.")}});a.initForm();return this.callParent(arguments)},initForm:function(){var a=this;a.getView().getForm().reset();a.getCoachCombo().setValue(a.person.getCoachId());a.getStudentTypeCombo().setValue(a.person.getStudentTypeId());a.inited=true},onCoachComboSelect:function(b,a,c){var d=this;var e;if(a.length>0){e=a[0];d.displayCoachDepartment(e)}},onCoachComboChange:function(a,e,b,c){var d=this;var f=d.coachesStore.getById(e);if(f!=null){d.displayCoachDepartment(f)}},displayCoachDepartment:function(b){var a=this;a.getDepartmentField().setValue(b.get("departmentName"));a.getPhoneField().setValue(b.get("workPhone"));a.getEmailAddressField().setValue(b.get("primaryEmailAddress"));a.getOfficeField().setValue(b.get("officeLocation"))},onStudentTypeComboSelect:function(c,b,e){var f=this;var d,a;if(b.length>0){f.appEventsController.getApplication().fireEvent("studentTypeChange")}},onStudentTypeComboChange:function(b,g,c,e){var f=this;var d,a;d=f.studentTypesStore.getById(g);if(d!=null){f.appEventsController.getApplication().fireEvent("studentTypeChange")}}});Ext.define("Ssp.controller.person.AppointmentViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController",appointment:"currentAppointment",formUtils:"formRendererUtils",studentTypesStore:"studentTypesStore"},control:{appointmentDateField:"#appointmentDateField",startTimeField:"#startTimeField",endTimeField:"#endTimeField"},init:function(){var a=this;a.appEventsController.assignEvent({eventName:"studentTypeChange",callBackFunc:this.onStudentTypeChange,scope:this});if(a.appointment.get("id")==""){today=new Date();a.getAppointmentDateField().setMinValue(Ext.Date.clearTime(today))}a.getView().getForm().reset();a.getView().loadRecord(a.appointment);a.assignAppointmentRequiredFields();return a.callParent(arguments)},destroy:function(){this.appEventsController.removeEvent({eventName:"studentTypeChange",callBackFunc:this.onStudentTypeChange,scope:this});return this.callParent(arguments)},onStudentTypeChange:function(){this.assignAppointmentRequiredFields()},assignAppointmentRequiredFields:function(){var e=this;var d=Ext.ComponentQuery.query("#studentTypeCombo")[0];var c=d.getValue();var g,i,h;var b=e.getAppointmentDateField();var a=e.getStartTimeField();var f=e.getEndTimeField();g=e.studentTypesStore.getById(c);if(g!=null){i=g.get("requireInitialAppointment");h="";if(i==true){h=Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY}b.setFieldLabel(b.fieldLabel.replace(Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY,"","gi")+h);b.allowBlank=!i;b.validate();a.setFieldLabel(a.fieldLabel.replace(Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY,"","gi")+h);a.allowBlank=!i;a.validate();f.setFieldLabel(f.fieldLabel.replace(Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY,"","gi")+h);f.allowBlank=!i;f.validate()}}});Ext.define("Ssp.controller.person.SpecialServiceGroupsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",columnRendererUtils:"columnRendererUtils",person:"currentPerson",store:"specialServiceGroupsBindStore",service:"specialServiceGroupService"},init:function(){var a=this;a.service.getAll({success:a.getAllSuccess,failure:a.getAllFailure,scope:a});return a.callParent(arguments)},getAllSuccess:function(e,c){var d=c;var b;var a=d.getView();var f=d.columnRendererUtils.getSelectedIdsForMultiSelect(d.person.get("specialServiceGroups"));if(e.rows.length>0){d.store.loadData(e.rows);b=[{xtype:"itemselectorfield",itemId:"specialServiceGroupsItemSelector",name:"specialServiceGroups",anchor:"100%",height:250,fieldLabel:"Service Groups",store:d.store,displayField:"name",valueField:"id",value:((f.length>0)?f:[]),allowBlank:true,buttons:["add","remove"],listeners:{toField:{boundList:{scope:d,drop:d.maybeRefireFromFieldLoadWithNonEmptyStore}},fromField:{boundList:{scope:d,itemdblclick:d.maybeRefireFromFieldLoadWithNonEmptyStore}}}}];a.add(b);d.registerAdditionalListeners()}},getAllFailure:function(a,b){var c=b},registerAdditionalListeners:function(){var c=this;var a=c.findItemSelector();var b=a.query("button[iconCls=x-form-itemselector-add]")[0];var d=b.handler;b.setHandler(function(){var e=this;d.apply(a);e.maybeRefireFromFieldLoadWithNonEmptyStore()},c)},maybeRefireFromFieldLoadWithNonEmptyStore:function(){var c=this;var b=c.findItemSelector();var e=c.itemSelector.fromField;var a=c.itemSelector.toField;var d=e.store.getCount;if(d.apply(e.store)===0){e.store.getCount=function(){return 1};e.store.fireEvent("load",e.store);e.store.getCount=d}},findItemSelector:function(){var a=this;a.itemSelector=a.itemSelect||a.getView().form.findField("specialServiceGroups");return a.itemSelector}});Ext.define("Ssp.controller.person.ReferralSourcesViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",columnRendererUtils:"columnRendererUtils",person:"currentPerson",store:"referralSourcesBindStore",service:"referralSourceService"},init:function(){var a=this;a.service.getAll({success:a.getAllSuccess,failure:a.getAllFailure,scope:a});return a.callParent(arguments)},getAllSuccess:function(f,d){var e=d;var b;var a=e.getView();var c=e.columnRendererUtils.getSelectedIdsForMultiSelect(e.person.get("referralSources"));if(f.rows.length>0){e.store.loadData(f.rows);b=[{xtype:"itemselectorfield",itemId:"referralSourcesItemSelector",name:"referralSources",anchor:"100%",height:250,fieldLabel:"Referral Sources",store:e.store,displayField:"name",valueField:"id",value:((c.length>0)?c:[]),allowBlank:true,buttons:["add","remove"],listeners:{toField:{boundList:{scope:e,drop:e.maybeRefireFromFieldLoadWithNonEmptyStore}},fromField:{boundList:{scope:e,itemdblclick:e.maybeRefireFromFieldLoadWithNonEmptyStore}}}}];a.add(b);e.registerAdditionalListeners()}},getAllFailure:function(a,b){var c=b},registerAdditionalListeners:function(){var c=this;var a=c.findItemSelector();var b=a.query("button[iconCls=x-form-itemselector-add]")[0];var d=b.handler;b.setHandler(function(){var e=this;d.apply(a);e.maybeRefireFromFieldLoadWithNonEmptyStore()},c)},maybeRefireFromFieldLoadWithNonEmptyStore:function(){var c=this;var b=c.findItemSelector();var e=c.itemSelector.fromField;var a=c.itemSelector.toField;var d=e.store.getCount;if(d.apply(e.store)===0){e.store.getCount=function(){return 1};e.store.fireEvent("load",e.store);e.store.getCount=d}},findItemSelector:function(){var a=this;a.itemSelector=a.itemSelect||a.getView().form.findField("referralSources");return a.itemSelector}});Ext.define("Ssp.controller.person.ServiceReasonsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{formUtils:"formRendererUtils",person:"currentPerson",serviceReasonsStore:"serviceReasonsStore"},init:function(){var b=this;var a=function(f,e,g){if(f.length>0){var d=[];Ext.Array.each(f,function(i,h){d.push(i.raw)});var c={mainComponentType:"checkbox",formId:"personservicereasons",fieldSetTitle:"Select all that apply:",itemsArr:d,selectedItemsArr:b.person.get("serviceReasons"),idFieldName:"id",selectedIdFieldName:"id",additionalFieldsMap:[]};b.formUtils.createForm(c)}};b.serviceReasonsStore.load({scope:b,callback:a});return this.callParent(arguments)}});Ext.define("Ssp.controller.person.AnticipatedStartDateViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{person:"currentPerson"},init:function(){this.getView().loadRecord(this.person);return this.callParent(arguments)}});Ext.define("Ssp.controller.ToolsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController",apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson",formUtils:"formRendererUtils",personLite:"personLite",toolsStore:"toolsStore"},control:{view:{itemclick:"onItemClick",viewready:"onViewReady"}},init:function(){return this.callParent(arguments)},onViewReady:function(a,c){var b=this;b.appEventsController.assignEvent({eventName:"loadPerson",callBackFunc:b.onLoadPerson,scope:b});b.appEventsController.assignEvent({eventName:"transitionStudent",callBackFunc:b.onTransitionStudent,scope:b});if(b.personLite.get("id")!=""){b.loadPerson()}},destroy:function(){var a=this;a.appEventsController.removeEvent({eventName:"loadPerson",callBackFunc:a.onLoadPerson,scope:a});a.appEventsController.removeEvent({eventName:"transitionStudent",callBackFunc:a.onTransitionStudent,scope:a});return a.callParent(arguments)},onLoadPerson:function(){this.loadPerson()},onTransitionStudent:function(){this.selectTool("journal");this.loadTool("journal")},loadPerson:function(){this.selectTool("profile");this.loadTool("profile")},selectTool:function(b){var a=this.toolsStore.find("toolType",b);this.getView().getSelectionModel().select(a)},onItemClick:function(c,a,e,b){var d=this;if(a.get("active")&&d.personLite.get("id")!=""){this.loadTool(a.get("toolType"));this.appEventsController.getApplication().fireEvent("collapseSearch")}},loadTool:function(c){var b=this;var a;if(b.authenticatedPerson.hasAccess(c.toUpperCase()+"_TOOL")){a=b.formUtils.loadDisplay("tools",c,true,{})}else{b.authenticatedPerson.showUnauthorizedAccessAlert()}}});Ext.define("Ssp.controller.tool.profile.ProfileToolViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",personLite:"personLite"},config:{personViewHistoryUrl:"",printConfidentialityAgreementUrl:""},control:{viewHistoryButton:{click:"onViewHistoryClick"},printConfidentialityAgreementButton:{click:"printConfidentialityAgreement"}},init:function(){var b=this;var a=b.personLite.get("id");b.personViewHistoryUrl=b.apiProperties.getAPIContext()+b.apiProperties.getItemUrl("personViewHistory");b.personViewHistoryUrl=b.personViewHistoryUrl.replace("{id}",a);b.printConfidentialityAgreementUrl=b.apiProperties.getContext()+b.apiProperties.getItemUrl("printConfidentialityDisclosureAgreement");return this.callParent(arguments)},printConfidentialityAgreement:function(a){var b=this;b.apiProperties.getReporter().loadBlankReport(b.printConfidentialityAgreementUrl)},onViewHistoryClick:function(a){var b=this;b.apiProperties.getReporter().load({url:b.personViewHistoryUrl,params:""})}});Ext.define("Ssp.controller.tool.profile.ProfilePersonViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",person:"currentPerson",personLite:"personLite",personService:"personService",profileReferralSourcesStore:"profileReferralSourcesStore",profileServiceReasonsStore:"profileServiceReasonsStore",profileSpecialServiceGroupsStore:"profileSpecialServiceGroupsStore",sspConfig:"sspConfig"},control:{nameField:"#studentName",coachNameField:"#coachName",coachWorkPhoneField:"#coachWorkPhone",coachDepartmentNameField:"#coachDepartmentName",coachOfficeLocationField:"#coachOfficeLocation",coachPrimaryEmailAddressField:"#coachPrimaryEmailAddress",studentIdField:"#studentId",birthDateField:"#birthDate",studentTypeField:"#studentType",programStatusField:"#programStatus",addressField:"#address",alternateAddressInUseField:"#alternateAddressInUse",alternateAddressField:"#alternateAddress"},init:function(){var b=this;var d=b.getStudentIdField();var a=b.sspConfig.get("studentIdAlias");var c=b.personLite.get("id");b.getView().getForm().reset();d.setFieldLabel(a);if(c!=""){b.getView().setLoading(true);b.personService.get(c,{success:b.getPersonSuccess,failure:b.getPersonFailure,scope:b})}return b.callParent(arguments)},getPersonSuccess:function(j,a){var p=a;var n=Ext.ComponentQuery.query(".studentrecord")[0];var k=p.getStudentIdField();var q=p.getNameField();var g=p.getCoachNameField();var m=p.getCoachWorkPhoneField();var o=p.getCoachDepartmentNameField();var f=p.getCoachOfficeLocationField();var e=p.getCoachPrimaryEmailAddressField();var i=p.getBirthDateField();var c=p.getStudentTypeField();var d=p.getProgramStatusField();var l=p.personLite.get("id");var b=p.sspConfig.get("studentIdAlias");var s;var h="No";p.person.populateFromGenericObject(j);s=p.person.getFullName();p.profileSpecialServiceGroupsStore.removeAll();if(j.specialServiceGroups!=null){p.profileSpecialServiceGroupsStore.loadData(p.person.get("specialServiceGroups"))}p.profileReferralSourcesStore.removeAll();if(j.referralSources!=null){p.profileReferralSourcesStore.loadData(p.person.get("referralSources"))}p.profileServiceReasonsStore.removeAll();if(j.serviceReasons!=null){p.profileServiceReasonsStore.loadData(p.person.get("serviceReasons"))}p.getView().loadRecord(p.person);q.setValue(s);g.setValue(p.person.getCoachFullName());m.setValue(p.person.getCoachWorkPhone());o.setValue(p.person.getCoachDepartmentName());f.setValue(p.person.getCoachOfficeLocation());e.setValue(p.person.getCoachPrimaryEmailAddress());i.setValue(p.person.getFormattedBirthDate());c.setValue(p.person.getStudentTypeName());d.setValue(p.person.getProgramStatusName());n.setTitle("Student Record - "+s);p.getAddressField().setValue(p.person.buildAddress());p.getAlternateAddressField().setValue(p.person.buildAlternateAddress());if(p.person.get("alternateAddressInUse")!=null){if(p.person.get("alternateAddressInUse")===true){h="Yes"}}p.getAlternateAddressInUseField().setValue(h);p.getView().setLoading(false)},getPersonFailure:function(a,b){var c=b;c.getView().setLoading(false)}});Ext.define("Ssp.controller.tool.profile.ServicesProvidedViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",person:"currentPerson"},init:function(){var a=this;return this.callParent(arguments)}});Ext.define("Ssp.controller.tool.actionplan.ActionPlanToolViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{store:"confidentialityLevelsStore"},constructor:function(){var a=this;a.store.load({params:{limit:50}});return a.callParent(arguments)}});Ext.define("Ssp.controller.tool.actionplan.TasksViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",formUtils:"formRendererUtils",model:"currentTask",person:"currentPerson",store:"tasksStore"},config:{appEventsController:"appEventsController",containerToLoadInto:"tools",formToDisplay:"addtask",url:""},control:{view:{viewready:"onViewReady"}},init:function(){this.url=this.apiProperties.createUrl(this.apiProperties.getItemUrl("personTask"));this.url=this.url.replace("{id}",this.person.get("id"));return this.callParent(arguments)},onViewReady:function(a,b){this.appEventsController.assignEvent({eventName:"addTask",callBackFunc:this.onAddTask,scope:this});this.appEventsController.assignEvent({eventName:"editTask",callBackFunc:this.onEditTask,scope:this});this.appEventsController.assignEvent({eventName:"closeTask",callBackFunc:this.onCloseTask,scope:this});this.appEventsController.assignEvent({eventName:"deleteTask",callBackFunc:this.deleteConfirmation,scope:this})},destroy:function(){this.appEventsController.removeEvent({eventName:"addTask",callBackFunc:this.onAddTask,scope:this});this.appEventsController.removeEvent({eventName:"editTask",callBackFunc:this.onEditTask,scope:this});this.appEventsController.removeEvent({eventName:"closeTask",callBackFunc:this.onCloseTask,scope:this});this.appEventsController.removeEvent({eventName:"deleteTask",callBackFunc:this.deleteConfirmation,scope:this});return this.callParent(arguments)},onAddTask:function(){var a=new Ssp.model.tool.actionplan.Task();this.model.data=a.data;this.loadEditor()},onEditTask:function(){this.loadEditor()},onCloseTask:function(){var c=this;var a,e,b,d;b=c.model;e=b.get("id");a=c.store;if(e!=""){b.set("completed",true);b.set("completedDate",new Date());d=b.data.group;delete b.data.group;this.apiProperties.makeRequest({url:this.url+"/"+e,method:"PUT",jsonData:b.data,successFunc:function(f,h){var g=Ext.decode(f.responseText);if(g.id!=""){b.set("completedDate",g.completedDate);b.set("completed",g.completed);b.set("group",d);b.commit();a.sync();c.appEventsController.getApplication().fireEvent("filterTasks")}},scope:c})}else{Ext.Msg.alert("SSP Error","Unable to delete. No id was specified to delete.")}},deleteConfirmation:function(){var b='You are about to delete the task: "'+this.model.get("name")+'". Would you like to continue?';var a=this.model;if(a.get("id")!=""){if(a.get("createdBy").id==this.person.get("id")){b="WARNING: You are about to delete a task created by this student. Would you like to continue?"}Ext.Msg.confirm({title:"Delete Task?",msg:b,buttons:Ext.Msg.YESNO,fn:this.deleteTask,scope:this})}else{Ext.Msg.alert("SSP Error","Unable to delete task.")}},deleteTask:function(c){var a=this.store;var b=this.model.get("id");if(c=="yes"){this.apiProperties.makeRequest({url:this.url+"/"+b,method:"DELETE",successFunc:function(d,e){a.remove(a.getById(b))}})}},loadEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.actionplan.AddTasksFormViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",authenticatedPerson:"authenticatedPerson",confidentialityLevelsStore:"confidentialityLevelsStore",formUtils:"formRendererUtils",model:"currentTask",person:"currentPerson"},config:{containerToLoadInto:"tools",formToDisplay:"actionplan",model:"currentTask",url:""},control:{addButton:{click:"onAddClick"},closeButton:{click:"onCloseClick"}},init:function(){var a=this;a.authenticatedPerson.applyConfidentialityLevelsFilter(a.confidentialityLevelsStore);a.url=a.apiProperties.createUrl(a.apiProperties.getItemUrl("personTask"));a.url=a.url.replace("{id}",a.person.get("id"));a.initForm();a.appEventsController.assignEvent({eventName:"loadTask",callBackFunc:a.initForm,scope:a});return a.callParent(arguments)},destroy:function(){var a=this;a.confidentialityLevelsStore.clearFilter();a.appEventsController.removeEvent({eventName:"loadTask",callBackFunc:a.initForm,scope:a});return a.callParent(arguments)},initForm:function(){this.getView().getForm().reset();this.getView().getForm().loadRecord(this.model);Ext.ComponentQuery.query("#confidentialityLevel")[0].setValue(this.model.get("confidentialityLevel").id)},onAddClick:function(b){var e=this;var f;var d=this.getView().getForm();var a=this.model;var c;var g=a.get("id");if(d.isValid()){d.updateRecord();f=function(i,h){Ext.Msg.confirm({title:"Success",msg:"The task was saved successfully. Would you like to create another task?",buttons:Ext.Msg.YESNO,fn:e.createTaskConfirmResult,scope:e})};a.set("dueDate",e.formUtils.fixDateOffsetWithTime(a.data.dueDate));if(g==""){a.set("type","SSP");a.set("personId",this.person.get("id"));a.set("confidentialityLevel",{id:d.getValues().confidentialityLevelId});this.apiProperties.makeRequest({url:e.url,method:"POST",jsonData:a.data,successFunc:f})}else{if(a.data.group!=null){delete a.data.group}this.apiProperties.makeRequest({url:e.url+"/"+g,method:"PUT",jsonData:a.data,successFunc:f})}}else{Ext.Msg.alert("Error","Please correct the errors in your form before continuing.")}},createTaskConfirmResult:function(b){if(b=="yes"){var a=new Ssp.model.tool.actionplan.Task();this.model.data=a.data;this.initForm()}else{this.loadDisplay()}},onCloseClick:function(a){this.loadDisplay()},loadDisplay:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.actionplan.EditGoalFormViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson",confidentialityLevelsStore:"confidentialityLevelsStore",formUtils:"formRendererUtils",model:"currentGoal",person:"currentPerson",preferences:"preferences"},config:{containerToLoadInto:"tools",formToDisplay:"actionplan",url:""},control:{combo:"#confidentialityLevel",saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"}},init:function(){var a=this;a.authenticatedPerson.applyConfidentialityLevelsFilter(a.confidentialityLevelsStore);a.getView().getForm().loadRecord(a.model);a.getCombo().setValue(this.model.get("confidentialityLevel").id);return a.callParent(arguments)},constructor:function(){this.url=this.apiProperties.getItemUrl("personGoal");this.url=this.url.replace("{id}",this.person.get("id"));this.url=this.apiProperties.createUrl(this.url);return this.callParent(arguments)},onSaveClick:function(d){var f=this;var c=this.model;var e,b,h,g;e=this.getView().getForm();id=c.get("id");if(e.isValid()){var a=e.getValues();c.set("name",a.name);c.set("description",a.description);c.set("confidentialityLevel",{id:a.confidentialityLevelId});g=function(j,i){f.preferences.ACTION_PLAN_ACTIVE_VIEW=1;f.loadDisplay()};if(id==""){this.apiProperties.makeRequest({url:this.url,method:"POST",jsonData:c.data,successFunc:g})}else{this.apiProperties.makeRequest({url:this.url+"/"+id,method:"PUT",jsonData:c.data,successFunc:g})}}else{Ext.Msg.alert("Error","Please correct the errors in your form before continuing.")}},onCancelClick:function(a){this.loadDisplay()},loadDisplay:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.actionplan.DisplayActionPlanViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",authenticatedPerson:"authenticatedPerson",formUtils:"formRendererUtils",goalsStore:"goalsStore",person:"currentPerson",store:"tasksStore"},config:{filteredTaskStatus:null,filterAuthenticated:false,personTaskUrl:"",personTaskGroupUrl:"",personEmailTaskUrl:"",personPrintTaskUrl:""},control:{taskStatusTabs:{tabchange:"onTaskStatusTabChange"},emailTasksButton:{click:"onEmailTasksClick"},printTasksButton:{click:"onPrintTasksClick"},filterTasksBySelfCheck:{change:"onFilterTasksBySelfChange"},addTaskButton:{selector:"#addTaskButton",listeners:{click:"onAddTaskClick"}},goalsPanel:"#goalsPanel",activeTasksGrid:"#activeTasksGrid",completeTasksGrid:"#completeTasksGrid",allTasksGrid:"#allTasksGrid"},init:function(){var b=this;var a;var d;var c=function(g,e){var h,f;var i=[];h=Ext.decode(g.responseText);b.getView().setLoading(false);if(h!=null){Ext.Object.each(h,function(j,k){var l=j;var m=k;Ext.Array.each(m,function(n,o){n.group=l;i.push(n)},this)},this);b.store.loadData(i);b.filteredTaskStatus="ACTIVE";b.filterTasks()}};b.getAddTaskButton().setDisabled(!b.authenticatedPerson.hasPermission("ROLE_PERSON_TASK_WRITE"));b.store.removeAll();b.getView().setLoading(true);a=b.person.get("id");b.personTaskUrl=b.apiProperties.getItemUrl("personTask");b.personTaskUrl=b.personTaskUrl.replace("{id}",a);b.personTaskGroupUrl=b.apiProperties.getItemUrl("personTaskGroup");b.personTaskGroupUrl=b.personTaskGroupUrl.replace("{id}",a);b.personEmailTaskUrl=b.apiProperties.getItemUrl("personEmailTask");b.personEmailTaskUrl=b.personEmailTaskUrl.replace("{id}",a);b.personPrintTaskUrl=b.apiProperties.getItemUrl("personPrintTask");b.personPrintTaskUrl=b.personPrintTaskUrl.replace("{id}",a);b.apiProperties.makeRequest({url:b.apiProperties.createUrl(b.personTaskGroupUrl),method:"GET",successFunc:c});b.appEventsController.assignEvent({eventName:"filterTasks",callBackFunc:this.onFilterTasks,scope:this});return b.callParent(arguments)},destroy:function(){this.appEventsController.removeEvent({eventName:"filterTasks",callBackFunc:this.onFilterTasks,scope:this})},onFilterTasks:function(){this.filterTasks()},onFilterTasksBySelfChange:function(b,a,d,c){this.filterAuthenticated=!this.filterAuthenticated;this.filterTasks()},onTaskStatusTabChange:function(b,a,d,c){this.filteredTaskStatus=a.action.toUpperCase();this.filterTasks()},filterTasks:function(){var d=this;var e=[];var c=null;var a=d.authenticatedPerson.get("id");var b=new Ext.util.Filter({filterFn:function(f){return(f.get("createdBy").id==a)},scope:d});switch(d.filteredTaskStatus){case"ACTIVE":c=function(f){return(f.get("completed")==false)};break;case"COMPLETE":c=function(f){return(f.get("completed")==true)};break}if(c!=null){e.push(c)}if(d.filterAuthenticated==true){e.push(b)}d.store.clearFilter();d.store.filter(e)},onEmailTasksClick:function(a){var b=this;var c=b.getTaskGoalCountNotificationMessage();if(c.length>0){Ext.Msg.confirm({title:" Would you like to continue emailing?",msg:c,buttons:Ext.Msg.YESNO,fn:b.emailTasksConfirm,scope:b})}else{b.displayEmailAddressWindow()}},emailTasksConfirm:function(b){var a=this;if(b=="yes"){a.displayEmailAddressWindow()}},displayEmailAddressWindow:function(){var a=this;Ext.create("Ext.window.Window",{title:"To whom would you like to send this Action Plan",height:200,width:400,layout:"fit",modal:true,items:[{xtype:"form",layout:"anchor",items:[{xtype:"label",text:"Enter recipient email addresses separated by a comma"},{xtype:"textarea",anchor:"100%",name:"recipientEmailAddresses"}]}],dockedItems:[{dock:"bottom",xtype:"toolbar",items:[{text:"Send",xtype:"button",handler:a.emailTaskList,scope:a},{text:"Cancel",xtype:"button",handler:function(b){b.up("window").close()}}]}]}).show()},emailTaskList:function(d){var g=this;var f=false;var e;var b;var a=[];var c=d.up("panel").down("form").getValues().recipientEmailAddresses;if(c!=null){if(c.indexOf(",")){b=c.split(",");Ext.each(b,function(i,h){f=this.validateEmailAddress(i);a.push(Ext.String.trim(i));if(f!=true){return}},this)}else{f=this.validateEmailAddress(c);a.push(Ext.String.trim(c))}e={taskIds:g.getSelectedTasks(),goalIds:g.getSelectedGoals(),recipientIds:[],recipientEmailAddresses:a};if(f==true){url=this.apiProperties.createUrl(this.personEmailTaskUrl);this.apiProperties.makeRequest({url:url,method:"POST",jsonData:e,successFunc:function(){d.up("window").close();Ext.Msg.alert("Success","The task list has been sent to the listed recipient(s).")}})}else{Ext.Msg.alert("Error","1 or more of the addresses you entered are invalid. Please correct the form and try again.")}}else{Ext.Msg.alert("Error","Unable to determine an email address please enter a valid email address.")}},validateEmailAddress:function(b){var a=filter=new RegExp("^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+.)+([a-zA-Z0-9]{2,4})+$");return a.test(b)},onPrintTasksClick:function(a){var b=this;var c=b.getTaskGoalCountNotificationMessage();if(c.length>0){Ext.Msg.confirm({title:" Would you like to continue printing??",msg:c,buttons:Ext.Msg.YESNO,fn:b.printTasksConfirm,scope:b})}else{b.printTasks()}},printTasksConfirm:function(b){var a=this;if(b=="yes"){a.printTasks()}},printTasks:function(){var c=this;var a,b;var b={taskIds:c.getSelectedTasks(),goalIds:c.getSelectedGoals()};a=c.apiProperties.createUrl(c.personPrintTaskUrl);c.apiProperties.getReporter().postReport({url:a,params:b})},getTaskGoalCountNotificationMessage:function(){var b=this;var a="";if(b.store.getCount()<1){a+="This student has "+b.store.getCount()+" assigned tasks."}if(b.goalsStore.getCount()<1){a+="This student has "+b.goalsStore.getCount()+" assigned goals."}return a},getSelectedTasks:function(){var e=this;var h=e.getActiveTasksGrid();var g=e.getCompleteTasksGrid();var c=e.getAllTasksGrid();var a=e.getSelectedIdsArray(h.getView().getSelectionModel().getSelection());var d=e.getSelectedIdsArray(g.getView().getSelectionModel().getSelection());var b=e.getSelectedIdsArray(c.getView().getSelectionModel().getSelection());var f=Ext.Array.merge(a,d,b);return f},getSelectedGoals:function(){var a=this;var b=a.getGoalsPanel();return a.getSelectedIdsArray(b.getView().getSelectionModel().getSelection())},getSelectedIdsArray:function(a){var b=[];Ext.each(a,function(d,c){b.push(d.get("id"))});return b},onAddTaskClick:function(a){this.appEventsController.getApplication().fireEvent("addTask")},});Ext.define("Ssp.controller.tool.actionplan.DisplayActionPlanGoalsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",authenticatedPerson:"authenticatedPerson",formUtils:"formRendererUtils",model:"currentGoal",person:"currentPerson",preferences:"preferences",store:"goalsStore"},config:{containerToLoadInto:"tools",formToDisplay:"editgoalform",url:""},control:{view:{viewready:"onViewReady"},addGoalButton:{selector:"#addGoalButton",listeners:{click:"onAddGoalClick"}}},constructor:function(){this.url=this.apiProperties.createUrl(this.apiProperties.getItemUrl("personGoal"));this.url=this.url.replace("{id}",this.person.get("id"));Ext.apply(this.store.getProxy(),{url:this.url});this.store.load();return this.callParent(arguments)},onViewReady:function(a,c){var b=this;b.getAddGoalButton().setDisabled(!b.authenticatedPerson.hasPermission("ROLE_PERSON_GOAL_WRITE"));b.appEventsController.assignEvent({eventName:"editGoal",callBackFunc:this.editGoal,scope:this});b.appEventsController.assignEvent({eventName:"deleteGoal",callBackFunc:this.deleteConfirmation,scope:this});if(b.preferences.ACTION_PLAN_ACTIVE_VIEW==1){b.preferences.ACTION_PLAN_ACTIVE_VIEW=0;b.getView().expand()}},destroy:function(){this.appEventsController.removeEvent({eventName:"editGoal",callBackFunc:this.editGoal,scope:this});this.appEventsController.removeEvent({eventName:"deleteGoal",callBackFunc:this.deleteConfirmation,scope:this});return this.callParent(arguments)},onAddGoalClick:function(b){var a=new Ssp.model.PersonGoal();this.model.data=a.data;this.loadEditor()},editGoal:function(){this.loadEditor()},deleteConfirmation:function(){if(this.model.get("id")!=""){Ext.Msg.confirm({title:"Delete Goal?",msg:'You are about to delete the goal: "'+this.model.get("name")+'". Would you like to continue?',buttons:Ext.Msg.YESNO,fn:this.deleteGoal,scope:this})}else{Ext.Msg.alert("SSP Error","Unable to delete goal.")}},deleteGoal:function(c){var a=this.store;var b=this.model.get("id");if(c=="yes"){this.apiProperties.makeRequest({url:this.url+"/"+b,method:"DELETE",successFunc:function(d,e){a.remove(a.getById(b))}})}},loadEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.actionplan.DisplayStrengthsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{authenticatedPerson:"authenticatedPerson",formUtils:"formRendererUtils",model:"currentPerson",service:"personService"},control:{saveButton:{selector:"#saveButton",listeners:{click:"onSaveClick"}},strengthsField:{selector:"#strengths",listeners:{change:"onStrengthsChange"}},saveSuccessMessage:"#saveSuccessMessage"},init:function(){var a=this;a.getView().getForm().loadRecord(a.model);a.getSaveButton().disabled=true;a.getStrengthsField().setDisabled(!a.authenticatedPerson.hasAccess("ACTION_PLAN_STRENGTHS_FIELD"));return a.callParent(arguments)},onSaveClick:function(a){var d=this;var c=d.getView().getForm();var b;if(c.isValid()){c.updateRecord();b=d.model.data;b=d.model.setPropsNullForSave(d.model.data);d.getView().setLoading("true");d.service.save(b,{success:d.savePersonSuccess,failure:d.savePersonFailure,scope:d})}else{Ext.Msg.alert("Unable to save strengths. Please correct the errors in the form.")}},savePersonSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.model.commit();b.setSaveButtonState();b.formUtils.displaySaveSuccessMessage(b.getSaveSuccessMessage())},savePersonFailure:function(a,b){var c=b;c.getView().setLoading(false)},onStrengthsChange:function(a,b,d,c){this.setSaveButtonState()},setSaveButtonState:function(){this.getSaveButton().disabled=!this.getView().getForm().isDirty()}});Ext.define("Ssp.controller.tool.actionplan.TaskTreeViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",person:"currentPerson",task:"currentTask",treeUtils:"treeRendererUtils"},config:{categoryUrl:"",challengeUrl:"",challengeReferralUrl:"",personChallengeUrl:""},control:{view:{itemexpand:"onItemExpand",itemClick:"onItemClick",viewready:"onViewReady"},},onViewReady:function(){var b=null;this.categoryUrl=this.apiProperties.getItemUrl("category");this.challengeUrl=this.apiProperties.getItemUrl("challenge");this.challengeReferralUrl=this.apiProperties.getItemUrl("challengeReferral");this.personChallengeUrl=this.apiProperties.getItemUrl("personChallenge");this.personChallengeUrl=this.personChallengeUrl.replace("{id}",this.person.get("id"));this.treeUtils.clearRootCategories();this.treeUtils.appendChildren(null,[{text:"Student Intake Challenges",id:"0_studentIntakeChallenge",leaf:false,destroyBeforeAppend:false}]);this.treeUtils.appendChildren(null,[{text:"All",id:"0_all",leaf:false,destroyBeforeAppend:false}]);var a=new Ssp.model.util.TreeRequest();a.set("url",this.categoryUrl);a.set("nodeType","category");a.set("isLeaf",false);a.set("enableCheckedItems",false);this.treeUtils.getItems(a)},onItemExpand:function(c,h){var i=this;var e=c;var a="";var g="";var d=false;var k=i.treeUtils.getNameFromNodeId(e.data.id);var b=i.treeUtils.getIdFromNodeId(e.data.id);var l=new Ssp.model.util.TreeRequest();var j=false;var f="";switch(k){case"category":a=i.categoryUrl+"/"+b+"/challenge/";g="challenge";break;case"studentIntakeChallenge":a=i.personChallengeUrl;g="challenge";break;case"all":a=i.challengeUrl;g="challenge";break;case"challenge":a=i.challengeUrl+"/"+b+"/challengeReferral/";g="referral";d=true;j=true;f="description";break}if(a!=""){l.set("url",a);l.set("nodeType",g);l.set("isLeaf",d);l.set("nodeToAppendTo",e);l.set("enableCheckedItems",false);l.set("callbackFunc",i.onLoadComplete);l.set("callbackScope",i);l.set("includeToolTip",j);l.set("toolTipFieldName",f);i.treeUtils.getItems(l);i.getView().setLoading(true)}},onLoadComplete:function(a){a.getView().setLoading(false)},onItemClick:function(k,c,m,d,f,g){var i=this;var j;var a=i.treeUtils.getNameFromNodeId(c.data.id);var b=i.treeUtils.getIdFromNodeId(c.data.id);var h=i.treeUtils.getIdFromNodeId(c.data.parentId);var l=Ssp.util.Constants.DEFAULT_SYSTEM_CONFIDENTIALITY_LEVEL_ID;if(a=="referral"){j=function(n,e){var o=Ext.decode(n.responseText);var p=null;if(o.rows!=null){Ext.Array.each(o.rows,function(r,q){if(r.id==b){p=r}});if(p!=null){i.task.set("name",p.name);i.task.set("description",p.description);i.task.set("challengeReferralId",p.id)}i.task.set("challengeId",h);i.task.set("confidentialityLevel",{id:l});i.appEventsController.getApplication().fireEvent("loadTask")}};i.apiProperties.makeRequest({url:i.apiProperties.createUrl(i.challengeReferralUrl),method:"GET",jsonData:"",successFunc:j})}}});Ext.define("Ssp.controller.tool.studentintake.StudentIntakeToolViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson",appEventsController:"appEventsController",challengesStore:"challengesStore",childCareArrangementsStore:"childCareArrangementsStore",citizenshipsStore:"citizenshipsStore",educationGoalsStore:"educationGoalsStore",educationLevelsStore:"educationLevelsStore",employmentShiftsStore:"employmentShiftsStore",ethnicitiesStore:"ethnicitiesStore",formUtils:"formRendererUtils",fundingSourcesStore:"fundingSourcesStore",gendersStore:"gendersStore",maritalStatusesStore:"maritalStatusesStore",militaryAffiliationsStore:"militaryAffiliationsStore",personLite:"personLite",person:"currentPerson",statesStore:"statesStore",service:"studentIntakeService",studentStatusesStore:"studentStatusesStore",studentIntake:"currentStudentIntake",veteranStatusesStore:"veteranStatusesStore"},config:{studentIntakeForm:null},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"},saveSuccessMessage:"#saveSuccessMessage"},init:function(){var a=this;a.initStudentIntakeViews();a.appEventsController.getApplication().addListener("dynamicCompChange",function(c){var b=Ext.ComponentQuery.query(".mappedtextfield");var d=Ext.ComponentQuery.query(".mappedtextarea");Ext.each(b,function(f,e){if(c.id==f.parentId){if(c.checked){f.show();Ext.apply(f,{allowBlank:false})}else{f.hide();Ext.apply(f,{allowBlank:true})}}},this);Ext.each(d,function(f,e){if(c.id==f.parentId){if(c.checked){f.show()}else{f.hide()}}},this)},a);a.getView().setLoading(true);a.service.get(a.personLite.get("id"),{success:a.getStudentIntakeSuccess,failure:a.getStudentIntakeFailure,scope:a});return a.callParent(arguments)},destroy:function(){return this.callParent(arguments)},initStudentIntakeViews:function(){var b=this;var a=[Ext.createWidget("tabpanel",{width:"100%",height:"100%",activeTab:0,border:0,items:[{title:"Personal"+Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY,autoScroll:true,items:[{xtype:"studentintakepersonal"}]},{title:"Demographics",autoScroll:true,items:[{xtype:"studentintakedemographics"}]},{title:"EduPlan",autoScroll:true,items:[{xtype:"studentintakeeducationplans"}]},{title:"EduLevel",autoScroll:true,items:[{xtype:"studentintakeeducationlevels"}]},{title:"EduGoal",autoScroll:true,items:[{xtype:"studentintakeeducationgoals"}]},{title:"Funding",autoScroll:true,items:[{xtype:"studentintakefunding"}]},{title:"Challenges",autoScroll:true,hidden:!b.authenticatedPerson.hasAccess("STUDENT_INTAKE_CHALLENGE_TAB"),items:[{xtype:"studentintakechallenges"}]}]})];b.getView().add(a)},getStudentIntakeSuccess:function(d,b){var c=b;var a;c.getView().setLoading(false);if(d!=null){a=Ext.ModelManager.getModel("Ssp.model.tool.studentintake.StudentIntakeForm");c.studentIntake.data=a.getProxy().getReader().read(d).records[0].data;c.buildStudentIntake(c.studentIntake)}else{Ext.Msg.alert("Error","There was an error loading the Student Intake form for this student.")}},getStudentIntakeFailure:function(a,b){var c=b;c.getView().setLoading(false)},buildStudentIntake:function(s){var B=this;var b=s.data.person;var i=s.data.personDemographics;var z=s.data.personEducationPlan;var g=s.data.personEducationGoal;var k=s.data.personEducationLevels;var e=s.data.personFundingSources;var q=s.data.personChallenges;var f="";var A=Ext.getCmp("StudentIntakeEducationPlans");var c=Ext.getCmp("StudentIntakeDemographics");var v=Ext.getCmp("StudentIntakeEducationGoals");var x;var u;var y;var r;var t;var o;var n;var h;var j;var w=B.formUtils.alphaSortByField(s.data.referenceData.challenges,"name");var d=B.formUtils.alphaSortByField(s.data.referenceData.educationGoals,"name");var p=B.formUtils.alphaSortByField(s.data.referenceData.educationLevels,"name");var a=B.formUtils.alphaSortByField(s.data.referenceData.fundingSources,"name");var l=B.formUtils.alphaSortByField(s.data.referenceData.studentStatuses,"name");var m=B.formUtils.alphaSortByField(s.data.referenceData.militaryAffiliations,"name");B.challengesStore.loadData(w);B.childCareArrangementsStore.loadData(s.data.referenceData.childCareArrangements);B.citizenshipsStore.loadData(s.data.referenceData.citizenships);B.educationGoalsStore.loadData(d);B.educationLevelsStore.loadData(p);B.employmentShiftsStore.loadData(s.data.referenceData.employmentShifts);B.ethnicitiesStore.loadData(s.data.referenceData.ethnicities);B.fundingSourcesStore.loadData(a);B.gendersStore.loadData(s.data.referenceData.genders);B.maritalStatusesStore.loadData(s.data.referenceData.maritalStatuses);B.militaryAffiliationsStore.loadData(m);B.statesStore.loadData(s.data.referenceData.states);B.studentStatusesStore.loadData(l);B.veteranStatusesStore.loadData(s.data.referenceData.veteranStatuses);Ext.getCmp("StudentIntakePersonal").loadRecord(b);if(i!=null&&i!=undefined){c.loadRecord(i)}if(z!=null&&z!=undefined){A.loadRecord(z)}if(g!=null&&g!=undefined){v.loadRecord(g);if(g.get("educationGoalId")!=null){f=g.get("educationGoalId")}}j=150;u=[{parentId:Ssp.util.Constants.EDUCATION_GOAL_BACHELORS_DEGREE_ID,parentName:"bachelor",name:"description",label:"Describe bachelor's goal",fieldType:"mappedtextfield",labelWidth:200},{parentId:Ssp.util.Constants.EDUCATION_GOAL_MILITARY_ID,parentName:"military",name:"description",label:"Describe military goal",fieldType:"mappedtextfield",labelWidth:200},{parentId:Ssp.util.Constants.EDUCATION_GOAL_OTHER_ID,parentName:"other",name:"description",label:"Decribe your other goal",fieldType:"mappedtextfield",labelWidth:200}];x={mainComponentType:"radio",formId:"StudentIntakeEducationGoals",itemsArr:d,selectedItemId:f,idFieldName:"id",selectedItemsArr:[g.data],selectedIdFieldName:"educationGoalId",additionalFieldsMap:u,radioGroupId:"StudentIntakeEducationGoalsRadioGroup",radioGroupFieldSetId:"StudentIntakeEducationGoalsFieldSet"};B.formUtils.createForm(x);r=[{parentId:Ssp.util.Constants.EDUCATION_LEVEL_NO_DIPLOMA_GED_ID,parentName:"no diploma/no ged",name:"lastYearAttended",label:"Last Year Attended",fieldType:"mappedtextfield",labelWidth:j,validationExpression:"^(19|20)\\d{2}$",validationErrorMessage:"This field requires a valid year."},{parentId:Ssp.util.Constants.EDUCATION_LEVEL_NO_DIPLOMA_GED_ID,parentName:"no diploma/no ged",name:"highestGradeCompleted",label:"Highest Grade Completed",fieldType:"mappedtextfield",labelWidth:j,validationExpression:"^([0-9]|1[0-6])$",validationErrorMessage:"This field requires a numeric value between 0 and 16"},{parentId:Ssp.util.Constants.EDUCATION_LEVEL_GED_ID,parentName:"ged",name:"graduatedYear",label:"Year of GED",fieldType:"mappedtextfield",labelWidth:j,validationExpression:"^(19|20)\\d{2}$",validationErrorMessage:"This field requires a valid year."},{parentId:Ssp.util.Constants.EDUCATION_LEVEL_HIGH_SCHOOL_GRADUATION_ID,parentName:"high school graduation",name:"graduatedYear",label:"Year Graduated",fieldType:"mappedtextfield",labelWidth:j,validationExpression:"^(19|20)\\d{2}$",validationErrorMessage:"This field requires a valid year."},{parentId:Ssp.util.Constants.EDUCATION_LEVEL_HIGH_SCHOOL_GRADUATION_ID,parentName:"high school graduation",name:"schoolName",label:"High School Attended",fieldType:"mappedtextfield",labelWidth:j},{parentId:Ssp.util.Constants.EDUCATION_LEVEL_SOME_COLLEGE_CREDITS_ID,parentName:"some college credits",name:"lastYearAttended",label:"Last Year Attended",fieldType:"mappedtextfield",labelWidth:j,validationExpression:"^(19|20)\\d{2}$",validationErrorMessage:"This field requires a valid year."},{parentId:Ssp.util.Constants.EDUCATION_LEVEL_OTHER_ID,parentName:"other",name:"description",label:"Please Explain",fieldType:"mappedtextarea",labelWidth:j}];y={mainComponentType:"checkbox",formId:"StudentIntakeEducationLevels",fieldSetTitle:"Education level completed: Select all that apply",itemsArr:p,selectedItemsArr:k,idFieldName:"id",selectedIdFieldName:"educationLevelId",additionalFieldsMap:r};B.formUtils.createForm(y);o=[{parentId:Ssp.util.Constants.FUNDING_SOURCE_OTHER_ID,parentName:"other",name:"description",label:"Please Explain",fieldType:"mappedtextarea",labelWidth:j}];t={mainComponentType:"checkbox",formId:"StudentIntakeFunding",fieldSetTitle:"How will you pay for college?",itemsArr:a,selectedItemsArr:e,idFieldName:"id",selectedIdFieldName:"fundingSourceId",additionalFieldsMap:o};B.formUtils.createForm(t);h=[{parentId:Ssp.util.Constants.CHALLENGE_OTHER_ID,parentName:"other",name:"description",label:"Please Explain",fieldType:"mappedtextarea",labelWidth:j}];n={mainComponentType:"checkbox",formId:"StudentIntakeChallenges",fieldSetTitle:"Select all challenges that may be barriers to your academic success:",itemsArr:w,selectedItemsArr:q,idFieldName:"id",selectedIdFieldName:"challengeId",additionalFieldsMap:h};B.formUtils.createForm(n)},onSaveClick:function(a){var q=this;var k=q.formUtils;var m=Ext.getCmp("StudentIntakePersonal").getForm();var r=Ext.getCmp("StudentIntakeDemographics").getForm();var f=Ext.getCmp("StudentIntakeEducationPlans").getForm();var t=Ext.getCmp("StudentIntakeEducationGoals").getForm();var g=Ext.getCmp("StudentIntakeEducationLevels").getForm();var o=Ext.getCmp("StudentIntakeFunding").getForm();var l=Ext.getCmp("StudentIntakeChallenges").getForm();var e="";var n="";var c=null;var u=null;var i=null;var j=null;var h=null;var p="";var d={};var s=[m,r,f,g,t,o,l];var b=q.formUtils.validateForms(s);if(b.valid){m.updateRecord(q.studentIntake.get("person"));r.updateRecord(q.studentIntake.get("personDemographics"));f.updateRecord(q.studentIntake.get("personEducationPlan"));t.updateRecord(q.studentIntake.get("personEducationGoal"));e=q.studentIntake.get("personEducationGoal").data.educationGoalId;p=q.studentIntake.get("person").data.id;d={person:q.studentIntake.get("person").data,personDemographics:q.studentIntake.get("personDemographics").data,personEducationGoal:q.studentIntake.get("personEducationGoal").data,personEducationPlan:q.studentIntake.get("personEducationPlan").data,personEducationLevels:[],personFundingSources:[],personChallenges:[]};if(d.person.birthDate!=null){d.person.birthDate=q.formUtils.fixDateOffset(d.person.birthDate)}d.person=q.person.setPropsNullForSave(d.person);d.personDemographics.personId=p;d.personEducationGoal.personId=p;d.personEducationPlan.personId=p;c=t.getValues();n=k.getMappedFieldValueFromFormValuesByIdKey(c,e);d.personEducationGoal.description=n;u=g.getValues();d.personEducationLevels=k.createTransferObjectsFromSelectedValues("educationLevelId",u,p);i=o.getValues();d.personFundingSources=k.createTransferObjectsFromSelectedValues("fundingSourceId",i,p);j=l.getValues();d.personChallenges=k.createTransferObjectsFromSelectedValues("challengeId",j,p);q.getView().setLoading(true);q.service.save(q.personLite.get("id"),d,{success:q.saveStudentIntakeSuccess,failure:q.saveStudentIntakeFailure,scope:q})}else{q.formUtils.displayErrors(b.fields)}},saveStudentIntakeSuccess:function(c,a){var b=a;b.getView().setLoading(false);if(c.success==true){b.formUtils.displaySaveSuccessMessage(b.getSaveSuccessMessage())}},saveStudentIntakeFailure:function(a,b){var c=b;c.getView().setLoading(false)},onCancelClick:function(a){var b=this;b.getView().removeAll();b.initStudentIntakeViews();b.buildStudentIntake(b.studentIntake)}});Ext.define("Ssp.controller.tool.studentintake.DemographicsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{citizenshipsStore:"citizenshipsStore",model:"currentStudentIntake",sspConfig:"sspConfig"},config:{displayEmploymentShift:1},control:{primaryCaregiverCheckOn:"#primaryCaregiverCheckOn",primaryCaregiverCheckOff:"#primaryCaregiverCheckOff",childcareNeeded:{change:"onChildcareNeededChange"},childCareNeededCheckOn:"#childCareNeededCheckOn",childCareNeededCheckOff:"#childCareNeededCheckOff",isEmployed:{change:"onIsEmployedChange"},employedCheckOn:"#employedCheckOn",employedCheckOff:"#employedCheckOff",childcareArrangement:{hide:"onFieldHidden"},placeOfEmployment:{hide:"onFieldHidden"},shift:{hide:"onFieldHidden"},wage:{hide:"onFieldHidden"},totalHoursWorkedPerWeek:{hide:"onFieldHidden"}},init:function(){var h=this;var e=h.sspConfig.get("syncStudentPersonalDataWithExternalData");var a=Ext.getCmp("StudentIntakeDemographics");a.getForm().findField("gender").setDisabled(e);a.getForm().findField("maritalStatusId").setDisabled(e);a.getForm().findField("ethnicityId").setDisabled(e);var j=h.model.get("personDemographics");var c=Ext.ComponentQuery.query("#citizenship")[0];var d=Ext.ComponentQuery.query("#childcareNeeded")[0];var g=Ext.ComponentQuery.query("#isEmployed")[0];var f=h.model.get("personDemographics").get("primaryCaregiver");var b=h.model.get("personDemographics").get("childCareNeeded");var i=h.model.get("personDemographics").get("employed");if(j!=null&&j!=undefined){h.getPrimaryCaregiverCheckOn().setValue(f);h.getPrimaryCaregiverCheckOff().setValue(!f);h.getChildCareNeededCheckOn().setValue(b);h.getChildCareNeededCheckOff().setValue(!b);h.getEmployedCheckOn().setValue(i);h.getEmployedCheckOff().setValue(!i)}h.displayStudentIntakeDemographicsEmploymentShift=h.sspConfig.get("displayStudentIntakeDemographicsEmploymentShift");h.showHideChildcareArrangement(d.getValue());h.showHideEmploymentFields(g.getValue());return h.callParent(arguments)},onChildcareNeededChange:function(d,c,a,b){this.showHideChildcareArrangement(c)},showHideChildcareArrangement:function(a){var b=Ext.ComponentQuery.query("#childcareArrangement")[0];if(a.childCareNeeded=="true"){b.show()}else{b.hide()}},onIsEmployedChange:function(d,c,a,b){this.showHideEmploymentFields(c)},showHideEmploymentFields:function(d){var b=Ext.ComponentQuery.query("#placeOfEmployment")[0];var a=Ext.ComponentQuery.query("#shift")[0];var e=Ext.ComponentQuery.query("#wage")[0];var c=Ext.ComponentQuery.query("#totalHoursWorkedPerWeek")[0];if(d.employed=="true"){b.show();if(this.displayStudentIntakeDemographicsEmploymentShift){a.show()}else{a.hide()}e.show();c.show()}else{b.hide();a.hide();e.hide();c.hide()}},onFieldHidden:function(a,b){a.setValue("")}});Ext.define("Ssp.controller.tool.studentintake.EducationPlansViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{formUtils:"formRendererUtils",model:"currentStudentIntake",sspConfig:"sspConfig"},control:{parentsDegreeField:"#collegeDegreeForParents",collegeDegreeForParentsCheckOn:"#collegeDegreeForParentsCheckOn",collegeDegreeForParentsCheckOff:"#collegeDegreeForParentsCheckOff",specialNeedsField:"#specialNeeds",specialNeedsCheckOn:"#specialNeedsCheckOn",specialNeedsCheckOff:"#specialNeedsCheckOff"},init:function(){var e=this;var d=e.model.get("personEducationPlan");var a=e.sspConfig.get("educationPlanParentsDegreeLabel");var b=e.sspConfig.get("educationPlanSpecialNeedsLabel");var c=e.model.get("personEducationPlan").get("collegeDegreeForParents");var f=e.model.get("personEducationPlan").get("specialNeeds");e.getParentsDegreeField().setFieldLabel(a);e.getSpecialNeedsField().setFieldLabel(b);if(d!=null&&d!=undefined){e.getCollegeDegreeForParentsCheckOn().setValue(c);e.getCollegeDegreeForParentsCheckOff().setValue(!c);e.getSpecialNeedsCheckOn().setValue(f);e.getSpecialNeedsCheckOff().setValue(!f)}return e.callParent(arguments)}});Ext.define("Ssp.controller.tool.studentintake.PersonalViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{citizenshipsStore:"citizenshipsStore",sspConfig:"sspConfig"},control:{firstNameField:"#firstName",middleNameField:"#middleName",lastNameField:"#lastName",studentIdField:"#studentId",birthDateField:"#birthDate",homePhoneField:"#homePhone",workPhoneField:"#workPhone",cellPhoneField:"#cellPhone",addressLine1Field:"#addressLine1",addressLine2Field:"#addressLine2",cityField:"#city",stateField:"#state",zipCodeField:"#zipCode",primaryEmailAddressField:"#primaryEmailAddress"},init:function(){var b=this;var a=b.sspConfig.get("syncStudentPersonalDataWithExternalData");b.getFirstNameField().setDisabled(a);b.getMiddleNameField().setDisabled(a);b.getLastNameField().setDisabled(a);b.getBirthDateField().setDisabled(a);b.getHomePhoneField().setDisabled(a);b.getWorkPhoneField().setDisabled(a);b.getCellPhoneField().setDisabled(a);b.getAddressLine1Field().setDisabled(a);b.getAddressLine2Field().setDisabled(a);b.getCityField().setDisabled(a);b.getStateField().setDisabled(a);b.getZipCodeField().setDisabled(a);b.getPrimaryEmailAddressField().setDisabled(a);studentIdField=b.getStudentIdField();studentIdField.setDisabled(a);studentIdField.setFieldLabel(b.sspConfig.get("studentIdAlias")+Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY);Ext.apply(studentIdField,{minLength:b.sspConfig.get("studentIdMinValidationLength"),minLengthText:"",maxLength:b.sspConfig.get("studentIdMaxValidationLength"),maxLengthText:"",vtype:"studentIdValidator",vtypeText:b.sspConfig.get("studentIdValidationErrorText")});return b.callParent(arguments)}});Ext.define("Ssp.controller.tool.journal.JournalToolViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",confidentialityLevelsStore:"confidentialityLevelsStore",formUtils:"formRendererUtils",service:"journalEntryService",journalEntriesStore:"journalEntriesStore",journalSourcesStore:"journalSourcesStore",journalTracksStore:"journalTracksStore",model:"currentJournalEntry",personLite:"personLite"},config:{containerToLoadInto:"tools",formToDisplay:"editjournal",personJournalUrl:""},control:{view:{viewready:"onViewReady"},addButton:{click:"onAddClick"}},init:function(){var a=this;a.getView().setLoading(true);a.journalEntriesStore.removeAll();a.service.getAll(a.personLite.get("id"),{success:a.getAllJournalEntriesSuccess,failure:a.getAllJournalEntriesFailure,scope:a});a.confidentialityLevelsStore.load({params:{limit:50}});a.journalSourcesStore.load();a.journalTracksStore.load();return a.callParent(arguments)},getAllJournalEntriesSuccess:function(c,a){var b=a;b.getView().setLoading(false);if(c.rows.length>0){b.journalEntriesStore.loadData(c.rows)}},getAllJournalEntriesFailure:function(a,b){var c=b;c.getView().setLoading(false)},onViewReady:function(a,b){this.appEventsController.assignEvent({eventName:"editJournalEntry",callBackFunc:this.editJournalEntry,scope:this});this.appEventsController.assignEvent({eventName:"deleteJournalEntry",callBackFunc:this.deleteConfirmation,scope:this})},destroy:function(){var a=this;a.appEventsController.removeEvent({eventName:"editJournalEntry",callBackFunc:a.editJournalEntry,scope:a});a.appEventsController.removeEvent({eventName:"deleteJournalEntry",callBackFunc:a.deleteConfirmation,scope:a});return a.callParent(arguments)},onAddClick:function(b){var a=new Ssp.model.tool.journal.JournalEntry();this.model.data=a.data;this.loadEditor()},editJournalEntry:function(){this.loadEditor()},deleteConfirmation:function(){var c=this;var b="You are about to delete a Journal Entry. Would you like to continue?";var a=c.model;if(a.get("id")!=""){Ext.Msg.confirm({title:"Delete Journal Entry?",msg:b,buttons:Ext.Msg.YESNO,fn:c.deleteJournalEntry,scope:c})}else{Ext.Msg.alert("SSP Error","Unable to delete Journal Entry.")}},deleteJournalEntry:function(d){var b=this;var a=b.journalEntriesStore;var c=b.model.get("id");if(d=="yes"){b.getView().setLoading(true);b.service.destroy(b.personLite.get("id"),c,{success:b.destroyJournalEntrySuccess,failure:b.destroyJournalEntryFailure,scope:b})}},destroyJournalEntrySuccess:function(d,e,b){var c=b;var a=c.journalEntriesStore;c.getView().setLoading(false);a.remove(a.getById(e))},destroyJournalEntryFailure:function(a,b){var c=b;c.getView().setLoading(false)},loadEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.journal.EditJournalViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson",appEventsController:"appEventsController",confidentialityLevelsStore:"confidentialityLevelsStore",formUtils:"formRendererUtils",journalEntryService:"journalEntryService",model:"currentJournalEntry",personLite:"personLite"},config:{containerToLoadInto:"tools",mainFormToDisplay:"journal",sessionDetailsEditorDisplay:"journaltracktree",inited:false},control:{entryDateField:"#entryDateField",removeJournalTrackButton:{selector:"#removeJournalTrackButton",listeners:{click:"onRemoveJournalTrackButtonClick"}},journalTrackCombo:{selector:"#journalTrackCombo",listeners:{select:"onJournalTrackComboSelect",blur:"onJournalTrackComboBlur"}},confidentialityLevelCombo:{selector:"#confidentialityLevelCombo",listeners:{select:"onConfidentialityLevelComboSelect"}},journalSourceCombo:{selector:"#journalSourceCombo",listeners:{select:"onJournalSourceComboSelect"}},commentText:{change:"onCommentChange"},saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"},addSessionDetailsButton:{click:"onAddSessionDetailsClick"}},init:function(){var a=this;a.authenticatedPerson.applyConfidentialityLevelsFilter(a.confidentialityLevelsStore);a.initForm();return a.callParent(arguments)},initForm:function(){var b=this;var c=this.model.get("id");var a="";if(b.model.get("journalTrack")!=null){a=b.model.get("journalTrack").id}b.getView().getForm().reset();b.getView().getForm().loadRecord(this.model);b.getConfidentialityLevelCombo().setValue(b.model.getConfidentialityLevelId());b.getJournalSourceCombo().setValue(b.model.get("journalSource").id);b.getJournalTrackCombo().setValue(a);if(b.model.get("entryDate")==null){b.getEntryDateField().setValue(new Date())}b.inited=true},destroy:function(){var a=this;a.confidentialityLevelsStore.clearFilter();return a.callParent(arguments)},onSaveClick:function(d){var g=this;var e,b,h,a;var c=this.getView().getForm();var j=c.getValues();var f=false;var i="";a=this.url;e=this.model;b=e.get("id");if(!c.isValid()){f=true;Ext.Msg.alert("Error","Please correct the errors in your Journal Entry.")}if(e.get("comment")==""&&(e.data.journalTrack.id==null||e.data.journalTrack.id=="")){f=true;Ext.Msg.alert("Error","You are required to supply a Comment or Journal Track Details for a Journal Entry.")}if(f==false){if(e.data.journalTrack!=null){i=e.data.journalTrack.id}if((i!=null&&i!="")&&e.data.journalEntryDetails.length==0){Ext.Msg.alert("SSP Error","You have a Journal Track set in your entry. Please select the associated details for this Journal Entry.")}else{e.set("entryDate",g.formUtils.fixDateOffsetWithTime(e.data.entryDate));h=e.data;if(h.journalTrack==""){h.journalTrack=null;h.journalEntryDetails=null}if(h.journalEntryDetails!=null){h.journalEntryDetails=e.clearGroupedDetails(h.journalEntryDetails)}g.getView().setLoading(true);g.journalEntryService.save(g.personLite.get("id"),h,{success:g.saveSuccess,failure:g.saveFailure,scope:g})}}},saveSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.displayMain()},saveFailure:function(a,b){var c=b;c.getView().setLoading(false)},onCancelClick:function(a){this.displayMain()},onConfidentialityLevelComboSelect:function(b,a,c){if(a.length>0){this.model.set("confidentialityLevel",{id:a[0].get("id")})}},onJournalSourceComboSelect:function(b,a,c){if(a.length>0){this.model.set("journalSource",{id:a[0].get("id")})}},onJournalTrackComboSelect:function(b,a,c){var d=this;if(a.length>0){d.model.set("journalTrack",{id:a[0].get("id")});if(d.inited==true){d.model.removeAllJournalEntryDetails();d.appEventsController.getApplication().fireEvent("refreshJournalEntryDetails")}}else{d.removeJournalTrackAndSessionDetails()}},onJournalTrackComboBlur:function(a,d,b){var c=this;if(a.getValue()==""){c.removeJournalTrackAndSessionDetails()}},removeJournalTrackAndSessionDetails:function(){var a=this;a.model.set("journalTrack","");a.model.removeAllJournalEntryDetails();a.appEventsController.getApplication().fireEvent("refreshJournalEntryDetails")},onRemoveJournalTrackButtonClick:function(a){var b=this;var c=b.getJournalTrackCombo();c.clearValue();c.fireEvent("select",{combo:c,records:[],eOpts:{}})},onCommentChange:function(a,d,b,c){this.model.set("comment",d)},onAddSessionDetailsClick:function(a){if(this.model.get("journalTrack")!=null&&this.model.get("journalTrack")!=""){this.displaySessionDetails()}else{Ext.Msg.alert("Error","A Journal Track is required before selecting details.")}},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getMainFormToDisplay(),true,{})},displaySessionDetails:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getSessionDetailsEditorDisplay(),true,{})}});Ext.define("Ssp.controller.tool.journal.DisplayDetailsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController",model:"currentJournalEntry",store:"journalEntryDetailsStore"},control:{view:{viewready:"onViewReady"}},init:function(){var a=this;a.store.loadData(a.model.getGroupedDetails());return a.callParent(arguments)},onViewReady:function(){this.appEventsController.assignEvent({eventName:"refreshJournalEntryDetails",callBackFunc:this.onRefreshJournalEntryDetails,scope:this})},destroy:function(){this.appEventsController.removeEvent({eventName:"refreshJournalEntryDetails",callBackFunc:this.onRefreshJournalEntryDetails,scope:this})},onRefreshJournalEntryDetails:function(){this.init()}});Ext.define("Ssp.controller.tool.journal.TrackTreeViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",formUtils:"formRendererUtils",journalEntry:"currentJournalEntry",person:"currentPerson",treeUtils:"treeRendererUtils"},config:{containerToLoadInto:"tools",formToDisplay:"editjournal",journalTrackUrl:"",journalStepUrl:"",journalStepDetailUrl:""},control:{view:{itemexpand:"onItemExpand",itemClick:"onItemClick"},saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"}},init:function(){var a=null;this.journalTrackUrl=this.apiProperties.getItemUrl("journalTrack");this.journalStepUrl=this.apiProperties.getItemUrl("journalStep");this.journalStepDetailUrl=this.apiProperties.getItemUrl("journalStep");this.loadSteps();return this.callParent(arguments)},destroy:function(){this.treeUtils.clearRootCategories();return this.callParent(arguments)},loadSteps:function(){this.treeUtils.clearRootCategories();var b=this.journalEntry.get("journalTrack").id;if(b!=null&&b!=""){var a=new Ssp.model.util.TreeRequest();a.set("url",this.journalTrackUrl+"/"+b+"/journalStep?sort=name");a.set("nodeType","journalStep");a.set("isLeaf",false);a.set("enableCheckedItems",false);a.set("expanded",false);a.set("callbackFunc",this.afterJournalStepsLoaded);a.set("callbackScope",this);this.treeUtils.getItems(a)}},afterJournalStepsLoaded:function(a){a.getView().getView().getTreeStore().getRootNode().expandChildren()},onItemExpand:function(b,f){var e=this;var d=b;var c=e.journalStepDetailUrl;var g=e.treeUtils.getIdFromNodeId(d.data.id);if(c!=""){var a=new Ssp.model.util.TreeRequest();a.set("url",c+"/"+g+"/journalStepDetail?sort=name");a.set("nodeType","journalDetail");a.set("isLeaf",true);a.set("nodeToAppendTo",d);a.set("enableCheckedItems",true);a.set("callbackFunc",e.afterJournalDetailsLoaded);a.set("callbackScope",e);a.set("removeParentWhenNoChildrenExist",true);e.treeUtils.getItems(a)}},afterJournalDetailsLoaded:function(a){var b=a.journalEntry.get("journalEntryDetails");if(b!=""&&b!=null){Ext.Array.each(b,function(d,c){var e=d.journalStepDetails;Ext.Array.each(e,function(f,g){var i=f.id;var h=a.getView().getView().getTreeStore().getNodeById(i+"_journalDetail");if(h!=null){h.set("checked",true)}})})}},onItemClick:function(b,a,f,c,g,d){},onSaveClick:function(c){var f=this;var d=f.journalEntry;var a=f.getView();var e=f.treeUtils;var b=a.getView().getChecked();d.removeAllJournalEntryDetails();Ext.Array.each(b,function(g,i){var n=f.treeUtils.getIdFromNodeId(g.data.id);var l=g.data.text;var m=f.treeUtils.getIdFromNodeId(g.data.parentId);var h=g.parentNode.data.text;var k=null;var j=null;k={id:m,name:h};j={id:n,name:l};d.addJournalDetail(k,j)},this);this.displayJournalEditor()},onCancelClick:function(a){this.displayJournalEditor()},displayJournalEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.earlyalert.EarlyAlertToolViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController",confidentialityLevelsStore:"confidentialityLevelsStore",campusesStore:"campusesStore",earlyAlertsStore:"earlyAlertsStore",earlyAlertService:"earlyAlertService",earlyAlertResponseService:"earlyAlertResponseService",earlyAlert:"currentEarlyAlert",earlyAlertResponse:"currentEarlyAlertResponse",formUtils:"formRendererUtils",outcomesStore:"earlyAlertOutcomesStore",outreachesStore:"earlyAlertOutreachesStore",reasonsStore:"earlyAlertReasonsStore",personLite:"personLite",referralsStore:"earlyAlertReferralsStore",suggestionsStore:"earlyAlertSuggestionsStore",treeStore:"earlyAlertsTreeStore"},config:{containerToLoadInto:"tools",formToDisplay:"earlyalertresponse",earlyAlertDetailsDisplay:"earlyalertdetails",earlyAlertResponseDetailsDisplay:"earlyalertresponsedetails"},control:{view:{viewready:"onViewReady",itemexpand:"onItemExpand"},respondButton:{click:"onRespondClick"},displayDetailsButton:{click:"onDisplayDetailsClick"}},init:function(){return this.callParent(arguments)},onViewReady:function(a,c){var b=this;b.campusesStore.load({params:{limit:50}});b.confidentialityLevelsStore.load({params:{limit:50}});b.outcomesStore.load({params:{limit:50}});b.outreachesStore.load({params:{limit:50}});b.reasonsStore.load({params:{limit:50}});b.suggestionsStore.load({params:{limit:50}});b.referralsStore.load({params:{limit:50},callback:function(e,d,f){if(f==true){b.getEarlyAlerts()}else{Ext.Msg.alert("Ssp Error","Failed to load referrals. See your system administrator for assitance.")}}})},destroy:function(){return this.callParent(arguments)},getEarlyAlerts:function(){var b=this;var a=b.personLite.get("id");b.getView().setLoading(true);b.earlyAlertService.getAll(a,{success:b.getEarlyAlertsSuccess,failure:b.getEarlyAlertsFailure,scope:b})},getEarlyAlertsSuccess:function(c,a){var b=a;var d;b.getView().setLoading(false);if(b.earlyAlertsStore.getCount()>0){b.getView().getSelectionModel().select(0)}else{d=new Ssp.model.tool.earlyalert.PersonEarlyAlert();b.earlyAlert.data=d.data}},getEarlyAlertsFailure:function(c,a){var b=a;b.getView().setLoading(false)},onItemExpand:function(b,f){var e=this;var d=b;var a=d.get("nodeType");var g=d.get("id");var c=e.personLite.get("id");if(d!=null){if(a=="early alert"&&g!="root"&&g!=""){e.getView().setLoading(true);e.earlyAlertService.getAllEarlyAlertResponses(c,g,{success:e.getEarlyAlertResponsesSuccess,failure:e.getEarlyAlertResponsesFailure,scope:e})}}},getEarlyAlertResponsesSuccess:function(d,b){var c=b;var a=new Ssp.model.tool.earlyalert.EarlyAlertResponse();c.earlyAlertResponse.data=a.data;c.getView().setLoading(false)},getEarlyAlertResponsesFailure:function(c,a){var b=a;b.getView().setLoading(false)},onRespondClick:function(b){var c=this;var a=c.getView().getSelectionModel().getSelection()[0];if(a!=null){if(a.get("nodeType")=="early alert"){for(prop in c.earlyAlert.data){c.earlyAlert.data[prop]=a.data[prop]}c.loadEditor()}else{Ext.Msg.alert("Notification","Please select an Early Alert to send a response.")}}else{Ext.Msg.alert("Notification","Please select an Early Alert to send a response.")}},onDisplayDetailsClick:function(b){var c=this;var a=c.getView().getSelectionModel().getSelection()[0];if(a!=null){if(a.get("nodeType")=="early alert"){for(prop in c.earlyAlert.data){c.earlyAlert.data[prop]=a.data[prop]}c.displayEarlyAlertDetails()}else{for(prop in c.earlyAlertResponse.data){c.earlyAlertResponse.data[prop]=a.data[prop]}c.displayEarlyAlertResponseDetails()}}else{Ext.Msg.alert("Notification","Please select an item to view.")}},loadEditor:function(b){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})},displayEarlyAlertDetails:function(b){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getEarlyAlertDetailsDisplay(),true,{})},displayEarlyAlertResponseDetails:function(b){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getEarlyAlertResponseDetailsDisplay(),true,{})}});Ext.define("Ssp.controller.tool.earlyalert.EarlyAlertResponseViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",earlyAlert:"currentEarlyAlert",earlyAlertResponseService:"earlyAlertResponseService",earlyAlertService:"earlyAlertService",formUtils:"formRendererUtils",model:"currentEarlyAlertResponse",personLite:"personLite",authenticatedPerson:"authenticatedPerson"},config:{containerToLoadInto:"tools",formToDisplay:"earlyalert"},control:{outreachList:{selector:"#outreachList",listeners:{validitychange:"onOutreachListValidityChange"}},outcomeCombo:{selector:"#outcomeCombo",listeners:{select:"onOutcomeComboSelect"}},otherOutcomeDescriptionText:{selector:"#otherOutcomeDescriptionText"},saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"}},init:function(){var a=this;a.getView().getForm().reset();a.getView().getForm().loadRecord(a.model);a.showHideOtherOutcomeDescription();return a.callParent(arguments)},onOutcomeComboSelect:function(b,a,c){this.showHideOtherOutcomeDescription()},showHideOtherOutcomeDescription:function(){var a=this;if(a.getOutcomeCombo().getValue()==Ssp.util.Constants.OTHER_EARLY_ALERT_OUTCOME_ID){a.getOtherOutcomeDescriptionText().show()}else{a.getOtherOutcomeDescriptionText().hide()}},onOutreachListValidityChange:function(a,c,b){},onSaveClick:function(f){var i=this;var g,c,j,a;var m=i.personLite.get("id");var d=i.earlyAlert.get("id");var l=Ext.ComponentQuery.query("#earlyAlertReferralsItemSelector")[0];var k=[];var b=i.getView().getForm();var h=i.getOutreachList().getValue();var e=false;if(h.length>0){if(h[0]!=""){e=true}}if(e==false){i.getOutreachList().setValue(["1"]);i.getOutreachList().setValue([]);i.getOutreachList().addCls("multiselect-invalid");i.getOutreachList().markInvalid("At least one Outreach is required.")}if(b.isValid()&&e){b.updateRecord();g=i.model;k=l.getValue();if(k.length>0){g.set("earlyAlertReferralIds",k)}else{g.set("earlyAlertReferralIds",[])}g.set("earlyAlertId",d);j=g.data;i.getView().setLoading(true);i.earlyAlertResponseService.save(m,d,j,{success:i.saveEarlyAlertResponseSuccess,failure:i.saveEarlyAlertResponseFailure,scope:i})}else{Ext.Msg.alert("Error","Please correct the indicated errors in this form.")}},saveEarlyAlertResponseSuccess:function(c,a){var b=a;b.getView().setLoading(false);Ext.Msg.confirm({title:"Your response was saved.",msg:"Would you like to close the Early Alert Notice",buttons:Ext.Msg.YESNO,fn:b.closeEarlyAlertConfirm,scope:b})},saveEarlyAlertResponseFailure:function(a,b){var c=b;c.getView().setLoading(false)},closeEarlyAlertConfirm:function(d){var c=this;var a;var b=c.personLite.get("id");if(d=="yes"){if(c.earlyAlert.get("closedById")==""||c.earlyAlert.get("closedById")==null){c.earlyAlert.set("closedDate",c.formUtils.fixDateOffsetWithTime(new Date()));c.earlyAlert.set("closedById",c.authenticatedPerson.getId())}a=c.earlyAlert.data;delete a.earlyAlertReasonId;c.earlyAlertService.save(b,a,{success:c.closeEarlyAlertSuccess,failure:c.closeEarlyAlertFailure,scope:c})}else{c.displayMain()}},closeEarlyAlertSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.displayMain()},closeEarlyAlertFailure:function(a,b){var c=b;c.getView().setLoading(false)},onCancelClick:function(a){this.displayMain()},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.earlyalert.EarlyAlertReferralsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",columnRendererUtils:"columnRendererUtils",earlyAlertResponse:"currentEarlyAlertResponse",service:"earlyAlertReferralService",store:"earlyAlertReferralsBindStore"},init:function(){var a=this;a.service.getAll({success:a.getAllSuccess,failure:a.getAllFailure,scope:a});return this.callParent(arguments)},getAllSuccess:function(f,d){var e=d;var c;var b=e.getView();var a=e.earlyAlertResponse.get("earlyAlertReferralIds");if(f.rows.length>0){e.store.loadData(f.rows);c=[{xtype:"itemselectorfield",itemId:"earlyAlertReferralsItemSelector",name:"earlyAlertReferrals",anchor:"100%",height:250,fieldLabel:"Department Referrals",store:e.store,displayField:"name",valueField:"id",value:((a.length>0)?a:[]),allowBlank:true,buttons:["add","remove"]}];b.add(c)}},getAllFailure:function(a,b){var c=b}});Ext.define("Ssp.controller.tool.earlyalert.EarlyAlertDetailsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",campusesStore:"campusesStore",formUtils:"formRendererUtils",model:"currentEarlyAlert",personService:"personService",reasonsStore:"earlyAlertReasonsStore",suggestionsStore:"earlyAlertSuggestionsStore",selectedSuggestionsStore:"earlyAlertDetailsSuggestionsStore"},config:{containerToLoadInto:"tools",formToDisplay:"earlyalert"},control:{finishButton:{click:"onFinishButtonClick"},earlyAlertSuggestionsList:"#earlyAlertSuggestionsList",campusField:"#campusField",earlyAlertReasonField:"#earlyAlertReasonField",statusField:"#statusField",createdByField:"#createdByField",closedByField:"#closedByField"},init:function(){var b=this;var c=[];var a=b.campusesStore.getById(b.model.get("campusId"));var e=((b.model.get("earlyAlertReasonIds")!=null)?b.model.get("earlyAlertReasonIds")[0].id:b.model.get("earlyAlertReasonId"));var d=b.reasonsStore.getById(e);b.getView().getForm().reset();b.getView().loadRecord(b.model);b.getCreatedByField().setValue(b.model.getCreatedByPersonName());b.getStatusField().setValue(((b.model.get("closedDate"))?"Closed":"Open"));b.getCampusField().setValue(((a)?a.get("name"):"No Campus Defined"));b.getEarlyAlertReasonField().setValue(((d)?d.get("name"):"No Reason Defined"));c=b.formUtils.getSimpleItemsForDisplay(b.suggestionsStore,b.model.get("earlyAlertSuggestionIds"),"Suggestions");b.selectedSuggestionsStore.removeAll();b.selectedSuggestionsStore.loadData(c);if(b.model.get("closedById")!=null){if(b.model.get("closedById")!=""){b.getView().setLoading(true);b.personService.get(b.model.get("closedById"),{success:b.getPersonSuccess,failure:b.getPersonFailure,scope:b})}}return this.callParent(arguments)},getPersonSuccess:function(c,a){var b=a;var d="";b.getView().setLoading(false);if(c!=null){d=c.firstName+" "+(c.middleName?c.middleName+" ":"")+c.lastName;b.getClosedByField().setValue(d)}},getPersonFailure:function(a,b){var c=b;c.getView().setLoading(false)},onFinishButtonClick:function(b){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.earlyalert.EarlyAlertResponseDetailsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",outcomesStore:"earlyAlertOutcomesStore",outreachesStore:"earlyAlertOutreachesStore",referralsStore:"earlyAlertReferralsStore",formUtils:"formRendererUtils",model:"currentEarlyAlertResponse",selectedOutreachesStore:"earlyAlertResponseDetailsOutreachesStore",selectedReferralsStore:"earlyAlertResponseDetailsReferralsStore"},config:{containerToLoadInto:"tools",formToDisplay:"earlyalert"},control:{finishButton:{click:"onFinishButtonClick"},outcomeField:"#outcomeField",createdByField:"#createdByField"},init:function(){var d=this;var d=this;var b=[];var a=[];var c=d.outcomesStore.getById(d.model.get("earlyAlertOutcomeId"));d.getView().getForm().reset();d.getView().loadRecord(d.model);d.getCreatedByField().setValue(d.model.getCreatedByPersonName());d.getOutcomeField().setValue(c.get("name"));b=d.formUtils.getSimpleItemsForDisplay(d.outreachesStore,d.model.get("earlyAlertOutreachIds"),"Outreaches");d.selectedOutreachesStore.removeAll();d.selectedOutreachesStore.loadData(b);a=d.formUtils.getSimpleItemsForDisplay(d.referralsStore,d.model.get("earlyAlertReferralIds"),"Referrals");d.selectedReferralsStore.removeAll();d.selectedReferralsStore.loadData(a);return this.callParent(arguments)},onFinishButtonClick:function(b){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.document.StudentDocumentToolViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",formUtils:"formRendererUtils",person:"currentPerson",model:"currentDocument",documentsStore:"documentsStore",confidentialityLevelsStore:"confidentialityLevelsStore"},config:{containerToLoadInto:"tools",formToDisplay:"editdocument",personDocumentUrl:""},control:{view:{viewready:"onViewReady"},addButton:{click:"onAddClick"}},init:function(){var c=this;var b=this.person.get("id");var e=function(g,f){var h=Ext.decode(g.responseText);if(h.rows.length>0){c.documentsStore.loadData(h.rows)}};this.confidentialityLevelsStore.load();this.personDocumentUrl=this.apiProperties.createUrl(this.apiProperties.getItemUrl("personDocument"));this.personDocumentUrl=this.personDocumentUrl.replace("{id}",b);this.apiProperties.makeRequest({url:this.personDocumentUrl,method:"GET",successFunc:e});var a={success:true,results:0,rows:[]};var d=[{id:"240e97c0-7fe5-11e1-b0c4-0800200c9a66",name:"My Document",note:"This is my document",confidentialityLevel:{id:"afe3e3e6-87fa-11e1-91b2-0026b9e7ff4c",name:"EVERYONE"},createdBy:{id:"58ba5ee3-734e-4ae9-b9c5-943774b4de41",firstName:"System",lastName:"Administrator"},modifiedBy:{id:"58ba5ee3-734e-4ae9-b9c5-943774b4de41",firstName:"System",lastName:"Administrator"},createdDate:1331269200000}];a.rows=d;this.documentsStore.loadData(a.rows);return this.callParent(arguments)},onViewReady:function(a,b){this.appEventsController.assignEvent({eventName:"editDocument",callBackFunc:this.editDocument,scope:this});this.appEventsController.assignEvent({eventName:"deleteDocument",callBackFunc:this.deleteConfirmation,scope:this})},destroy:function(){this.appEventsController.removeEvent({eventName:"editDocument",callBackFunc:this.editDocument,scope:this});this.appEventsController.removeEvent({eventName:"deleteDocument",callBackFunc:this.deleteConfirmation,scope:this});return this.callParent(arguments)},onAddClick:function(b){var a=new Ssp.model.PersonDocument();this.model.data=a.data;this.loadEditor()},editDocument:function(){this.loadEditor()},deleteConfirmation:function(){var b="You are about to delete a document. Would you like to continue?";var a=this.model;if(a.get("id")!=""){Ext.Msg.confirm({title:"Delete Document?",msg:b,buttons:Ext.Msg.YESNO,fn:this.deleteDocument,scope:this})}else{Ext.Msg.alert("SSP Error","Unable to delete document.")}},deleteDocument:function(c){var a=this.documentsStore;var b=this.model.get("id");if(c=="yes"){this.apiProperties.makeRequest({url:this.personDocumentUrl+"/"+b,method:"DELETE",successFunc:function(d,e){a.remove(a.getById(b))}})}},loadEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.document.EditDocumentViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",formUtils:"formRendererUtils",person:"currentPerson",model:"currentDocument"},config:{containerToLoadInto:"tools",formToDisplay:"studentdocuments",url:"",inited:false},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"}},init:function(){this.url=this.apiProperties.createUrl(this.apiProperties.getItemUrl("personDocument"));this.url=this.url.replace("{id}",this.person.get("id"));this.initForm();return this.callParent(arguments)},initForm:function(){var a=this.model.get("id");this.getView().getForm().reset();this.getView().getForm().loadRecord(this.model);if(a!=null&&a!=""){Ext.ComponentQuery.query("#confidentialityLevelCombo")[0].setValue(this.model.get("confidentialityLevel").id)}this.inited=true},onSaveClick:function(d){var g=this;var a,h,e,c;var f=this.getView().getForm();var b=f.getValues();c=this.url;a=this.model;h=a.get("id");successFunc=function(j,i){g.displayMain()};if(f.isValid()){f.updateRecord();a.set("confidentialityLevel",{id:f.getValues().confidentialityLevelId});e=a.data;if(h.length>0){this.apiProperties.makeRequest({url:c+"/"+h,method:"PUT",jsonData:e,successFunc:successFunc})}else{this.apiProperties.makeRequest({url:c,method:"POST",jsonData:e,successFunc:successFunc})}}else{Ext.Msg.alert("Error","Please correct the errors in your document.")}},onCancelClick:function(a){this.displayMain()},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.tool.sis.TranscriptViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",service:"transcriptService",personLite:"personLite"},init:function(){var b=this;var a=b.personLite.get("id");b.getView().setLoading(true);b.service.getAll(a,{success:b.getTranscriptSuccess,failure:b.getTranscriptFailure,scope:b});return this.callParent(arguments)},getTranscriptSuccess:function(c,a){var b=a;b.getView().setLoading(false)},getTranscriptFailure:function(a,b){var c=b;c.getView().setLoading(false)}});Ext.define("Ssp.controller.admin.AbstractReferenceAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson"},control:{view:{beforeedit:"onBeforeEdit",edit:"editRecord"},addButton:{click:"addRecord"},deleteButton:{click:"deleteConfirmation"},recordPager:"#recordPager"},init:function(){return this.callParent(arguments)},onBeforeEdit:function(c,f,b){var d=this;var a=d.authenticatedPerson.hasAccess("ABSTRACT_REFERENCE_ADMIN_EDIT");if(d.authenticatedPerson.isDeveloperRestrictedContent(f.record)){d.authenticatedPerson.showDeveloperRestrictedContentAlert();return false}if(a==false){d.authenticatedPerson.showUnauthorizedAccessAlert()}return a},editRecord:function(d,f,b){var a=f.record;var g=a.get("id");var c=a.data;Ext.Ajax.request({url:d.grid.getStore().getProxy().url+"/"+g,method:"PUT",headers:{"Content-Type":"application/json"},jsonData:c,success:function(h,e){var i=Ext.decode(h.responseText);a.commit();d.grid.getStore().sync()},failure:this.apiProperties.handleError},this)},addRecord:function(c){var e=this;var b=c.up("grid");var a=b.getStore();var d=Ext.create(a.model.modelName,{});if(e.authenticatedPerson.isDeveloperRestrictedContent(d)){e.authenticatedPerson.showDeveloperRestrictedContentAlert();return false}d.set("name","default");Ext.Array.each(b.columns,function(g,f){if(g.required==true){d.set(g.dataIndex,"default")}});if(d.sortOrder!=null){d.set("sortOrder",a.getTotalCount()+1)}Ext.Ajax.request({url:b.getStore().getProxy().url,method:"POST",headers:{"Content-Type":"application/json"},jsonData:d.data,success:function(g,f){var h=Ext.decode(g.responseText);d.populateFromGenericObject(h);a.insert(0,d);b.plugins[0].startEdit(0,0);b.plugins[0].editor.items.getAt(0).selectText();a.totalCount=a.totalCount+1;e.getRecordPager().onLoad()},failure:e.apiProperties.handleError},e)},deleteConfirmation:function(c){var f=this;var b=c.up("grid");var a=b.getStore();var d=b.getView().getSelectionModel().getSelection()[0];var e;if(d!=null&&d.get("id")){if(f.authenticatedPerson.isDeveloperRestrictedContent(d)){f.authenticatedPerson.showDeveloperRestrictedContentAlert();return false}if(!Ssp.util.Constants.isRestrictedAdminItemId(d.get("id"))){e="You are about to delete "+d.get("name")+". Would you like to continue?";Ext.Msg.confirm({title:"Delete?",msg:e,buttons:Ext.Msg.YESNO,fn:f.deleteRecord,scope:f})}else{Ext.Msg.alert("WARNING","This item is related to core SSP functionality. Please see a developer to delete this item.")}}else{Ext.Msg.alert("SSP Error","Please select an item to delete.")}},deleteRecord:function(f){var d=this;var b=d.getView();var a=b.getStore();var c=b.getView().getSelectionModel().getSelection()[0];var e=c.get("id");if(f=="yes"){d.apiProperties.makeRequest({url:a.getProxy().url+"/"+e,method:"DELETE",successFunc:function(g,i){var h=Ext.decode(g.responseText);if(Boolean(h.success)==true){a.remove(a.getById(e));a.totalCount=a.totalCount-1;d.getRecordPager().onLoad();d.getRecordPager().doRefresh()}}})}}});Ext.define("Ssp.controller.admin.ConfidentialityDisclosureAgreementAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",formUtils:"formRendererUtils",store:"confidentialityDisclosureAgreementsStore",service:"confidentialityDisclosureAgreementService"},control:{saveButton:{click:"save"},saveSuccessMessage:"#saveSuccessMessage"},init:function(){this.store.load({scope:this,callback:this.loadConfidentialityDisclosureAgreementResult});return this.callParent(arguments)},loadConfidentialityDisclosureAgreementResult:function(b,a,d){var c=new Ssp.model.reference.ConfidentialityDisclosureAgreement();if(d){if(b.length>0){c.populateFromGenericObject(b[0].data)}}this.getView().loadRecord(c)},save:function(c){var b,f,d;var e=this;var a=e.getView();a.getForm().updateRecord();b=a.getRecord();f=b.get("id");d=b.data;a.setLoading(true);e.service.save(d,{success:e.saveSuccess,failure:e.saveFailure,scope:e})},saveSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.formUtils.displaySaveSuccessMessage(b.getSaveSuccessMessage())},saveFailure:function(a,b){var c=b;c.getView().setLoading(false)}});Ext.define("Ssp.controller.admin.crg.ChallengeAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{confidentialityLevelsStore:"confidentialityLevelsStore"},init:function(){this.confidentialityLevelsStore.load();return this.callParent(arguments)}});Ext.define("Ssp.controller.admin.crg.ChallengeReferralAdminViewController",{extend:"Deft.mvc.ViewController",init:function(){return this.callParent(arguments)}});Ext.define("Ssp.controller.admin.crg.DisplayChallengesAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",store:"challengesStore",formUtils:"formRendererUtils",model:"currentChallenge"},config:{containerToLoadInto:"adminforms",formToDisplay:"editchallenge"},control:{editButton:{click:"onEditClick"},addButton:{click:"onAddClick"},deleteButton:{click:"deleteConfirmation"}},init:function(){var a=this;a.formUtils.reconfigureGridPanel(a.getView(),a.store);a.store.load();return a.callParent(arguments)},onEditClick:function(c){var b,a;b=c.up("grid");a=b.getView().getSelectionModel().getSelection()[0];if(a){this.model.data=a.data;this.displayEditor()}else{Ext.Msg.alert("SSP Error","Please select an item to edit.")}},onAddClick:function(b){var a=new Ssp.model.reference.Challenge();this.model.data=a.data;this.displayEditor()},deleteConfirmation:function(c){var f=this;var b=c.up("grid");var a=b.getStore();var d=b.getView().getSelectionModel().getSelection()[0];var e;if(d.get("id")){if(!Ssp.util.Constants.isRestrictedAdminItemId(d.get("id"))){e="You are about to delete "+d.get("name")+". Would you like to continue?";Ext.Msg.confirm({title:"Delete?",msg:e,buttons:Ext.Msg.YESNO,fn:f.deleteRecord,scope:f})}else{Ext.Msg.alert("WARNING","This item is related to core SSP functionality. Please see a developer to delete this item.")}}else{Ext.Msg.alert("SSP Error","Unable to delete item.")}},deleteRecord:function(f){var d=this;var b=d.getView();var a=b.getStore();var c=b.getView().getSelectionModel().getSelection()[0];var e=c.get("id");if(f=="yes"){d.apiProperties.makeRequest({url:a.getProxy().url+"/"+e,method:"DELETE",successFunc:function(g,h){a.remove(a.getById(e))}})}},displayEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.crg.DisplayReferralsAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",store:"challengeReferralsStore",formUtils:"formRendererUtils",model:"currentChallengeReferral"},config:{containerToLoadInto:"adminforms",formToDisplay:"editreferral"},control:{editButton:{click:"onEditClick"},addButton:{click:"onAddClick"},deleteButton:{click:"deleteConfirmation"}},init:function(){var a=this;a.formUtils.reconfigureGridPanel(a.getView(),a.store);a.store.load();return a.callParent(arguments)},onEditClick:function(c){var b,a;b=c.up("grid");a=b.getView().getSelectionModel().getSelection()[0];if(a){this.model.data=a.data;this.displayEditor()}else{Ext.Msg.alert("SSP Error","Please select an item to edit.")}},onAddClick:function(b){var a=new Ssp.model.reference.ChallengeReferral();this.model.data=a.data;this.displayEditor()},deleteConfirmation:function(c){var f=this;var b=c.up("grid");var a=b.getStore();var d=b.getView().getSelectionModel().getSelection()[0];var e;if(d.get("id")){e="You are about to delete "+d.get("name")+". Would you like to continue?";Ext.Msg.confirm({title:"Delete?",msg:e,buttons:Ext.Msg.YESNO,fn:f.deleteRecord,scope:f})}else{Ext.Msg.alert("SSP Error","Unable to delete item.")}},deleteRecord:function(f){var d=this;var b=d.getView();var a=b.getStore();var c=b.getView().getSelectionModel().getSelection()[0];var e=c.get("id");if(f=="yes"){d.apiProperties.makeRequest({url:a.getProxy().url+"/"+e,method:"DELETE",successFunc:function(g,h){a.remove(a.getById(e))}})}},displayEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.crg.EditChallengeViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",formUtils:"formRendererUtils",model:"currentChallenge",store:"challengesStore"},config:{containerToLoadInto:"adminforms",formToDisplay:"challengeadmin"},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"}},init:function(){this.getView().getForm().loadRecord(this.model);return this.callParent(arguments)},onSaveClick:function(c){var e=this;var a,f,d,b;b=this.store.getProxy().url;this.getView().getForm().updateRecord();a=this.model;f=a.get("id");d=a.data;successFunc=function(h,g){e.displayMain()};if(f.length>0){this.apiProperties.makeRequest({url:b+"/"+f,method:"PUT",jsonData:d,successFunc:successFunc})}else{this.apiProperties.makeRequest({url:b,method:"POST",jsonData:d,successFunc:successFunc})}},onCancelClick:function(a){this.displayMain()},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.crg.EditReferralViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",formUtils:"formRendererUtils",model:"currentChallengeReferral",store:"challengeReferralsStore"},config:{containerToLoadInto:"adminforms",formToDisplay:"challengereferraladmin"},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"}},init:function(){this.getView().getForm().loadRecord(this.model);return this.callParent(arguments)},onSaveClick:function(c){var e=this;var a,f,d,b;b=this.store.getProxy().url;this.getView().getForm().updateRecord();a=this.model;f=a.get("id");d=a.data;successFunc=function(h,g){e.displayMain()};if(f.length>0){this.apiProperties.makeRequest({url:b+"/"+f,method:"PUT",jsonData:d,successFunc:successFunc})}else{this.apiProperties.makeRequest({url:b,method:"POST",jsonData:d,successFunc:successFunc})}},onCancelClick:function(a){this.displayMain()},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.journal.JournalStepAdminViewController",{extend:"Deft.mvc.ViewController",init:function(){return this.callParent(arguments)}});Ext.define("Ssp.controller.admin.journal.JournalStepDetailAdminViewController",{extend:"Deft.mvc.ViewController",init:function(){return this.callParent(arguments)}});Ext.define("Ssp.controller.admin.journal.DisplayDetailsAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",store:"journalDetailsStore",formUtils:"formRendererUtils",model:"currentJournalStepDetail"},config:{containerToLoadInto:"adminforms",formToDisplay:"editjournalstepdetail"},control:{editButton:{click:"onEditClick"},addButton:{click:"onAddClick"},deleteButton:{click:"deleteConfirmation"}},init:function(){var a=this;a.formUtils.reconfigureGridPanel(a.getView(),a.store);a.store.load();return a.callParent(arguments)},onEditClick:function(c){var b,a;b=c.up("grid");a=b.getView().getSelectionModel().getSelection()[0];if(a){this.model.data=a.data;this.displayEditor()}else{Ext.Msg.alert("SSP Error","Please select an item to edit.")}},onAddClick:function(b){var a=new Ssp.model.reference.JournalStepDetail();this.model.data=a.data;this.displayEditor()},deleteConfirmation:function(c){var f=this;var b=c.up("grid");var a=b.getStore();var d=b.getView().getSelectionModel().getSelection()[0];var e;if(d.get("id")){e="You are about to delete "+d.get("name")+". Would you like to continue?";Ext.Msg.confirm({title:"Delete?",msg:e,buttons:Ext.Msg.YESNO,fn:f.deleteRecord,scope:f})}else{Ext.Msg.alert("SSP Error","Unable to delete item.")}},deleteRecord:function(f){var d=this;var b=d.getView();var a=b.getStore();var c=b.getView().getSelectionModel().getSelection()[0];var e=c.get("id");if(f=="yes"){d.apiProperties.makeRequest({url:a.getProxy().url+"/"+e,method:"DELETE",successFunc:function(g,h){a.remove(a.getById(e))}})}},displayEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.journal.DisplayStepsAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",store:"journalStepsStore",formUtils:"formRendererUtils",model:"currentJournalStep"},config:{containerToLoadInto:"adminforms",formToDisplay:"editjournalstep"},control:{editButton:{click:"onEditClick"},addButton:{click:"onAddClick"},deleteButton:{click:"deleteConfirmation"}},init:function(){var a=this;a.formUtils.reconfigureGridPanel(a.getView(),a.store);a.store.load();return a.callParent(arguments)},onEditClick:function(c){var b,a;b=c.up("grid");a=b.getView().getSelectionModel().getSelection()[0];if(a){this.model.data=a.data;this.displayEditor()}else{Ext.Msg.alert("SSP Error","Please select an item to edit.")}},onAddClick:function(b){var a=new Ssp.model.reference.JournalStep();this.model.data=a.data;this.displayEditor()},deleteConfirmation:function(c){var f=this;var b=c.up("grid");var a=b.getStore();var d=b.getView().getSelectionModel().getSelection()[0];var e;if(d.get("id")){e="You are about to delete "+d.get("name")+". Would you like to continue?";Ext.Msg.confirm({title:"Delete?",msg:e,buttons:Ext.Msg.YESNO,fn:f.deleteRecord,scope:f})}else{Ext.Msg.alert("SSP Error","Unable to delete item.")}},deleteRecord:function(f){var d=this;var b=d.getView();var a=b.getStore();var c=b.getView().getSelectionModel().getSelection()[0];var e=c.get("id");if(f=="yes"){d.apiProperties.makeRequest({url:a.getProxy().url+"/"+e,method:"DELETE",successFunc:function(g,h){a.remove(a.getById(e))}})}},displayEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.journal.EditStepViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",formUtils:"formRendererUtils",model:"currentJournalStep",store:"journalStepsStore"},config:{containerToLoadInto:"adminforms",formToDisplay:"journalstepadmin"},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"}},init:function(){this.getView().getForm().loadRecord(this.model);return this.callParent(arguments)},onSaveClick:function(c){var e=this;var a,f,d,b;b=this.store.getProxy().url;this.getView().getForm().updateRecord();a=this.model;f=a.get("id");d=a.data;successFunc=function(h,g){e.displayMain()};if(f.length>0){this.apiProperties.makeRequest({url:b+"/"+f,method:"PUT",jsonData:d,successFunc:successFunc})}else{this.apiProperties.makeRequest({url:b,method:"POST",jsonData:d,successFunc:successFunc})}},onCancelClick:function(a){this.displayMain()},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.journal.EditStepDetailViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",formUtils:"formRendererUtils",model:"currentJournalStepDetail",store:"journalDetailsStore"},config:{containerToLoadInto:"adminforms",formToDisplay:"journalstepdetailadmin"},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"}},init:function(){this.getView().getForm().loadRecord(this.model);return this.callParent(arguments)},onSaveClick:function(c){var e=this;var a,f,d,b;b=this.store.getProxy().url;this.getView().getForm().updateRecord();a=this.model;f=a.get("id");d=a.data;successFunc=function(h,g){e.displayMain()};if(f.length>0){this.apiProperties.makeRequest({url:b+"/"+f,method:"PUT",jsonData:d,successFunc:successFunc})}else{this.apiProperties.makeRequest({url:b,method:"POST",jsonData:d,successFunc:successFunc})}},onCancelClick:function(a){this.displayMain()},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.campus.CampusAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{appEventsController:"appEventsController",campusService:"campusService",campusEarlyAlertRouting:"currentCampusEarlyAlertRouting",campusesStore:"campusesStore",earlyAlertCoordinatorsStore:"earlyAlertCoordinatorsStore",earlyAlertReasonsStore:"earlyAlertReasonsStore",formUtils:"formRendererUtils",model:"currentCampus",peopleStore:"peopleStore"},config:{containerToLoadInto:"adminforms",campusEditorForm:"editcampus",campusEarlyAlertRoutingAdminForm:"campusEarlyAlertRoutingsAdmin"},control:{view:{viewready:"onViewReady"},editButton:{click:"onEditClick"},addButton:{click:"onAddClick"},deleteButton:{click:"deleteConfirmation"}},init:function(){var a=this;a.campusesStore.load();a.earlyAlertCoordinatorsStore.load();a.earlyAlertReasonsStore.load();a.peopleStore.load();return this.callParent(arguments)},onViewReady:function(a,c){var b=this;b.appEventsController.assignEvent({eventName:"editCampusEarlyAlertRoutings",callBackFunc:b.onEditCampusEarlyAlertRoutings,scope:b})},destroy:function(){var a=this;a.appEventsController.removeEvent({eventName:"editCampusEarlyAlertRoutings",callBackFunc:a.onEditCampusEarlyAlertRoutings,scope:a});return a.callParent(arguments)},onEditCampusEarlyAlertRoutings:function(){var b=this;var a=new Ssp.model.reference.CampusEarlyAlertRouting();b.campusEarlyAlertRouting.data=a.data;b.displayCampusEarlyAlertRoutingAdmin()},onEditClick:function(c){var b,a;b=c.up("grid");a=b.getView().getSelectionModel().getSelection()[0];if(a){this.model.data=a.data;this.displayCampusEditor()}else{Ext.Msg.alert("SSP Error","Please select an item to edit.")}},onAddClick:function(b){var a=new Ssp.model.reference.Campus();this.model.data=a.data;this.displayCampusEditor()},deleteConfirmation:function(c){var f=this;var b=c.up("grid");var a=b.getStore();var d=b.getView().getSelectionModel().getSelection()[0];var e;if(d.get("id")){e="You are about to delete "+d.get("name")+". Would you like to continue?";Ext.Msg.confirm({title:"Delete?",msg:e,buttons:Ext.Msg.YESNO,fn:f.deleteRecord,scope:f})}else{Ext.Msg.alert("SSP Error","Unable to delete item.")}},deleteRecord:function(f){var d=this;var b=d.getView();var a=b.getStore();var c=b.getView().getSelectionModel().getSelection()[0];var e=c.get("id");if(f=="yes"){d.getView().setLoading(true);d.campusService.destroy(e,{success:d.destroyCampusSuccess,failure:d.destroyCampusFailure,scope:d})}},destroyCampusSuccess:function(e,f,c){var d=c;var b=d.getView();var a=b.getStore();d.getView().setLoading(false);a.remove(a.getById(f))},destroyCampusFailure:function(a,b){var c=b;c.getView().setLoading(false)},displayCampusEarlyAlertRoutingAdmin:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getCampusEarlyAlertRoutingAdminForm(),true,{})},displayCampusEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getCampusEditorForm(),true,{})}});Ext.define("Ssp.controller.admin.campus.DefineCampusViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{campusService:"campusService",formUtils:"formRendererUtils",model:"currentCampus",store:"campusesStore"},config:{panelLayout:null,containerToLoadInto:"adminforms",formToDisplay:"campusadmin"},control:{prevBtn:"#prevButton",nextBtn:"#nextButton",finishBtn:"#finishButton",nextButton:{click:"onNextClick"},prevButton:{click:"onPrevClick"},finishButton:{click:"onFinishClick"},cancelCampusEditorButton:{click:"onCancelClick"}},init:function(){this.store.load();this.panelLayout=this.getView().getLayout();this.enableButtons();return this.callParent(arguments)},navigate:function(a){this.panelLayout[a]();this.enableButtons()},enableButtons:function(){var a=this.panelLayout;this.getPrevBtn().setDisabled(!a.getPrev());this.getNextBtn().setDisabled(!a.getNext());if(!a.getNext()){this.getFinishBtn().setDisabled(false)}else{this.getFinishBtn().setDisabled(true)}},onNextClick:function(a){this.navigate("next")},onPrevClick:function(a){this.navigate("prev")},onFinishClick:function(a){var d=this;var c=Ext.ComponentQuery.query(".editcampus")[0];var f=c.getForm();var b=[f];var e=d.formUtils.validateForms(b);if(e.valid){f.updateRecord();d.getView().setLoading(true);d.campusService.saveCampus(d.model.data,{success:d.saveCampusSuccess,failure:d.saveCampusFailure,scope:d})}else{d.formUtils.displayErrors(e.fields)}},saveCampusSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.displayMain()},saveCampusFailure:function(a,b){var c=b;c.getView().setLoading(false)},onCancelClick:function(a){this.displayMain()},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.campus.EditCampusViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",campusService:"campusService",formUtils:"formRendererUtils",model:"currentCampus",store:"campusesStore"},config:{containerToLoadInto:"adminforms",formToDisplay:"campusadmin",url:null},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"}},init:function(){this.getView().getForm().reset();this.getView().getForm().loadRecord(this.model);return this.callParent(arguments)},onSaveClick:function(a){var b=this;b.getView().getForm().updateRecord();b.getView().setLoading(true);b.campusService.saveCampus(b.model.data,{success:b.saveSuccess,failure:b.saveFailure,scope:b})},onCancelClick:function(a){this.displayMain()},saveSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.displayMain()},saveFailure:function(a,b){var c=b;c.getView().setLoading(false)},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.campus.CampusEarlyAlertRoutingsAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{formUtils:"formRendererUtils"},config:{containerToLoadInto:"adminforms",campusEditorForm:"campusadmin"},control:{finishButton:{click:"onFinishClick"}},init:function(){return this.callParent(arguments)},onFinishClick:function(b){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getCampusEditorForm(),true,{})}});Ext.define("Ssp.controller.admin.campus.EarlyAlertRoutingsAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",store:"campusEarlyAlertRoutingsStore",service:"campusEarlyAlertRoutingService",formUtils:"formRendererUtils",campus:"currentCampus",model:"currentCampusEarlyAlertRouting"},config:{containerToLoadInto:"campusearlyalertroutingsadmin",formToDisplay:"editcampusearlyalertrouting"},control:{editButton:{click:"onEditClick"},addButton:{click:"onAddClick"},deleteButton:{click:"deleteConfirmation"}},init:function(){var b=this;var a=b.campus.get("id");b.getView().setLoading(true);b.service.getAllCampusEarlyAlertRoutings(a,{success:b.getAllCampusEarlyAlertRoutingsSuccess,failure:b.getAllCampusEarlyAlertRoutingsFailure,scope:b});return b.callParent(arguments)},getAllCampusEarlyAlertRoutingsSuccess:function(c,a){var b=a;b.getView().setLoading(false)},getAllCampusEarlyAlertRoutingsFailure:function(a,b){var c=b;c.getView().setLoading(false)},onEditClick:function(c){var d=this;var b,a;b=c.up("grid");a=b.getView().getSelectionModel().getSelection()[0];if(a){d.model.data=a.data;d.displayEditor()}else{Ext.Msg.alert("SSP Error","Please select an item to edit.")}},onAddClick:function(b){var c=this;var a=new Ssp.model.reference.CampusEarlyAlertRouting();c.model.data=a.data;c.displayEditor()},deleteConfirmation:function(c){var f=this;var b=c.up("grid");var a=b.getStore();var d=b.getView().getSelectionModel().getSelection()[0];var e;if(d!=null){if(d.get("id")){e="You are about to delete "+d.get("name")+". Would you like to continue?";Ext.Msg.confirm({title:"Delete?",msg:e,buttons:Ext.Msg.YESNO,fn:f.deleteRecord,scope:f})}else{Ext.Msg.alert("SSP Error","Unable to delete item.")}}else{Ext.Msg.alert("SSP Error","Select an item to delete.")}},deleteRecord:function(g){var e=this;var b=e.campus.get("id");var c=e.getView();var a=c.getStore();var d=c.getView().getSelectionModel().getSelection()[0];var f=d.get("id");if(g=="yes"){e.service.destroy(b,f,{success:e.destroySuccess,failure:e.destroyFailure,scope:e})}},destroySuccess:function(e,f,c){var d=c;var b=d.getView();var a=b.getStore();a.remove(a.getById(f))},destroyFailure:function(a,b){var c=b},displayEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.campus.EditCampusEarlyAlertRoutingViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",formUtils:"formRendererUtils",model:"currentCampusEarlyAlertRouting",campus:"currentCampus",peopleSearchLiteStore:"peopleSearchLiteStore",searchService:"searchService",service:"campusEarlyAlertRoutingService"},config:{containerToLoadInto:"campusearlyalertroutingsadmin",formToDisplay:"earlyalertroutingsadmin"},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"},personCombo:"#personCombo"},init:function(){var b=this;var a;b.getView().getForm().reset();b.getView().getForm().loadRecord(b.model);if(b.model.get("person")!=null){a=b.model.get("person");b.getView().setLoading(true);b.searchService.searchWithParams({searchTerm:a.firstName+" "+a.lastName,outsideCaseload:true,requireProgramStatus:false},{success:b.searchSuccess,failure:b.searchFailure,scope:b})}return b.callParent(arguments)},searchSuccess:function(c,a){var b=a;b.getView().setLoading(false);if(c.rows.length>0){b.peopleSearchLiteStore.loadData(c.rows);b.getPersonCombo().setValue(b.model.get("person").id)}},searchFailure:function(a,b){var c=b;c.getView().setLoading(false)},onSaveClick:function(c){var e=this;var a,d,b,f;b=e.url;if(e.getView().getForm().isValid()){e.getView().getForm().updateRecord();a=e.model;d=a.data;if(e.getPersonCombo().value!=""){d.person={id:e.getPersonCombo().value}}else{d.person=null}e.getView().setLoading(true);e.service.saveCampusEarlyAlertRouting(e.campus.get("id"),d,{success:e.saveSuccess,failure:e.saveFailure,scope:e})}else{Ext.Msg.alert("SSP Error","Please correct the errors before saving this item.")}},saveSuccess:function(c,a){var b=a;b.getView().setLoading(false);b.displayMain()},saveFailure:function(a,b){var c=b;c.getView().setLoading(false)},onCancelClick:function(a){this.displayMain()},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.model.Coach",{extend:"Ssp.model.AbstractBase",fields:[{name:"firstName",type:"string"},{name:"middleName",type:"string"},{name:"lastName",type:"string"},{name:"fullName",convert:function(b,a){return a.get("firstName")+" "+a.get("lastName")}},{name:"departmentName",type:"string",defaultValue:"Web Systems"},{name:"workPhone",type:"string"},{name:"primaryEmailAddress",type:"string"},{name:"officeLocation",type:"string",defaultValue:"13023S"}]});Ext.define("Ssp.model.reference.Gender",{extend:"Ext.data.Model",fields:["code","title"]});Ext.define("Ssp.model.reference.State",{extend:"Ext.data.Model",fields:["code","title"]});Ext.define("Ssp.model.Tool",{extend:"Ext.data.Model",fields:[{name:"name",type:"string"},{name:"toolType",type:"string"},{name:"active",type:"boolean"},{name:"group",type:"string"}]});Ext.define("Ssp.controller.admin.AdminItemAssociationViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",formUtils:"formRendererUtils",treeUtils:"treeRendererUtils"},config:{associatedItemType:"",parentItemType:"",parentIdAttribute:"",associatedItemIdAttribute:""},control:{view:{itemexpand:"onItemExpand",itemcollapse:"onItemCollapse"},treeView:{selector:".treeview",listeners:{beforedrop:"onBeforeDrop"}},deleteAssociationButton:{click:"deleteConfirmation"}},constructor:function(a){var b=this;b.initConfig(a);return b.callParent(arguments)},onItemExpand:function(a,d){var c=this;var b=a;var e=c.treeUtils.getIdFromNodeId(b.data.id);c.getAssociatedItems(b,e)},onItemCollapse:function(d,e){var c=this;var a=c.getView();var b=a.getView().getChecked();if(b.length>0){Ext.Array.each(b,function(f){f.data.checked=false},c)}},clear:function(){this.treeUtils.clearRootCategories()},getParentItems:function(){var b=this;var a=new Ssp.model.util.TreeRequest();a.set("url",b.apiProperties.getItemUrl(b.getParentItemType()));a.set("nodeType",b.getParentItemType());a.set("isLeaf",false);a.set("callbackFunc",b.onLoadComplete);a.set("callbackScope",b);b.treeUtils.getItems(a)},getAssociatedItems:function(e,f){var d=this;var b=d.apiProperties.getItemUrl(d.parentItemType);var c=b+"/"+f+"/"+d.getAssociatedItemType();var a=new Ssp.model.util.TreeRequest();a.set("url",c);a.set("nodeType",d.getAssociatedItemType);a.set("isLeaf",true);a.set("nodeToAppendTo",e);a.set("enableCheckedItems",true);a.set("callbackFunc",d.onLoadComplete);a.set("callbackScope",d);d.treeUtils.getItems(a)},onLoadComplete:function(a){var b=a},onBeforeDrop:function(c,d,h,i,b,f){var g=this;var a,e,j,c;b.wait=true;if(!h.isLeaf()&&i=="append"){c=h;e=g.treeUtils.getIdFromNodeId(c.data.id);j=d.records[0].get("id");parentUrl=g.apiProperties.getItemUrl(g.getParentItemType())+"/"+e+"/"+g.getAssociatedItemType();a=g.apiProperties.createUrl(parentUrl);g.apiProperties.makeRequest({url:a,method:"POST",jsonData:'"'+j+'"',successFunc:function(l,k){g.getAssociatedItems(c,e)}})}if(i=="before"||i=="after"){}b.cancelDrop;return 1},deleteConfirmation:function(c){var e=this;var a=e.getView();var d=e.treeUtils;var b=a.getView().getChecked();if(b.length>0){message="You are about to delete the selected item associations. Would you like to continue?";Ext.Msg.confirm({title:"Delete?",msg:message,buttons:Ext.Msg.YESNO,fn:e.onDeleteAssociationConfirm,scope:e})}else{Ext.Msg.alert("Error","Please select an item to delete.")}},onDeleteAssociationConfirm:function(g){var e=this;var b=e.getView();var d=e.treeUtils;var c=b.getView().getChecked();var f,a;if(g=="yes"){f=d.getIdFromNodeId(c[0].data.parentId);a=b.getView().getStore().findRecord("id",c[0].data.parentId);Ext.Array.each(c,function(i){var h=d.getIdFromNodeId(i.data.id);this.deleteAssociation(f,h,a)},e)}},deleteAssociation:function(e,a,d){var c=this;var b,e,a;if(e!=""&&a!=null){parentUrl=c.apiProperties.getItemUrl(c.getParentItemType())+"/"+e+"/"+c.getAssociatedItemType();b=c.apiProperties.createUrl(parentUrl);c.apiProperties.makeRequest({url:b,method:"DELETE",jsonData:'"'+a+'"',successFunc:successFunc=function(g,f){c.getAssociatedItems(d,e)}})}}});Ext.define("Ssp.view.admin.AdminTreeMenu",{extend:"Ext.tree.Panel",alias:"widget.admintreemenu",id:"AdminTreeMenu",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.AdminViewController",inject:{store:"adminTreeMenusStore"},collapsible:true,initComponent:function(){Ext.apply(this,{store:this.store,singleExpand:true,fields:["title","form","text"],});this.callParent(arguments)}});Ext.define("Ssp.view.Main",{extend:"Ext.panel.Panel",alias:"widget.mainview",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],inject:{authenticatedPerson:"authenticatedPerson"},controller:"Ssp.controller.MainViewController",initComponent:function(){var a=this;Ext.apply(a,{layout:{type:"hbox",align:"stretch"},dockedItems:{xtype:"toolbar",items:[{xtype:"button",text:"Students",hidden:!a.authenticatedPerson.hasAccess("STUDENTS_NAVIGATION_BUTTON"),itemId:"studentViewNav",action:"displayStudentRecord"},{xtype:"button",text:"Admin",hidden:!a.authenticatedPerson.hasAccess("ADMIN_NAVIGATION_BUTTON"),itemId:"adminViewNav",action:"displayAdmin"},{xtype:"tbspacer",flex:1},{id:"report",xtype:"sspreport"}]}});return a.callParent(arguments)}});Ext.define("Ssp.view.Search",{extend:"Ext.grid.Panel",alias:"widget.search",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.SearchViewController",inject:{authenticatedPerson:"authenticatedPerson",apiProperties:"apiProperties",columnRendererUtils:"columnRendererUtils",programStatusesStore:"programStatusesStore",sspConfig:"sspConfig"},initComponent:function(){var a=this;Ext.applyIf(a,{submitEmptyText:false,title:"Students Foo",collapsible:true,collapseDirection:"left",width:"100%",height:"100%",columns:[{text:"Name",dataIndex:"lastName",renderer:a.columnRendererUtils.renderSearchStudentName,flex:50}],dockedItems:[{xtype:"pagingtoolbar",itemId:"searchGridPager",dock:"bottom",displayInfo:true,pageSize:a.apiProperties.getPagingSize(),listeners:{afterrender:function(){var c=Ext.query("button[data-qtip=Refresh]");for(var b=0;b<c.length;b++){c[b].style.display="none"}}}},{xtype:"toolbar",dock:"top",itemId:"searchBar",hidden:!a.authenticatedPerson.hasAccess("STUDENT_SEARCH"),items:[{xtype:"textfield",itemId:"searchText",enableKeyEvents:true,emptyText:"Name or "+a.sspConfig.get("studentIdAlias"),width:200},{xtype:"button",tooltip:"Find a Student",itemId:"searchButton",width:32,height:32,cls:"searchIcon"},{xtype:"tbspacer",width:5},{xtype:"checkboxfield",boxLabel:"My Caseload",itemId:"searchCaseloadCheck",name:"searchInCaseload",hidden:!a.authenticatedPerson.hasAccess("CASELOAD_SEARCH"),inputValue:false},{xtype:"tbspacer",flex:1},{tooltip:"Display Caseload Filters",text:"",width:25,height:25,hidden:false,cls:"displayCaseloadIcon",xtype:"button",itemId:"displayCaseloadBarButton"}]},{xtype:"toolbar",dock:"top",itemId:"caseloadBar",hidden:!a.authenticatedPerson.hasAccess("CASELOAD_FILTERS"),items:[{xtype:"combobox",itemId:"caseloadStatusCombo",name:"programStatusId",fieldLabel:"",emptyText:"Select One",store:a.programStatusesStore,valueField:"id",displayField:"name",mode:"local",typeAhead:false,editable:false,queryMode:"local",allowBlank:true,forceSelection:false,width:200,labelWidth:125},{xtype:"button",tooltip:"Retrieve My Caseload",itemId:"retrieveCaseloadButton",width:32,height:32,cls:"retrieveCaseloadIcon"},{xtype:"tbspacer",flex:1},{tooltip:"Display Search Filters",text:"",width:25,height:25,hidden:false,cls:"displaySearchIcon",xtype:"button",itemId:"displaySearchBarButton"}]},{xtype:"toolbar",dock:"top",items:[{tooltip:"Add Student",text:"",width:25,height:25,hidden:!a.authenticatedPerson.hasAccess("ADD_STUDENT_BUTTON"),cls:"addPersonIcon",xtype:"button",itemId:"addPersonButton"},{tooltip:"Edit Student",text:"",width:25,height:25,hidden:!a.authenticatedPerson.hasAccess("EDIT_STUDENT_BUTTON"),cls:"editPersonIcon",xtype:"button",itemId:"editPersonButton"},{tooltip:"Delete Student",text:"",width:25,height:25,hidden:!a.authenticatedPerson.hasAccess("DELETE_STUDENT_BUTTON"),cls:"deletePersonIcon",xtype:"button",itemId:"deletePersonButton"},{xtype:"tbspacer",flex:1},{xtype:"label",text:"Change Status:",style:"font-weight:bold;"},{tooltip:"Set Student to Active status",text:"",width:25,height:25,hidden:!a.authenticatedPerson.hasAccess("SET_ACTIVE_STATUS_BUTTON"),cls:"setActiveStatusIcon",xtype:"button",action:"active",itemId:"setActiveStatusButton"},{tooltip:"Set Student to Transitioned status",text:"",width:25,height:25,hidden:true,cls:"setTransitionStatusIcon",xtype:"button",action:"transition",itemId:"setTransitionStatusButton"},{tooltip:"Set Student to Non-Participating status",text:"",width:25,height:25,hidden:!a.authenticatedPerson.hasAccess("SET_NON_PARTICIPATING_STATUS_BUTTON"),cls:"setNonParticipatingStatusIcon",xtype:"button",action:"non-participating",itemId:"setNonParticipatingStatusButton"},{tooltip:"Set Student to No-Show status",text:"",width:25,height:25,hidden:!a.authenticatedPerson.hasAccess("SET_NO_SHOW_STATUS_BUTTON"),cls:"setNoShowStatusIcon",xtype:"button",action:"no-show",itemId:"setNoShowStatusButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.StudentRecord",{extend:"Ext.panel.Panel",alias:"widget.studentrecord",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.StudentRecordViewController",width:"100%",height:"100%",initComponent:function(){Ext.apply(this,{title:"Student Record",collapsible:true,collapseDirection:"left",layout:{type:"hbox",align:"stretch"},items:[{xtype:"toolsmenu",flex:0.6},{xtype:"tools",flex:4.4}]});return this.callParent(arguments)}});Ext.define("Ssp.view.ProgramStatusChangeReasonWindow",{extend:"Ext.window.Window",alias:"widget.programstatuschangereasonwindow",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.ProgramStatusChangeReasonWindowViewController",inject:{personLite:"personLite",store:"programStatusChangeReasonsStore"},width:"100%",height:"100%",title:"Please provide a reason the student will no longer be participating:",initComponent:function(){var a=this;Ext.applyIf(a,{modal:true,layout:"anchor",items:[{xtype:"displayfield",fieldLabel:"Student",value:a.personLite.get("displayFullName"),anchor:"95%"},{xtype:"combobox",itemId:"programStatusChangeReasonCombo",name:"programStatusChangeReasonId",fieldLabel:"Reason",emptyText:"Select One",store:a.store,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false,forceSelection:true,anchor:"95%"}],dockedItems:[{xtype:"toolbar",dock:"bottom",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.person.CaseloadAssignment",{extend:"Ext.panel.Panel",alias:"widget.caseloadassignment",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.person.CaseloadAssignmentViewController",inject:{model:"currentPerson",sspConfig:"sspConfig"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{title:"Caseload Assignment",autoScroll:true,defaults:{bodyStyle:"padding:5px"},layout:{type:"accordion",align:"stretch",titleCollapse:true,animate:true,activeOnTop:true},dockedItems:[{xtype:"toolbar",dock:"top",items:[{xtype:"label",text:"Fill out the following forms with assigned coach details and appointment information"}]},{dock:"bottom",xtype:"toolbar",items:[{xtype:"button",itemId:"saveButton",text:"Save"},{xtype:"button",itemId:"cancelButton",text:"Cancel",},{xtype:"tbspacer",flex:1},{xtype:"checkboxfield",boxLabel:"Reset the student to Active status on the assigned "+a.sspConfig.get("coachFieldLabel")+"'s Caseload",itemId:"resetActiveStatusCheck",name:"setActiveStatus",inputValue:false},{xtype:"button",itemId:"printButton",tooltip:"Print Appointment Form",hidden:true,width:30,height:30,cls:"printIcon"},{xtype:"button",itemId:"emailButton",hidden:true,tooltip:"Email Appointment Form",width:30,height:30,cls:"emailIcon"}]}],items:[]});return a.callParent(arguments)}});Ext.define("Ssp.view.person.EditPerson",{extend:"Ext.form.Panel",alias:"widget.editperson",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.person.EditPersonViewController",initComponent:function(){Ext.apply(this,{border:0,fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:100},items:[{xtype:"fieldset",border:0,title:"",defaultType:"textfield",items:[{fieldLabel:"First Name",name:"firstName",itemId:"firstName",id:"editPersonFirstName",maxLength:50,allowBlank:false,width:350},{fieldLabel:"Middle Name",name:"middleName",itemId:"middleName",id:"editPersonMiddleName",maxLength:50,allowBlank:true,width:350},{fieldLabel:"Last Name",name:"lastName",itemId:"lastName",id:"editPersonLastName",maxLength:50,allowBlank:false,width:350},{fieldLabel:"Student ID",name:"schoolId",minLength:7,maxLength:7,itemId:"studentId",allowBlank:false,width:350},{xtype:"button",tooltip:"Load record from external system",text:"Retrieve from External",itemId:"retrieveFromExternalButton"},{fieldLabel:"Home Phone",name:"homePhone",emptyText:"xxx-xxx-xxxx",maxLength:25,allowBlank:true,itemId:"homePhone",width:350},{fieldLabel:"Work Phone",name:"workPhone",emptyText:"xxx-xxx-xxxx",maxLength:25,allowBlank:true,itemId:"workPhone",width:350},{fieldLabel:"School Email",name:"primaryEmailAddress",vtype:"email",maxLength:100,allowBlank:true,itemId:"primaryEmailAddress",width:350},{fieldLabel:"Home Email",name:"secondaryEmailAddress",vtype:"email",maxLength:100,allowBlank:true,itemId:"secondaryEmailAddress",width:350}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.person.Coach",{extend:"Ext.form.Panel",alias:"widget.personcoach",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.person.CoachViewController",inject:{coachesStore:"coachesStore",sspConfig:"sspConfig",studentTypesStore:"studentTypesStore"},initComponent:function(){var a=this;Ext.apply(a,{border:0,padding:0,fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:200},items:[{xtype:"fieldset",border:0,padding:0,title:"",defaultType:"textfield",defaults:{anchor:"50%"},items:[{xtype:"combobox",name:"coachId",itemId:"coachCombo",fieldLabel:a.sspConfig.get("coachFieldLabel"),emptyText:"Select One",store:a.coachesStore,valueField:"id",displayField:"fullName",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false},{xtype:"displayfield",fieldLabel:"Office",itemId:"officeField",name:"coachOffice"},{xtype:"displayfield",fieldLabel:"Phone",itemId:"phoneField",name:"coachPhone"},{xtype:"displayfield",fieldLabel:"Email",itemId:"emailAddressField",name:"coachEmailAddress"},{xtype:"displayfield",fieldLabel:"Department",itemId:"departmentField",name:"coachDepartment"},{xtype:"combobox",name:"studentTypeId",itemId:"studentTypeCombo",id:"studentTypeCombo",fieldLabel:"Student Type",emptyText:"Select One",store:a.studentTypesStore,valueField:"id",displayField:"name",mode:"local",typeAhead:false,editable:false,queryMode:"local",allowBlank:false}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.person.Appointment",{extend:"Ext.form.Panel",alias:"widget.personappointment",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.person.AppointmentViewController",initComponent:function(){var a=this;Ext.apply(a,{fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:200},border:0,padding:0,items:[{xtype:"fieldset",border:0,padding:0,title:"",defaultType:"textfield",defaults:{anchor:"50%"},items:[{xtype:"datefield",fieldLabel:"Appointment Date",itemId:"appointmentDateField",altFormats:"m/d/Y|m-d-Y",invalidText:"{0} is not a valid date - it must be in the format: 06/21/2012 or 06-21-2012",name:"appointmentDate",allowBlank:false},{xtype:"timefield",name:"startTime",itemId:"startTimeField",fieldLabel:"Start Time",increment:30,typeAhead:false,allowBlank:false},{xtype:"timefield",name:"endTime",itemId:"endTimeField",fieldLabel:"End Time",typeAhead:false,allowBlank:false,increment:30}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.person.SpecialServiceGroups",{extend:"Ext.form.Panel",alias:"widget.personspecialservicegroups",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.person.SpecialServiceGroupsViewController",width:"100%",height:"100%",autoScroll:true,initComponent:function(){var a=this;Ext.apply(a,{bodyPadding:5,layout:"anchor"});return a.callParent(arguments)}});Ext.define("Ssp.view.person.ReferralSources",{extend:"Ext.form.Panel",alias:"widget.personreferralsources",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.person.ReferralSourcesViewController",width:"100%",height:"100%",autoScroll:true,initComponent:function(){var a=this;Ext.apply(this,{bodyPadding:5,layout:"anchor"});return a.callParent(arguments)}});Ext.define("Ssp.view.person.ServiceReasons",{extend:"Ext.form.Panel",alias:"widget.personservicereasons",id:"personservicereasons",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.person.ServiceReasonsViewController",width:"100%",height:"100%",autoScroll:true,initComponent:function(){Ext.apply(this,{bodyPadding:0,border:0,layout:"anchor",defaults:{anchor:"100%"},defaultType:"checkbox"});return this.callParent(arguments)}});Ext.define("Ssp.view.person.AnticipatedStartDate",{extend:"Ext.form.Panel",alias:"widget.personanticipatedstartdate",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.person.AnticipatedStartDateViewController",inject:{anticipatedStartTermsStore:"anticipatedStartTermsStore",},initComponent:function(){Ext.apply(this,{fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:125},border:0,items:[{xtype:"checkboxgroup",fieldLabel:"Ability to Benefit",columns:1,items:[{boxLabel:"",name:"abilityToBenefit"}]},{xtype:"combobox",name:"anticipatedStartTerm",fieldLabel:"Anticipated Start Term",emptyText:"Select One",store:this.anticipatedStartTermsStore,valueField:"name",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{xtype:"textfield",name:"anticipatedStartYear",fieldLabel:"Anticipated Start Year",minLength:4,maxLength:4,width:200,emptyText:"xxxx",maskRe:/\d/,regex:/^\d{4}$/,regexText:"Must be a four-digit number",allowBlank:true}]});return this.callParent(arguments)}});Ext.define("Ssp.view.ToolsMenu",{extend:"Ext.grid.Panel",alias:"widget.toolsmenu",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.ToolsViewController",inject:{appEventsController:"appEventsController",columnRendererUtils:"columnRendererUtils",store:"toolsStore"},initComponent:function(){Ext.apply(this,{width:"100%",height:"100%",store:this.store,features:[{id:"group",ftype:"grouping",groupHeaderTpl:"{name}",hideGroupedHeader:false,enableGroupingMenu:false}],columns:[{header:"Tools",dataIndex:"name",sortable:false,menuDisabled:true,flex:1},{xtype:"actioncolumn",width:18,header:"",sortable:false,hidden:true,items:[{tooltip:"Add Tool",getClass:this.columnRendererUtils.renderAddToolIcon,handler:function(c,e,b){var d=c.getStore().getAt(e);var a=c.up("panel");a.appEventsController.getApplication().fireEvent("addTool");Ext.Msg.alert("Attention","This feature is not yet active")},scope:this}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.tools.profile.Profile",{extend:"Ext.form.Panel",alias:"widget.profile",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.profile.ProfileToolViewController",inject:{authenticatedPerson:"authenticatedPerson"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{layout:"fit",title:"Profile",padding:0,border:0,preventHeader:true,items:[Ext.createWidget("tabpanel",{width:"100%",height:"100%",activeTab:0,itemId:"profileTabs",items:[{title:"Personal",autoScroll:true,items:[{xtype:"profileperson"}]},{title:"Special Service Groups",autoScroll:true,items:[{xtype:"profilespecialservicegroups"}]},{title:"Referral Sources",autoScroll:true,items:[{xtype:"profilereferralsources"}]},{title:"Service Reasons",autoScroll:true,items:[{xtype:"profileservicereasons"}]},{title:"Services Provided History",hidden:true,autoScroll:true,items:[{xtype:"profileservicesprovided"}]}]})],dockedItems:[{dock:"top",xtype:"toolbar",items:[{xtype:"tbspacer",width:5},{xtype:"label",text:"Profile",style:"font-weight:bold;color: #00008B"},{xtype:"tbspacer",flex:1},{tooltip:"Print Student History",text:"<u>Print Student History</u>",width:150,height:20,hidden:!a.authenticatedPerson.hasAccess("PRINT_HISTORY_BUTTON"),xtype:"button",itemId:"viewHistoryButton"},{xtype:"button",itemId:"printConfidentialityAgreementButton",text:"<u>Print Confidentiality Agreement</u>",tooltip:"Print Confidentiality Agreement",height:20,width:175,hidden:!a.authenticatedPerson.hasAccess("PROFILE_PRINT_CONFIDENTIALITY_AGREEMENT_BUTTON"),}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.profile.Person",{extend:"Ext.form.Panel",alias:"widget.profileperson",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.profile.ProfilePersonViewController",inject:{columnRendererUtils:"columnRendererUtils",sspConfig:"sspConfig"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{border:0,bodyPadding:0,layout:"anchor",defaults:{anchor:"100%"},items:[{xtype:"fieldcontainer",fieldLabel:"",layout:"hbox",margin:"0 5 0 0",defaultType:"displayfield",fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:100},items:[{xtype:"fieldset",border:0,title:"",defaultType:"displayfield",defaults:{anchor:"100%"},flex:0.55,items:[{fieldLabel:"Student",name:"name",itemId:"studentName"},{fieldLabel:"Student Id",itemId:"studentId",name:"schoolId"},{fieldLabel:"School Email",name:"primaryEmailAddress"},{fieldLabel:"Alternate Email",name:"secondaryEmailAddress"},{fieldLabel:"Home Phone",name:"homePhone"},{fieldLabel:"Cell Phone",name:"cellPhone"},{fieldLabel:"Birth Date",name:"birthDate",itemId:"birthDate"},{fieldLabel:"Student Type",name:"studentType",itemId:"studentType"},{fieldLabel:"Caseload Status",name:"programStatus",itemId:"programStatus"},{fieldLabel:"Registered",name:"registeredForCurrentTerm",renderer:a.columnRendererUtils.renderFriendlyBoolean},{fieldLabel:"Payment Status",name:"paymentStatus",hidden:true},{fieldLabel:"CUM GPA",name:"cumGPA",hidden:true},{fieldLabel:"Academic Program",name:"academicPrograms",hidden:true}]},{xtype:"fieldset",border:0,title:"",defaultType:"displayfield",defaults:{anchor:"100%"},padding:0,flex:0.45,items:[{xtype:"fieldset",border:1,cls:"ssp-form",title:"Coach",defaultType:"displayfield",defaults:{anchor:"100%"},flex:1,items:[{fieldLabel:a.sspConfig.get("coachFieldLabel"),name:"coachName",itemId:"coachName",labelWidth:80},{fieldLabel:"Phone",name:"coachWorkPhone",itemId:"coachWorkPhone",labelWidth:80},{fieldLabel:"Email",name:"coachPrimaryEmailAddress",itemId:"coachPrimaryEmailAddress",labelWidth:80},{fieldLabel:"Department",name:"coachDepartmentName",itemId:"coachDepartmentName",labelWidth:80},{fieldLabel:"Office",name:"coachOfficeLocation",itemId:"coachOfficeLocation",labelWidth:80}]},{xtype:"fieldset",border:1,cls:"ssp-form",title:"Student Mailing Address",defaultType:"displayfield",defaults:{anchor:"100%"},flex:1,items:[{fieldLabel:"Non-local",name:"nonLocalAddress",labelWidth:80,renderer:a.columnRendererUtils.renderFriendlyBoolean},{fieldLabel:"Address",height:"60",name:"address",labelWidth:80,itemId:"address"}]},{xtype:"fieldset",border:1,cls:"ssp-form",title:"Student Alternate Address",defaultType:"displayfield",defaults:{anchor:"100%"},flex:1,items:[{fieldLabel:"In Use",name:"alternateAddressInUse",labelWidth:80,itemId:"alternateAddressInUse"},{fieldLabel:"Address",name:"alternateAddress",labelWidth:80,height:"60",itemId:"alternateAddress"}]}]}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.profile.ServicesProvided",{extend:"Ext.grid.Panel",alias:"widget.profileservicesprovided",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.profile.ServicesProvidedViewController",width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,columns:[{header:"Provided By",dataIndex:"createdBy",flex:0.5,},{header:"Date Provided",dataIndex:"createdDate",flex:0.5,}],});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.actionplan.ActionPlan",{extend:"Ext.container.Container",alias:"widget.actionplan",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.actionplan.ActionPlanToolViewController",width:"100%",height:"100%",layout:"fit",initComponent:function(){Ext.apply(this,{items:[{xtype:"displayactionplan"}]});return this.callParent(arguments)}});Ext.define("Ssp.view.tools.actionplan.Tasks",{extend:"Ext.grid.Panel",alias:"widget.tasks",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.actionplan.TasksViewController",inject:{appEventsController:"appEventsController",authenticatedPerson:"authenticatedPerson",columnRendererUtils:"columnRendererUtils",model:"currentTask",store:"tasksStore",},layout:"auto",width:"100%",height:"100%",initComponent:function(){var a=this;var b=Ext.create("Ext.selection.CheckboxModel");Ext.apply(a,{scroll:"vertical",store:a.store,selModel:b,features:[{id:"group",ftype:"grouping",groupHeaderTpl:"{name}",depthToIndent:0,hideGroupedHeader:false,enableGroupingMenu:false}],columns:[{xtype:"actioncolumn",width:65,header:"Action",items:[{icon:Ssp.util.Constants.GRID_ITEM_EDIT_ICON_PATH,tooltip:"Edit Task",handler:function(e,g,d){var f=e.getStore().getAt(g);var c=e.up("panel");c.model.data=f.data;c.appEventsController.getApplication().fireEvent("editTask")},getClass:function(f,e,d){var c="x-hide-display";if(a.authenticatedPerson.hasAccess("EDIT_TASK_BUTTON")&&d.get("completedDate")==null){c=Ssp.util.Constants.GRID_ITEM_CLOSE_ICON_PATH}return c},scope:a},{icon:Ssp.util.Constants.GRID_ITEM_CLOSE_ICON_PATH,tooltip:"Close Task",handler:function(e,g,d){var f=e.getStore().getAt(g);var c=e.up("panel");c.model.data=f.data;c.appEventsController.getApplication().fireEvent("closeTask")},getClass:function(f,e,d){var c="x-hide-display";if(a.authenticatedPerson.hasAccess("CLOSE_TASK_BUTTON")&&d.get("completedDate")==null){c=Ssp.util.Constants.GRID_ITEM_CLOSE_ICON_PATH}return c},scope:a},{icon:Ssp.util.Constants.GRID_ITEM_DELETE_ICON_PATH,tooltip:"Delete Task",handler:function(e,g,d){var f=e.getStore().getAt(g);var c=e.up("panel");c.model.data=f.data;c.appEventsController.getApplication().fireEvent("deleteTask")},getClass:function(f,e,d){var c="x-hide-display";if(a.authenticatedPerson.hasAccess("DELETE_TASK_BUTTON")&&d.get("completedDate")==null){c=Ssp.util.Constants.GRID_ITEM_CLOSE_ICON_PATH}return c},scope:a}]},{text:"Description",flex:1,tdCls:"task",sortable:true,dataIndex:"name",renderer:a.columnRendererUtils.renderTaskName},{header:"Due Date",width:150,dataIndex:"dueDate",renderer:a.columnRendererUtils.renderTaskDueDate}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.actionplan.AddTaskForm",{extend:"Ext.form.Panel",alias:"widget.addtaskform",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.actionplan.AddTasksFormViewController",inject:{store:"confidentialityLevelsStore"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,border:0,padding:0,fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:150},items:[{xtype:"fieldset",title:"Add Task",defaultType:"textfield",border:0,padding:0,defaults:{anchor:"95%"},items:[{xtype:"displayfield",fieldLabel:"Task Name",name:"name",allowBlank:false},{xtype:"textarea",fieldLabel:"Description",name:"description",maxLength:1000,allowBlank:false},{xtype:"combobox",itemId:"confidentialityLevel",name:"confidentialityLevelId",fieldLabel:"Confidentiality Level",emptyText:"Select One",store:a.store,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false,forceSelection:true},{xtype:"datefield",fieldLabel:"Target Date",altFormats:"m/d/Y|m-d-Y",name:"dueDate",allowBlank:false}]}],dockedItems:[{dock:"top",xtype:"toolbar",items:[{xtype:"button",itemId:"addButton",text:"Save",action:"add"},,"-",{xtype:"button",itemId:"closeButton",text:"Cancel",action:"close"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.actionplan.EditGoalForm",{extend:"Ext.form.Panel",alias:"widget.editgoalform",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.actionplan.EditGoalFormViewController",inject:{store:"confidentialityLevelsStore"},initComponent:function(){Ext.applyIf(this,{title:"Add Goal",fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:150},items:[{xtype:"textfield",fieldLabel:"Name",anchor:"100%",name:"name",allowBlank:false},{xtype:"textareafield",fieldLabel:"Description",anchor:"100%",name:"description",allowBlank:false},{xtype:"combobox",itemId:"confidentialityLevel",name:"confidentialityLevelId",fieldLabel:"Confidentiality Level",emptyText:"Select One",store:this.store,valueField:"id",displayField:"acronym",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false,forceSelection:true}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.tools.actionplan.DisplayActionPlan",{extend:"Ext.panel.Panel",alias:"widget.displayactionplan",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.actionplan.DisplayActionPlanViewController",inject:{authenticatedPerson:"authenticatedPerson"},width:"100%",height:"100%",padding:0,initComponent:function(){var a=this;Ext.apply(a,{layout:{type:"accordion",titleCollapse:true,animate:true,activeOnTop:true},title:"Action Plan",autoScroll:true,padding:0,items:[Ext.createWidget("tabpanel",{width:"100%",height:"100%",activeTab:0,hidden:!a.authenticatedPerson.hasAccess("ACTION_PLAN_TASKS_PANEL"),title:"Tasks",itemId:"taskStatusTabs",items:[{title:"Active",autoScroll:true,action:"active",items:[{xtype:"tasks",itemId:"activeTasksGrid"}]},{title:"Complete",autoScroll:true,action:"complete",items:[{xtype:"tasks",itemId:"completeTasksGrid"}]},{title:"All",autoScroll:true,action:"all",items:[{xtype:"tasks",itemId:"allTasksGrid"}]}],dockedItems:[{dock:"top",xtype:"toolbar",items:[{tooltip:"Add a Task",text:"Add",hidden:!a.authenticatedPerson.hasAccess("ADD_TASK_BUTTON"),xtype:"button",itemId:"addTaskButton"}]}]}),{xtype:"displayactionplangoals",itemId:"goalsPanel",flex:1,hidden:!a.authenticatedPerson.hasAccess("ACTION_PLAN_GOALS_PANEL")},{xtype:"displaystrengths",itemId:"strengthsPanel",hidden:!a.authenticatedPerson.hasAccess("ACTION_PLAN_STRENGTHS_PANEL")}],dockedItems:[{dock:"top",xtype:"toolbar",items:[{tooltip:"Email Action Plan",text:"",width:30,height:30,hidden:!a.authenticatedPerson.hasAccess("EMAIL_ACTION_PLAN_BUTTON"),cls:"emailIcon",xtype:"button",itemId:"emailTasksButton"},{tooltip:"Print Action Plan",text:"",width:30,height:30,hidden:!a.authenticatedPerson.hasAccess("PRINT_ACTION_PLAN_BUTTON"),cls:"printIcon",xtype:"button",itemId:"printTasksButton"},{xtype:"tbspacer",flex:1},{xtype:"checkbox",boxLabel:"Display only tasks that I created",hidden:!a.authenticatedPerson.hasAccess("FILTER_TASKS_BY_AUTHENTICATED_USER_CHECKBOX"),itemId:"filterTasksBySelfCheck"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.actionplan.DisplayActionPlanGoals",{extend:"Ext.grid.Panel",alias:"widget.displayactionplangoals",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.actionplan.DisplayActionPlanGoalsViewController",inject:{appEventsController:"appEventsController",authenticatedPerson:"authenticatedPerson",columnRendererUtils:"columnRendererUtils",model:"currentGoal",store:"goalsStore"},width:"100%",height:"100%",layout:"anchor",itemId:"goalsPanel",defaults:{anchor:"100%"},initComponent:function(){var a=this;var b=Ext.create("Ext.selection.CheckboxModel");Ext.apply(a,{title:"Goals",store:a.store,selModel:b,columns:[{xtype:"actioncolumn",width:65,header:"Action",items:[{icon:Ssp.util.Constants.GRID_ITEM_EDIT_ICON_PATH,tooltip:"Edit Goal",handler:function(e,g,d){var f=e.getStore().getAt(g);var c=e.up("panel");c.model.data=f.data;c.appEventsController.getApplication().fireEvent("editGoal")},getClass:function(f,e,d){var c="x-hide-display";if(a.authenticatedPerson.hasAccess("EDIT_GOAL_BUTTON")){c=Ssp.util.Constants.GRID_ITEM_EDIT_ICON_PATH}return c},scope:a},{icon:Ssp.util.Constants.GRID_ITEM_DELETE_ICON_PATH,tooltip:"Delete Goal",handler:function(e,g,d){var f=e.getStore().getAt(g);var c=e.up("panel");c.model.data=f.data;c.appEventsController.getApplication().fireEvent("deleteGoal")},getClass:function(f,e,d){var c="x-hide-display";if(a.authenticatedPerson.hasAccess("DELETE_GOAL_BUTTON")){c=Ssp.util.Constants.GRID_ITEM_EDIT_ICON_PATH}return c},scope:a}]},{header:"Name",flex:1,dataIndex:"name",renderer:a.columnRendererUtils.renderGoalName},{header:"Confidentiality",dataIndex:"confidentialityLevel",renderer:a.columnRendererUtils.renderConfidentialityLevelName}],dockedItems:[{dock:"top",xtype:"toolbar",items:[{tooltip:"Add a Goal",text:"Add",hidden:!a.authenticatedPerson.hasAccess("ADD_GOAL_BUTTON"),xtype:"button",itemId:"addGoalButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.actionplan.DisplayStrengths",{extend:"Ext.form.Panel",alias:"widget.displaystrengths",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.actionplan.DisplayStrengthsViewController",inject:{authenticatedPerson:"authenticatedPerson"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.applyIf(a,{title:"Strengths",items:[{xtype:"form",layout:"anchor",items:[{xtype:"textarea",anchor:"100%",height:50,fieldLabel:"Strengths",itemId:"strengths",name:"strengths"}]}],dockedItems:[{dock:"top",xtype:"toolbar",items:[{tooltip:"Save Strengths",text:"Save",hidden:!a.authenticatedPerson.hasAccess("SAVE_STRENGTHS_BUTTON"),xtype:"button",itemId:"saveButton"},{xtype:"label",html:Ssp.util.Constants.DATA_SAVE_SUCCESS_MESSAGE,itemId:"saveSuccessMessage",style:Ssp.util.Constants.DATA_SAVE_SUCCESS_MESSAGE_STYLE,hidden:true}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.actionplan.TaskTree",{extend:"Ext.tree.Panel",alias:"widget.tasktree",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.actionplan.TaskTreeViewController",inject:{store:"treeStore"},height:250,width:"100%",initComponent:function(){Ext.apply(this,{store:this.store,useArrows:true,rootVisible:false,dockedItems:[{xtype:"toolbar",items:[{xtype:"label",text:"Select a task to add to the Student's Action Plan:"}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.tools.studentintake.StudentIntake",{extend:"Ext.panel.Panel",alias:"widget.studentintake",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.studentintake.StudentIntakeToolViewController",inject:{authenticatedPerson:"authenticatedPerson",store:"studentsStore"},title:"Student Intake",width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{store:a.store,layout:"fit",padding:0,border:0,items:[],dockedItems:[{dock:"top",xtype:"toolbar",items:[{xtype:"button",itemId:"saveButton",text:"Save",action:"save",hidden:!a.authenticatedPerson.hasAccess("STUDENT_INTAKE_SAVE_BUTTON"),},{xtype:"button",itemId:"cancelButton",text:"Cancel",action:"reset",hidden:!a.authenticatedPerson.hasAccess("STUDENT_INTAKE_CANCEL_BUTTON"),},{xtype:"label",html:Ssp.util.Constants.DATA_SAVE_SUCCESS_MESSAGE,itemId:"saveSuccessMessage",style:Ssp.util.Constants.DATA_SAVE_SUCCESS_MESSAGE_STYLE,hidden:true}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.studentintake.Demographics",{extend:"Ext.form.Panel",alias:"widget.studentintakedemographics",id:"StudentIntakeDemographics",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.studentintake.DemographicsViewController",inject:{childCareArrangementsStore:"childCareArrangementsStore",citizenshipsStore:"citizenshipsStore",educationGoalsStore:"educationGoalsStore",educationLevelsStore:"educationLevelsStore",employmentShiftsStore:"employmentShiftsStore",ethnicitiesStore:"ethnicitiesStore",gendersStore:"gendersStore",maritalStatusesStore:"maritalStatusesStore",militaryAffiliationsStore:"militaryAffiliationsStore",veteranStatusesStore:"veteranStatusesStore"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,layout:{type:"vbox",align:"stretch"},border:0,defaults:{anchor:"100%"},fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:280},defaultType:"displayfield",items:[{xtype:"fieldset",border:0,padding:10,title:"",defaultType:"textfield",defaults:{anchor:"95%"},items:[{xtype:"combobox",name:"maritalStatusId",fieldLabel:"Marital Status",emptyText:"Select One",store:a.maritalStatusesStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{xtype:"combobox",name:"ethnicityId",fieldLabel:"Ethnicity",emptyText:"Select One",store:a.ethnicitiesStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{xtype:"combobox",name:"gender",fieldLabel:"Gender",emptyText:"Select One",store:a.gendersStore,valueField:"code",displayField:"title",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{xtype:"combobox",itemId:"citizenship",name:"citizenshipId",fieldLabel:"Citizenship",emptyText:"Select One",store:a.citizenshipsStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{fieldLabel:"Country of citizenship",itemId:"countryOfCitizenship",name:"countryOfCitizenship"},{xtype:"combobox",name:"militaryAffiliationId",fieldLabel:"Military Affiliation",emptyText:"Select One",store:a.militaryAffiliationsStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{xtype:"combobox",name:"veteranStatusId",fieldLabel:"Veteran Status",emptyText:"Select One",store:a.veteranStatusesStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{xtype:"radiogroup",fieldLabel:"Are you a Primary Caregiver?",columns:1,items:[{boxLabel:"Yes",itemId:"primaryCaregiverCheckOn",name:"primaryCaregiver",inputValue:"true"},{boxLabel:"No",itemId:"primaryCaregiverCheckOff",name:"primaryCaregiver",inputValue:"false"}]},{xtype:"displayfield",fieldLabel:"If you have children, please indicate below"},{xtype:"numberfield",name:"numberOfChildren",fieldLabel:"How many?",value:0,minValue:0,maxValue:50},{fieldLabel:"Ages? Separate each age with a comma. (1,5,12)",name:"childAges"},{xtype:"radiogroup",fieldLabel:"Childcare Needed?",itemId:"childcareNeeded",columns:1,items:[{boxLabel:"Yes",itemId:"childCareNeededCheckOn",name:"childCareNeeded",inputValue:"true"},{boxLabel:"No",itemId:"childCareNeededCheckOff",name:"childCareNeeded",inputValue:"false"}]},{xtype:"combobox",itemId:"childcareArrangement",name:"childCareArrangementId",fieldLabel:"If yes, what are your childcare arrangements?",emptyText:"Select One",store:a.childCareArrangementsStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{xtype:"radiogroup",itemId:"isEmployed",fieldLabel:"Are you employed?",columns:1,items:[{boxLabel:"Yes",itemId:"employedCheckOn",name:"employed",inputValue:"true"},{boxLabel:"No",itemId:"employedCheckOff",name:"employed",inputValue:"false"}]},{fieldLabel:"Place of employment",itemId:"placeOfEmployment",name:"placeOfEmployment"},{xtype:"combobox",name:"shift",itemId:"shift",fieldLabel:"Shift",emptyText:"Select One",store:a.employmentShiftsStore,valueField:"code",displayField:"title",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{fieldLabel:"Wage",itemId:"wage",name:"wage"},{fieldLabel:"Total hours worked weekly while attending school",itemId:"totalHoursWorkedPerWeek",name:"totalHoursWorkedPerWeek"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.studentintake.EducationPlans",{extend:"Ext.form.Panel",alias:"widget.studentintakeeducationplans",id:"StudentIntakeEducationPlans",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.studentintake.EducationPlansViewController",inject:{formUtils:"formRendererUtils",studentStatusesStore:"studentStatusesStore"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(this,{autoScroll:true,layout:{type:"vbox",align:"stretch"},border:0,defaults:{anchor:"100%"},fieldDefaults:{msgTarget:"side",labelAlign:"left",labelWidth:225},defaultType:"displayfield",items:[{xtype:"fieldset",border:0,padding:10,title:"",defaultType:"textfield",defaults:{anchor:"95%"},items:[{xtype:"combobox",name:"studentStatusId",itemId:"studentStatusCombo",fieldLabel:"Student Status",emptyText:"Select One",store:a.studentStatusesStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true},{xtype:"checkboxgroup",fieldLabel:"Check all that you have completed",columns:1,items:[{boxLabel:"New Student Orientation",name:"newOrientationComplete"},{boxLabel:"Registered for Classes",name:"registeredForClasses"}]},{xtype:"radiogroup",fieldLabel:"Have your parents obtained a college degree?",columns:1,itemId:"collegeDegreeForParents",items:[{boxLabel:"Yes",itemId:"collegeDegreeForParentsCheckOn",name:"collegeDegreeForParents",inputValue:true},{boxLabel:"No",itemId:"collegeDegreeForParentsCheckOff",name:"collegeDegreeForParents",inputValue:false}]},{xtype:"radiogroup",fieldLabel:"Require special accommodations?",columns:1,itemId:"specialNeeds",items:[{boxLabel:"Yes",itemId:"specialNeedsCheckOn",name:"specialNeeds",inputValue:"y"},{boxLabel:"No",itemId:"specialNeedsCheckOff",name:"specialNeeds",inputValue:"n"}]},{xtype:"radiogroup",fieldLabel:"What grade did you typically earn at your highest level of education?",columns:1,items:[{boxLabel:"A",name:"gradeTypicallyEarned",inputValue:"A"},{boxLabel:"A-B",name:"gradeTypicallyEarned",inputValue:"AB"},{boxLabel:"B",name:"gradeTypicallyEarned",inputValue:"B"},{boxLabel:"B-C",name:"gradeTypicallyEarned",inputValue:"BC"},{boxLabel:"C",name:"gradeTypicallyEarned",inputValue:"C"},{boxLabel:"C-D",name:"gradeTypicallyEarned",inputValue:"CD"},{boxLabel:"D",name:"gradeTypicallyEarned",inputValue:"D"},{boxLabel:"D-F",name:"gradeTypicallyEarned",inputValue:"DF"},{boxLabel:"F",name:"gradeTypicallyEarned",inputValue:"F"}]}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.studentintake.Personal",{extend:"Ext.form.Panel",alias:"widget.studentintakepersonal",id:"StudentIntakePersonal",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.studentintake.PersonalViewController",inject:{columnRendererUtils:"columnRendererUtils",statesStore:"statesStore"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,border:0,bodyPadding:5,layout:"anchor",defaults:{anchor:"100%"},fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:200},items:[{xtype:"fieldset",border:0,title:"",defaultType:"textfield",defaults:{anchor:"95%"},items:[{xtype:"displayfield",fieldLabel:"Intake Completion Date",name:"studentIntakeCompleteDate",renderer:Ext.util.Format.dateRenderer("m/d/Y")},{fieldLabel:"First Name",name:"firstName",itemId:"firstName",maxLength:50,allowBlank:false},{fieldLabel:"Middle Name",name:"middleName",itemId:"middleName",maxLength:50,allowBlank:true},{fieldLabel:"Last Name",name:"lastName",itemId:"lastName",maxLength:50,allowBlank:false},{fieldLabel:"Student ID",name:"schoolId",minLength:0,maxLength:7,itemId:"studentId",allowBlank:false},{xtype:"datefield",fieldLabel:"Birth Date",itemId:"birthDate",altFormats:"m/d/Y|m-d-Y",invalidText:"{0} is not a valid date - it must be in the format: 06/02/2012 or 06-02-2012",name:"birthDate",allowBlank:false},{fieldLabel:"Home Phone",name:"homePhone",emptyText:"xxx-xxx-xxxx",maxLength:25,allowBlank:true,itemId:"homePhone"},{fieldLabel:"Work Phone",name:"workPhone",emptyText:"xxx-xxx-xxxx",maxLength:25,allowBlank:true,itemId:"workPhone"},{fieldLabel:"Cell Phone",name:"cellPhone",emptyText:"xxx-xxx-xxxx",maxLength:25,allowBlank:true,itemId:"cellPhone"},{fieldLabel:"Primary Email (School)",name:"primaryEmailAddress",vtype:"email",maxLength:100,allowBlank:true,itemId:"primaryEmailAddress"},{fieldLabel:"Alternate Email",name:"secondaryEmailAddress",vtype:"email",maxLength:100,allowBlank:true,itemId:"secondaryEmailAddress"},{xtype:"displayfield",fieldLabel:"CURRENT ADDRESS"},{xtype:"displayfield",fieldLabel:"Non-local",name:"nonLocalAddress",renderer:a.columnRendererUtils.renderFriendlyBoolean},{fieldLabel:"Address Line 1",name:"addressLine1",maxLength:50,allowBlank:true,itemId:"addressLine1"},{fieldLabel:"Address Line 2",name:"addressLine1",maxLength:50,allowBlank:true,itemId:"addressLine2"},{fieldLabel:"City",name:"city",maxLength:50,allowBlank:true,itemId:"city"},{xtype:"combobox",name:"state",fieldLabel:"State",emptyText:"Select a State",store:a.statesStore,valueField:"code",displayField:"title",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true,forceSelection:true,itemId:"state"},{fieldLabel:"Zip Code",name:"zipCode",maxLength:10,allowBlank:true,itemId:"zipCode"},{xtype:"displayfield",fieldLabel:"ALTERNATE ADDRESS"},{xtype:"checkbox",fieldLabel:"In Use",name:"alternateAddressInUse"},{fieldLabel:"Address",name:"alternateAddressLine1",maxLength:50,allowBlank:true,itemId:"alternateAddress"},{fieldLabel:"City",name:"alternateAddressCity",maxLength:50,allowBlank:true,itemId:"alternateAddressCity"},{xtype:"combobox",name:"alternateAddressState",fieldLabel:"State",emptyText:"Select a State",store:a.statesStore,valueField:"code",displayField:"title",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true,forceSelection:true,itemId:"alternateAddressState"},{fieldLabel:"Zip Code",name:"alternateAddressZipCode",maxLength:10,allowBlank:true,itemId:"alternateAddressZipCode"},{fieldLabel:"Country",name:"alternateAddressCountry",allowBlank:true,itemId:"alternateAddressCountry"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.journal.Journal",{extend:"Ext.grid.Panel",alias:"widget.journal",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.journal.JournalToolViewController",inject:{appEventsController:"appEventsController",authenticatedPerson:"authenticatedPerson",columnRendererUtils:"columnRendererUtils",model:"currentJournalEntry",store:"journalEntriesStore"},width:"100%",height:"100%",initComponent:function(){var a=this;var b=Ext.create("Ext.selection.CheckboxModel");Ext.apply(a,{autoScroll:true,title:"Journal",store:a.store,columns:[{xtype:"actioncolumn",width:65,header:"Action",items:[{icon:Ssp.util.Constants.GRID_ITEM_EDIT_ICON_PATH,tooltip:"Edit Journal Note",handler:function(e,g,d){var f=e.getStore().getAt(g);var c=e.up("panel");c.model.data=f.data;c.appEventsController.getApplication().fireEvent("editJournalEntry")},getClass:function(f,e,d){var c="x-hide-display";if(a.authenticatedPerson.hasAccess("EDIT_JOURNAL_ENTRY_BUTTON")){c=Ssp.util.Constants.GRID_ITEM_EDIT_ICON_PATH}return c},scope:a},{icon:Ssp.util.Constants.GRID_ITEM_DELETE_ICON_PATH,tooltip:"Delete Journal Note",handler:function(e,g,d){var f=e.getStore().getAt(g);var c=e.up("panel");c.model.data=f.data;c.appEventsController.getApplication().fireEvent("deleteJournalEntry")},getClass:function(f,e,d){var c="x-hide-display";if(a.authenticatedPerson.hasAccess("DELETE_JOURNAL_ENTRY_BUTTON")){c=Ssp.util.Constants.GRID_ITEM_DELETE_ICON_PATH}return c},scope:a}]},{header:"Date",dataIndex:"entryDate",flex:1,renderer:Ext.util.Format.dateRenderer("m/d/Y")},{header:"Entered By",dataIndex:"createdBy",flex:1,renderer:a.columnRendererUtils.renderCreatedBy},{header:"Source",dataIndex:"journalSource",flex:1,renderer:a.columnRendererUtils.renderJournalSourceName},{header:"Confidentiality",dataIndex:"confidentialityLevel",flex:1,renderer:a.columnRendererUtils.renderConfidentialityLevelName}],dockedItems:[{dock:"top",xtype:"toolbar",items:[{tooltip:"Add Journal Note",text:"Add",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("ADD_JOURNAL_ENTRY_BUTTON"),itemId:"addButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.journal.EditJournal",{extend:"Ext.form.Panel",alias:"widget.editjournal",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.journal.EditJournalViewController",inject:{confidentialityLevelsStore:"confidentialityLevelsStore",journalSourcesStore:"journalSourcesStore",journalTracksStore:"journalTracksStore",model:"currentJournalEntry"},initComponent:function(){var a=this;Ext.applyIf(a,{title:((a.model.get("id")=="")?"Add Journal":"Edit Journal"),autoScroll:true,defaults:{labelWidth:150,padding:5,labelAlign:"right"},items:[{xtype:"datefield",fieldLabel:"Entry Date",itemId:"entryDateField",altFormats:"m/d/Y|m-d-Y",name:"entryDate",allowBlank:false},{xtype:"combobox",itemId:"confidentialityLevelCombo",name:"confidentialityLevelId",fieldLabel:"Confidentiality Level",emptyText:"Select One",store:a.confidentialityLevelsStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false,forceSelection:true,anchor:"95%"},{xtype:"combobox",itemId:"journalSourceCombo",name:"journalSourceId",fieldLabel:"Source",emptyText:"Select One",store:a.journalSourcesStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false,forceSelection:true,anchor:"95%"},{xtype:"textareafield",fieldLabel:"Comment (Optional)",itemId:"commentText",anchor:"95%",name:"comment"},{xtype:"fieldcontainer",fieldLabel:"Journal Track (Optional)",labelWidth:155,anchor:"95%",layout:"hbox",items:[{xtype:"combobox",itemId:"journalTrackCombo",name:"journalTrackId",fieldLabel:"",emptyText:"Select One",store:a.journalTracksStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:true,forceSelection:false,flex:1},{xtype:"tbspacer",width:10},{tooltip:"Removes the assigned Journal Track and Session Details",text:"Remove/Reset",xtype:"button",itemId:"removeJournalTrackButton",hidden:((a.model.get("id")=="")?false:true)}]},{xtype:"fieldcontainer",fieldLabel:"Session Details",labelWidth:155,anchor:"95%",layout:"hbox",items:[{tooltip:"Add Journal Session Details",text:"Add/Edit Session Details",xtype:"button",itemId:"addSessionDetailsButton"}]},{xtype:"displayjournaldetails",autoScroll:true,anchor:"95% 50%"}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.journal.DisplayDetails",{extend:"Ext.grid.Panel",alias:"widget.displayjournaldetails",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.journal.DisplayDetailsViewController",inject:{store:"journalEntryDetailsStore"},layout:"fit",width:"100%",height:"100%",initComponent:function(){Ext.apply(this,{store:this.store,hideHeaders:true,features:[{id:"group",ftype:"grouping",groupHeaderTpl:"{name}",hideGroupedHeader:false,enableGroupingMenu:false}],columns:[{text:"",flex:1,sortable:false,dataIndex:"name"}]});return this.callParent(arguments)}});Ext.define("Ssp.view.tools.journal.TrackTree",{extend:"Ext.tree.Panel",alias:"widget.journaltracktree",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.journal.TrackTreeViewController",inject:{store:"treeStore"},height:200,width:"100%",initComponent:function(){Ext.apply(this,{singleExpand:false,store:this.store,useArrows:true,rootVisible:false,hideCollapseTool:true,dockedItems:[{xtype:"toolbar",items:[{text:"Save Details",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]},{xtype:"toolbar",dock:"top",items:[{xtype:"label",text:"Select the details for this Journal Session"}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.tools.earlyalert.EarlyAlert",{extend:"Ext.tree.Panel",alias:"widget.earlyalert",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.earlyalert.EarlyAlertToolViewController",inject:{appEventsController:"appEventsController",authenticatedPerson:"authenticatedPerson",columnRendererUtils:"columnRendererUtils",model:"currentEarlyAlert",treeStore:"earlyAlertsTreeStore"},width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,title:"Early Alerts",cls:"early-alert-tree-panel",collapsible:false,useArrows:true,rootVisible:false,store:a.treeStore,multiSelect:false,singleExpand:true,columns:[{xtype:"treecolumn",text:"Responses",flex:0.5,sortable:false,dataIndex:"text"},{text:"Created By",flex:1,dataIndex:"createdBy",renderer:a.columnRendererUtils.renderCreatedBy,sortable:false},{text:"Created Date",flex:1,dataIndex:"createdDate",renderer:Ext.util.Format.dateRenderer("Y-m-d g:i A"),sortable:false},{text:"Status",flex:0.5,sortable:false,dataIndex:"closedDate",renderer:a.columnRendererUtils.renderEarlyAlertStatus},{text:"Details",flex:2,sortable:false,dataIndex:"gridDisplayDetails"}],dockedItems:[{dock:"top",xtype:"toolbar",items:[{tooltip:"Respond to the selected Early Alert",text:"",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("RESPOND_EARLY_ALERT_BUTTON"),width:28,height:28,cls:"earlyAlertResponseIcon",itemId:"respondButton"},{tooltip:"Display detail for the selected item",text:"Details",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("EARLY_ALERT_DETAILS_BUTTON"),itemId:"displayDetailsButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.earlyalert.EarlyAlertResponse",{extend:"Ext.form.Panel",alias:"widget.earlyalertresponse",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.earlyalert.EarlyAlertResponseViewController",inject:{earlyAlert:"currentEarlyAlert",outcomesStore:"earlyAlertOutcomesStore",outreachesStore:"earlyAlertOutreachesStore",referralsStore:"earlyAlertReferralsStore"},initComponent:function(){var a=this;Ext.applyIf(a,{autoScroll:true,title:"Early Alert Response",defaults:{labelWidth:200},items:[{xtype:"displayfield",fieldLabel:"Early Alert Course",value:a.earlyAlert.get("courseName")+" "+a.earlyAlert.get("courseTitle")},{xtype:"combobox",itemId:"outcomeCombo",name:"earlyAlertOutcomeId",fieldLabel:"Outcome",emptyText:"Select One",store:a.outcomesStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false,forceSelection:true,anchor:"95%"},{xtype:"textfield",itemId:"otherOutcomeDescriptionText",name:"earlyAlertOutcomeOtherDescription",fieldLabel:"Other Outcome Description",anchor:"95%"},{xtype:"multiselect",name:"earlyAlertOutreachIds",itemId:"outreachList",fieldLabel:"Outreach"+Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY,store:a.outreachesStore,displayField:"name",msgTarget:"side",valueField:"id",invalidCls:"multiselect-invalid",minSelections:1,allowBlank:false,anchor:"95%"},{xtype:"textareafield",fieldLabel:"Comment",anchor:"95%",name:"comment",allowBlank:false},{xtype:"earlyalertreferrals",flex:1}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.earlyalert.EarlyAlertReferrals",{extend:"Ext.form.Panel",alias:"widget.earlyalertreferrals",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.earlyalert.EarlyAlertReferralsViewController",width:"100%",height:"100%",autoScroll:true,initComponent:function(){var a=this;Ext.apply(this,{bodyPadding:5,layout:"anchor"});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.earlyalert.EarlyAlertDetails",{extend:"Ext.form.Panel",alias:"widget.earlyalertdetails",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.earlyalert.EarlyAlertDetailsViewController",inject:{model:"currentEarlyAlert",selectedSuggestionsStore:"earlyAlertDetailsSuggestionsStore"},title:"Early Alert Details",initComponent:function(){var a=this;Ext.applyIf(a,{autoScroll:true,items:[{xtype:"displayfield",fieldLabel:"Created By",anchor:"100%",name:"createdByPersonName",itemId:"createdByField"},{xtype:"displayfield",fieldLabel:"Created Date",anchor:"100%",name:"createdDate",itemId:"createdDateField",renderer:Ext.util.Format.dateRenderer("Y-m-d g:i A")},{xtype:"displayfield",fieldLabel:"Course Name",anchor:"100%",name:"courseName"},{xtype:"displayfield",fieldLabel:"Status",anchor:"100%",name:"status",itemId:"statusField"},{xtype:"displayfield",fieldLabel:"Closed By",anchor:"100%",name:"closedByPersonName",itemId:"closedByField"},{xtype:"displayfield",fieldLabel:"Closed Date",anchor:"100%",name:"closedDate",renderer:Ext.util.Format.dateRenderer("Y-m-d g:i A")},{xtype:"displayfield",fieldLabel:"Campus",itemId:"campusField",anchor:"100%",name:"campus"},{xtype:"displayfield",fieldLabel:"Reason",itemId:"earlyAlertReasonField",anchor:"100%",name:"earlyAlertReason"},{xtype:"multiselect",name:"earlyAlertSuggestionIds",itemId:"earlyAlertSuggestionsList",fieldLabel:"Suggestions",store:a.selectedSuggestionsStore,displayField:"name",anchor:"95%"},{xtype:"displayfield",fieldLabel:"Email CC",anchor:"100%",name:"emailCC"},{xtype:"displayfield",fieldLabel:"Comment",anchor:"100%",name:"comment"}],dockedItems:[{xtype:"toolbar",items:[{text:"Return to Early Alert List",xtype:"button",itemId:"finishButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.earlyalert.EarlyAlertResponseDetails",{extend:"Ext.form.Panel",alias:"widget.earlyalertresponsedetails",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.earlyalert.EarlyAlertResponseDetailsViewController",inject:{selectedOutreachesStore:"earlyAlertResponseDetailsOutreachesStore",selectedReferralsStore:"earlyAlertResponseDetailsReferralsStore"},title:"Early Alert Response Details",initComponent:function(){var a=this;Ext.applyIf(a,{autoScroll:true,items:[{xtype:"displayfield",fieldLabel:"Created By",anchor:"100%",name:"createdByPersonName",itemId:"createdByField"},{xtype:"displayfield",fieldLabel:"Created Date",anchor:"100%",name:"createdDate",itemId:"createdDateField",renderer:Ext.util.Format.dateRenderer("Y-m-d g:i A")},{xtype:"displayfield",fieldLabel:"Outcome",anchor:"100%",itemId:"outcomeField",name:"outcome"},{xtype:"multiselect",name:"earlyAlertOutreachIds",itemId:"earlyAlertOutreachList",fieldLabel:"Suggestions",store:a.selectedOutreachesStore,displayField:"name",anchor:"95%"},{xtype:"multiselect",name:"earlyAlertReferralIds",itemId:"earlyAlertReferralsList",fieldLabel:"Referrals",store:a.selectedReferralsStore,displayField:"name",anchor:"95%"},{xtype:"displayfield",fieldLabel:"Comment",anchor:"100%",name:"comment"}],dockedItems:[{xtype:"toolbar",items:[{text:"Return to Early Alert List",xtype:"button",itemId:"finishButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.tools.document.StudentDocuments",{extend:"Ext.grid.Panel",alias:"widget.studentdocuments",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.document.StudentDocumentToolViewController",inject:{appEventsController:"appEventsController",columnRendererUtils:"columnRendererUtils",model:"currentDocument",store:"documentsStore"},title:"Student Documents",width:"100%",height:"100%",autoScroll:true,initComponent:function(){var a=this;Ext.applyIf(a,{border:0,store:this.store,dockedItems:[{dock:"top",xtype:"toolbar",items:[{xtype:"button",itemId:"addButton",text:"Add",action:"add"},{xtype:"button",itemId:"downloadButton",text:"Download",action:"download"}]}],columns:[{xtype:"gridcolumn",dataIndex:"createdDate",text:"Date Entered"},{xtype:"gridcolumn",dataIndex:"name",text:"Name"},{xtype:"gridcolumn",dataIndex:"note",text:"Note",flex:1},{xtype:"actioncolumn",width:65,header:"Action",items:[{icon:Ssp.util.Constants.GRID_ITEM_EDIT_ICON_PATH,tooltip:"Edit Task",handler:function(d,f,c){var e=d.getStore().getAt(f);var b=d.up("panel");b.model.data=e.data;b.appEventsController.getApplication().fireEvent("editDocument")},scope:this},{icon:Ssp.util.Constants.GRID_ITEM_DELETE_ICON_PATH,tooltip:"Delete Task",handler:function(d,f,c){var e=d.getStore().getAt(f);var b=d.up("panel");b.model.data=e.data;b.appEventsController.getApplication().fireEvent("deleteDocument")},scope:this}]}],viewConfig:{}});a.callParent(arguments)}});Ext.define("Ssp.view.tools.document.EditDocument",{extend:"Ext.form.Panel",alias:"widget.editdocument",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.document.EditDocumentViewController",initComponent:function(){Ext.applyIf(this,{title:"Edit Document",defaults:{labelWidth:150},items:[{xtype:"combobox",itemId:"confidentialityLevelCombo",name:"confidentialityLevelId",fieldLabel:"Confidentiality Level",emptyText:"Select One",store:this.confidentialityLevelsStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false,forceSelection:true,anchor:"95%"},{xtype:"textfield",fieldLabel:"Name",anchor:"100%",name:"name",anchor:"95%",allowBlank:false},{xtype:"textareafield",fieldLabel:"Note",anchor:"100%",name:"note",anchor:"95%"}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.tools.sis.Transcript",{extend:"Ext.grid.Panel",alias:"widget.sistranscript",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.sis.TranscriptViewController",width:"100%",height:"100%",autoScroll:true,initComponent:function(){var a=this;Ext.applyIf(a,{columns:[{xtype:"gridcolumn",dataIndex:"string",text:"Course"},{xtype:"gridcolumn",dataIndex:"string",text:"Section"},{xtype:"gridcolumn",dataIndex:"string",text:"Credit"},{xtype:"gridcolumn",dataIndex:"string",text:"Title"},{xtype:"gridcolumn",dataIndex:"string",text:"Grade"},{xtype:"gridcolumn",dataIndex:"string",text:"Term"}],viewConfig:{}});a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.AbstractReferenceAdmin",{extend:"Ext.grid.Panel",alias:"widget.abstractreferenceadmin",title:"Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.AbstractReferenceAdminViewController",inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson"},height:"100%",width:"100%",autoScroll:true,initComponent:function(){var b=this;var a=Ext.create("Ext.grid.plugin.RowEditing",{clicksToEdit:2});Ext.apply(b,{plugins:a,selType:"rowmodel",columns:[{header:"Name",dataIndex:"name",field:{xtype:"textfield"},flex:50},{header:"Description",dataIndex:"description",flex:50,field:{xtype:"textfield"}}],dockedItems:[{xtype:"pagingtoolbar",dock:"bottom",itemId:"recordPager",displayInfo:true,pageSize:b.apiProperties.getPagingSize()},{xtype:"toolbar",dock:"top",items:[{text:"Add",iconCls:"icon-add",xtype:"button",hidden:!b.authenticatedPerson.hasAccess("ABSTRACT_REFERENCE_ADMIN_ADD_BUTTON"),action:"add",itemId:"addButton"},"-",{text:"Delete",iconCls:"icon-delete",xtype:"button",hidden:!b.authenticatedPerson.hasAccess("ABSTRACT_REFERENCE_ADMIN_DELETE_BUTTON"),action:"delete",itemId:"deleteButton"}]},{xtype:"toolbar",dock:"top",items:[{xtype:"label",text:"Double-click to edit an item."}]}]});b.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.ConfidentialityDisclosureAgreementAdmin",{extend:"Ext.form.Panel",alias:"widget.confidentialitydisclosureagreementadmin",id:"ConfidentialityDisclosureAgreementAdmin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.ConfidentialityDisclosureAgreementAdminViewController",inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson"},initComponent:function(){var a=this;Ext.apply(a,{title:"Confidentiality Disclosure Agreement Admin",autoScroll:true,width:"100%",height:"100%",bodyPadding:5,layout:"anchor",fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:125},defaultType:"displayfield",items:[{fieldLabel:"Name",xtype:"textfield",disabled:!a.authenticatedPerson.hasAccess("CONFIDENTIALITY_AGREEMENT_ADMIN_FIELDS"),name:"name",anchor:"95%"},{fieldLabel:"Description",xtype:"textfield",disabled:!a.authenticatedPerson.hasAccess("CONFIDENTIALITY_AGREEMENT_ADMIN_FIELDS"),name:"description",anchor:"95%"},{xtype:"htmleditor",fieldLabel:"Disclosure Agreement",enableColors:false,disabled:!a.authenticatedPerson.hasAccess("CONFIDENTIALITY_AGREEMENT_ADMIN_FIELDS"),enableAlignments:false,anchor:"95% 80%",name:"text"}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("CONFIDENTIALITY_AGREEMENT_ADMIN_SAVE_BUTTON"),action:"save",itemId:"saveButton"},{xtype:"label",html:Ssp.util.Constants.DATA_SAVE_SUCCESS_MESSAGE,itemId:"saveSuccessMessage",style:Ssp.util.Constants.DATA_SAVE_SUCCESS_MESSAGE_STYLE,hidden:true}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.crg.ChallengeAdmin",{extend:"Ext.container.Container",alias:"widget.challengeadmin",title:"Challenge Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.crg.ChallengeAdminViewController",height:"100%",width:"100%",layout:{type:"hbox",align:"stretch"},initComponent:function(){Ext.apply(this,{items:[{xtype:"displaychallengesadmin",flex:1},{xtype:"displaychallengecategoriesadmin",flex:1}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.crg.ChallengeReferralAdmin",{extend:"Ext.container.Container",alias:"widget.challengereferraladmin",title:"Challenge Referral Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.crg.ChallengeReferralAdminViewController",height:"100%",width:"100%",layout:{type:"hbox",align:"stretch"},initComponent:function(){Ext.apply(this,{items:[{xtype:"displayreferralsadmin",flex:1},{xtype:"displaychallengereferralsadmin",flex:1}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.crg.DisplayChallengesAdmin",{extend:"Ext.grid.Panel",alias:"widget.displaychallengesadmin",title:"Challenges Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.crg.DisplayChallengesAdminViewController",inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson",columnRendererUtils:"columnRendererUtils"},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{viewConfig:{plugins:{ptype:"gridviewdragdrop",dragGroup:"gridtotree",enableDrag:a.authenticatedPerson.hasAccess("CHALLENGE_CATEGORIES_ADMIN_ASSOCIATIONS"),},},autoScroll:true,selType:"rowmodel",enableDragDrop:false,columns:[{header:"Name",dataIndex:"name",flex:1},{header:"Show On Intake",dataIndex:"showInStudentIntake",renderer:a.columnRendererUtils.renderFriendlyBoolean,flex:1}],dockedItems:[{xtype:"pagingtoolbar",dock:"bottom",displayInfo:true,pageSize:a.apiProperties.getPagingSize()},{xtype:"toolbar",items:[{text:"Add",iconCls:"icon-add",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("CHALLENGES_ADMIN_ADD_BUTTON"),action:"add",itemId:"addButton"},"-",{text:"Edit",iconCls:"icon-edit",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("CHALLENGES_ADMIN_EDIT_BUTTON"),action:"edit",itemId:"editButton"},"-",{text:"Delete",iconCls:"icon-delete",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("CHALLENGES_ADMIN_DELETE_BUTTON"),action:"delete",itemId:"deleteButton"}]},{xtype:"toolbar",dock:"top",items:[{xtype:"label",text:"Associate items by dragging a Challenge onto a Category folder"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.crg.DisplayReferralsAdmin",{extend:"Ext.grid.Panel",alias:"widget.displayreferralsadmin",title:"Referrals Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.crg.DisplayReferralsAdminViewController",inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson"},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{viewConfig:{plugins:{ptype:"gridviewdragdrop",dragGroup:"gridtotree",enableDrag:a.authenticatedPerson.hasAccess("CHALLENGE_REFERRALS_ADMIN_ASSOCIATIONS"),},},autoScroll:true,selType:"rowmodel",columns:[{header:"Name",dataIndex:"name",field:{xtype:"textfield"},flex:1,renderer:function(d,c,b){c.tdAttr='data-qtip="'+b.get("description")+'"';return d}}],dockedItems:[{xtype:"pagingtoolbar",dock:"bottom",displayInfo:true,pageSize:a.apiProperties.getPagingSize()},{xtype:"toolbar",items:[{text:"Add",iconCls:"icon-add",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("CHALLENGE_REFERRALS_ADMIN_ADD_BUTTON"),action:"add",itemId:"addButton"},"-",{text:"Edit",iconCls:"icon-edit",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("CHALLENGE_REFERRALS_ADMIN_EDIT_BUTTON"),action:"edit",itemId:"editButton"},"-",{text:"Delete",iconCls:"icon-delete",hidden:!a.authenticatedPerson.hasAccess("CHALLENGE_REFERRALS_ADMIN_DELETE_BUTTON"),xtype:"button",action:"delete",itemId:"deleteButton"}]},{xtype:"toolbar",dock:"top",items:[{xtype:"label",text:"Associate items by dragging a Referral onto a Challenge folder"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.crg.EditChallenge",{extend:"Ext.form.Panel",alias:"widget.editchallenge",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.crg.EditChallengeViewController",inject:{confidentialityLevelsStore:"confidentialityLevelsStore"},title:"Edit Challenge",initComponent:function(){Ext.applyIf(this,{items:[{xtype:"textfield",fieldLabel:"Challenge Name",anchor:"100%",name:"name"},{xtype:"textareafield",fieldLabel:"Description",anchor:"100%",name:"description"},{xtype:"textfield",fieldLabel:"Tags",anchor:"100%",name:"tags"},{xtype:"combobox",name:"defaultConfidentialityLevelId",fieldLabel:"Confidentiality Level",emptyText:"Select One",store:this.confidentialityLevelsStore,valueField:"id",displayField:"acronym",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false,forceSelection:true},{xtype:"textareafield",fieldLabel:"Self Help Guide Description",anchor:"100%",name:"selfHelpGuideDescription"},{xtype:"textareafield",fieldLabel:"Self Help Guide Question",anchor:"100%",name:"selfHelpGuideQuestion"},{xtype:"checkboxfield",fieldLabel:"Show in Student Intake",anchor:"100%",name:"showInStudentIntake"},{xtype:"checkboxfield",fieldLabel:"Show in Self Help Search",anchor:"100%",name:"showInSelfHelpSearch"}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.crg.EditReferral",{extend:"Ext.form.Panel",alias:"widget.editreferral",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.crg.EditReferralViewController",title:"Edit Referral",initComponent:function(){Ext.applyIf(this,{items:[{xtype:"textfield",fieldLabel:"Referral Name",anchor:"100%",name:"name"},{xtype:"textareafield",fieldLabel:"Description",anchor:"100%",name:"description"},{xtype:"textareafield",fieldLabel:"Public Description",anchor:"100%",name:"publicDescription"},{xtype:"checkboxfield",fieldLabel:"Show in Self Help Guide",anchor:"100%",name:"showInSelfHelpGuide"}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.journal.JournalStepAdmin",{extend:"Ext.container.Container",alias:"widget.journalstepadmin",title:"Challenge Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.journal.JournalStepAdminViewController",height:"100%",width:"100%",layout:{type:"hbox",align:"stretch"},initComponent:function(){Ext.apply(this,{items:[{xtype:"displaystepsadmin",flex:1},{xtype:"associatetrackstepsadmin",flex:1}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.journal.JournalStepDetailAdmin",{extend:"Ext.container.Container",alias:"widget.journalstepdetailadmin",title:"Journal Step Detail Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.journal.JournalStepDetailAdminViewController",height:"100%",width:"100%",layout:{type:"hbox",align:"stretch"},initComponent:function(){Ext.apply(this,{items:[{xtype:"displaydetailsadmin",flex:1},{xtype:"associatestepdetailsadmin",flex:1}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.journal.DisplayDetailsAdmin",{extend:"Ext.grid.Panel",alias:"widget.displaydetailsadmin",title:"Details Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.journal.DisplayDetailsAdminViewController",inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson"},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{viewConfig:{plugins:{ptype:"gridviewdragdrop",dragGroup:"gridtotree",enableDrag:a.authenticatedPerson.hasAccess("STEP_DETAILS_ADMIN_ASSOCIATIONS")},},autoScroll:true,selType:"rowmodel",columns:[{header:"Name",dataIndex:"name",field:{xtype:"textfield"},flex:1}],dockedItems:[{xtype:"pagingtoolbar",dock:"bottom",displayInfo:true,pageSize:a.apiProperties.getPagingSize()},{xtype:"toolbar",items:[{text:"Add",iconCls:"icon-add",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("JOURNAL_DETAIL_ADMIN_ADD_BUTTON"),action:"add",itemId:"addButton"},"-",{text:"Edit",iconCls:"icon-edit",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("JOURNAL_DETAIL_ADMIN_EDIT_BUTTON"),action:"edit",itemId:"editButton"},"-",{text:"Delete",iconCls:"icon-delete",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("JOURNAL_DETAIL_ADMIN_DELETE_BUTTON"),action:"delete",itemId:"deleteButton"}]},{xtype:"toolbar",dock:"top",items:[{xtype:"label",text:"Associate items by dragging a Detail onto a Step folder"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.journal.DisplayStepsAdmin",{extend:"Ext.grid.Panel",alias:"widget.displaystepsadmin",title:"Steps Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.journal.DisplayStepsAdminViewController",inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson",columnRendererUtils:"columnRendererUtils"},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{viewConfig:{plugins:{ptype:"gridviewdragdrop",dragGroup:"gridtotree",enableDrag:a.authenticatedPerson.hasAccess("TRACKS_STEPS_ADMIN_ASSOCIATIONS")},},autoScroll:true,selType:"rowmodel",enableDragDrop:false,columns:[{header:"Name",dataIndex:"name",field:{xtype:"textfield"},flex:1},{header:"Used for Transition",dataIndex:"usedForTransition",renderer:a.columnRendererUtils.renderFriendlyBoolean,field:{xtype:"checkbox"},flex:1}],dockedItems:[{xtype:"pagingtoolbar",dock:"bottom",displayInfo:true,pageSize:a.apiProperties.getPagingSize()},{xtype:"toolbar",items:[{text:"Add",iconCls:"icon-add",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("JOURNAL_STEP_ADMIN_ADD_BUTTON"),action:"add",itemId:"addButton"},"-",{text:"Edit",iconCls:"icon-edit",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("JOURNAL_STEP_ADMIN_EDIT_BUTTON"),action:"edit",itemId:"editButton"},"-",{text:"Delete",iconCls:"icon-delete",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("JOURNAL_STEP_ADMIN_DELETE_BUTTON"),action:"delete",itemId:"deleteButton"}]},{xtype:"toolbar",dock:"top",items:[{xtype:"label",text:"Associate items by dragging a Step onto a Track folder"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.journal.EditStep",{extend:"Ext.form.Panel",alias:"widget.editjournalstep",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.journal.EditStepViewController",title:"Edit Step",initComponent:function(){Ext.applyIf(this,{items:[{xtype:"textfield",fieldLabel:"Step Name",anchor:"100%",name:"name"},{xtype:"textareafield",fieldLabel:"Description",anchor:"100%",name:"description"},{xtype:"checkbox",fieldLabel:"Used for Transition",name:"usedForTransition"}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.journal.EditStepDetail",{extend:"Ext.form.Panel",alias:"widget.editjournalstepdetail",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.journal.EditStepDetailViewController",title:"Edit Detail",initComponent:function(){Ext.applyIf(this,{items:[{xtype:"textfield",fieldLabel:"Detail Name",anchor:"100%",name:"name"},{xtype:"textareafield",fieldLabel:"Description",anchor:"100%",name:"description"}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.campus.CampusAdmin",{extend:"Ext.grid.Panel",alias:"widget.campusadmin",title:"Campus Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.campus.CampusAdminViewController",inject:{apiProperties:"apiProperties",appEventsController:"appEventsController",authenticatedPerson:"authenticatedPerson",model:"currentCampus",store:"campusesStore"},height:"100%",width:"100%",layout:"fit",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,store:a.store,columns:[{xtype:"actioncolumn",width:100,header:"Assign Routings",items:[{icon:Ssp.util.Constants.GRID_ITEM_EDIT_ICON_PATH,tooltip:"Edit Campus Early Alert Routings",handler:function(d,f,c){var e=d.getStore().getAt(f);var b=d.up("panel");b.model.data=e.data;b.appEventsController.getApplication().fireEvent("editCampusEarlyAlertRoutings")},scope:a}]},{header:"Name",dataIndex:"name",flex:50},{header:"Description",dataIndex:"description",flex:50}],dockedItems:[{xtype:"pagingtoolbar",dock:"bottom",displayInfo:true,store:a.store,pageSize:a.apiProperties.getPagingSize()},{xtype:"toolbar",items:[{text:"Add",iconCls:"icon-add",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("CAMPUS_ADMIN_ADD_BUTTON"),action:"add",itemId:"addButton"},"-",{text:"Edit",iconCls:"icon-edit",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("CAMPUS_ADMIN_EDIT_BUTTON"),action:"edit",itemId:"editButton"},"-",{text:"Delete",iconCls:"icon-delete",hidden:!a.authenticatedPerson.hasAccess("CAMPUS_ADMIN_DELETE_BUTTON"),xtype:"button",action:"delete",itemId:"deleteButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.campus.DefineCampus",{extend:"Ext.panel.Panel",alias:"widget.definecampus",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.campus.DefineCampusViewController",title:"Define a Campus",height:"100%",width:"100%",layout:"card",initComponent:function(){var a=this;Ext.applyIf(a,{activeItem:0,dockedItems:[{xtype:"toolbar",dock:"top",items:[{text:"Cancel",xtype:"button",itemId:"cancelCampusEditorButton"},{text:"Prev",xtype:"button",action:"prev",itemId:"prevButton"},"-",{text:"Next",xtype:"button",action:"next",itemId:"nextButton"},"-",{text:"Finish",xtype:"button",action:"finish",itemId:"finishButton"}]}],items:[{xtype:"editcampus",flex:1},{xtype:"campusearlyalertroutingsadmin",flex:1}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.campus.EditCampus",{extend:"Ext.form.Panel",alias:"widget.editcampus",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.campus.EditCampusViewController",inject:{store:"earlyAlertCoordinatorsStore"},title:"Edit Campus",initComponent:function(){var a=this;Ext.applyIf(a,{items:[{xtype:"textfield",fieldLabel:"Name",anchor:"100%",name:"name"},{xtype:"textareafield",fieldLabel:"Description",anchor:"100%",name:"description"},{xtype:"combobox",name:"earlyAlertCoordinatorId",itemId:"earlyAlertCoordinatorCombo",fieldLabel:"Early Alert Coordinator",emptyText:"Select One",store:a.store,valueField:"id",displayField:"displayFullName",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false,width:300}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.campus.CampusEarlyAlertRoutingsAdmin",{extend:"Ext.panel.Panel",alias:"widget.campusearlyalertroutingsadmin",title:"Campus Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.campus.CampusEarlyAlertRoutingsAdminViewController",inject:{campus:"currentCampus"},height:"100%",width:"100%",layout:"fit",initComponent:function(){var a=this;Ext.apply(a,{title:"Campuses Admin - "+a.campus.get("name"),items:[{xtype:"earlyalertroutingsadmin",flex:1}],dockedItems:[{xtype:"toolbar",items:[{text:"Finished Editing Campus",xtype:"button",itemId:"finishButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.campus.EarlyAlertRoutingsAdmin",{extend:"Ext.grid.Panel",alias:"widget.earlyalertroutingsadmin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.campus.EarlyAlertRoutingsAdminViewController",inject:{apiProperties:"apiProperties",store:"campusEarlyAlertRoutingsStore",columnRendererUtils:"columnRendererUtils"},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,store:a.store,title:"Early Alert Routing Groups",columns:[{header:"Group Name",dataIndex:"groupName",flex:0.4},{header:"Group Email",dataIndex:"groupEmail",flex:0.3},{header:"Person",dataIndex:"person",renderer:a.columnRendererUtils.renderPersonFullName,flex:0.3}],dockedItems:[{xtype:"toolbar",dock:"top",items:[{xtype:"label",text:"Early Alert Routing Groups define optional endpoints where an Early Alert will be delivered when it's entered in the system."}]},{xtype:"pagingtoolbar",dock:"bottom",displayInfo:true,store:a.store,pageSize:a.apiProperties.getPagingSize()},{xtype:"toolbar",items:[{text:"Add",tooltip:"Add Early Alert Routing Group",iconCls:"icon-add",xtype:"button",itemId:"addButton"},"-",{text:"Edit",tooltip:"Edit Early Alert Routing Group",iconCls:"icon-edit",xtype:"button",itemId:"editButton"},"-",{text:"Delete",tooltip:"Delete Early Alert Routing Group",iconCls:"icon-delete",xtype:"button",itemId:"deleteButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.campus.EditCampusEarlyAlertRouting",{extend:"Ext.form.Panel",alias:"widget.editcampusearlyalertrouting",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.campus.EditCampusEarlyAlertRoutingViewController",inject:{earlyAlertReasonsStore:"earlyAlertReasonsStore",peopleSearchLiteStore:"peopleSearchLiteStore",sspConfig:"sspConfig"},title:"Edit Routing Group",initComponent:function(){var a=this;Ext.applyIf(a,{fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:125},items:[{xtype:"combobox",name:"earlyAlertReasonId",itemId:"earlyAlertReasonCombo",fieldLabel:"Early Alert Reason",emptyText:"Select One",store:a.earlyAlertReasonsStore,valueField:"id",displayField:"name",mode:"local",typeAhead:true,queryMode:"local",allowBlank:false,width:500},{xtype:"textfield",fieldLabel:"Group Name",width:500,name:"groupName",allowBlank:false},{xtype:"textfield",fieldLabel:"Group Email",name:"groupEmail",width:500,vtype:"email",maxLength:100,allowBlank:false},{xtype:"combo",store:a.peopleSearchLiteStore,itemId:"personCombo",displayField:"displayFullName",emptyText:"Name or "+a.sspConfig.get("studentIdAlias"),valueField:"id",typeAhead:false,fieldLabel:"Person",hideTrigger:true,queryParam:"searchTerm",allowBlank:true,width:500,listConfig:{loadingText:"Searching...",emptyText:"No matching people found.",getInnerTpl:function(){return"{firstName} {lastName}"}},pageSize:10}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.model.AuthenticatedPerson",{extend:"Ssp.model.AbstractBase",config:{unauthorizedAccessAlertTitle:"Unauthorized Access",unauthorizedAccessAlertMessage:"You do not have permission to access this item. Please see your system administrator if you require access to this information!"},fields:[{name:"permissions",type:"auto",defaultValue:null},{name:"confidentialityLevels",type:"auto",defaultValue:null},{name:"objectPermissionsCollection",type:"auto"}],statics:{REQUIRED_PERMISSIONS_STUDENTS_NAVIGATION_BUTTON:["ROLE_PERSON_READ"],REQUIRED_PERMISSIONS_ADMIN_NAVIGATION_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_STUDENT_SEARCH:["ROLE_PERSON_SEARCH_READ"],REQUIRED_PERMISSIONS_CASELOAD_SEARCH:["ROLE_PERSON_CASELOAD_READ"],REQUIRED_PERMISSIONS_CASELOAD_FILTERS:["ROLE_PERSON_CASELOAD_READ"],REQUIRED_PERMISSIONS_SET_ACTIVE_STATUS_BUTTON:["ROLE_PERSON_PROGRAM_STATUS_WRITE"],REQUIRED_PERMISSIONS_SET_TRANSITION_STATUS_BUTTON:["ROLE_PERSON_PROGRAM_STATUS_WRITE"],REQUIRED_PERMISSIONS_SET_NON_PARTICIPATING_STATUS_BUTTON:["ROLE_PERSON_PROGRAM_STATUS_WRITE"],REQUIRED_PERMISSIONS_SET_NO_SHOW_STATUS_BUTTON:["ROLE_PERSON_PROGRAM_STATUS_WRITE"],REQUIRED_PERMISSIONS_ADD_STUDENT_BUTTON:["ROLE_PERSON_WRITE"],REQUIRED_PERMISSIONS_EDIT_STUDENT_BUTTON:["ROLE_PERSON_WRITE"],REQUIRED_PERMISSIONS_DELETE_STUDENT_BUTTON:["ROLE_PERSON_DELETE"],REQUIRED_PERMISSIONS_ABSTRACT_REFERENCE_ADMIN_ADD_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_ABSTRACT_REFERENCE_ADMIN_EDIT:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_ABSTRACT_REFERENCE_ADMIN_DELETE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CAMPUS_ADMIN_ADD_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CAMPUS_ADMIN_EDIT_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CAMPUS_ADMIN_DELETE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CONFIDENTIALITY_AGREEMENT_ADMIN_FIELDS:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CONFIDENTIALITY_AGREEMENT_ADMIN_SAVE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CHALLENGE_CATEGORIES_ASSOCIATION_ADMIN_DELETE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CHALLENGE_REFERRALS_ASSOCIATION_ADMIN_DELETE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CHALLENGE_CATEGORIES_ADMIN_ASSOCIATIONS:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CHALLENGE_REFERRALS_ADMIN_ASSOCIATIONS:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CHALLENGES_ADMIN_ADD_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CHALLENGES_ADMIN_EDIT_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CHALLENGES_ADMIN_DELETE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CHALLENGE_REFERRALS_ADMIN_ADD_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CHALLENGE_REFERRALS_ADMIN_EDIT_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_CHALLENGE_REFERRALS_ADMIN_DELETE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_TRACK_STEP_ASSOCIATION_ADMIN_DELETE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_STEP_DETAIL_ASSOCIATION_ADMIN_DELETE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_TRACKS_STEPS_ADMIN_ASSOCIATIONS:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_STEP_DETAILS_ADMIN_ASSOCIATIONS:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_JOURNAL_STEP_ADMIN_ADD_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_JOURNAL_STEP_ADMIN_EDIT_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_JOURNAL_STEP_ADMIN_DELETE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_JOURNAL_DETAIL_ADMIN_ADD_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_JOURNAL_DETAIL_ADMIN_EDIT_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_JOURNAL_DETAIL_ADMIN_DELETE_BUTTON:["ROLE_REFERENCE_WRITE"],REQUIRED_PERMISSIONS_PROFILE_TOOL:["ROLE_PERSON_READ"],REQUIRED_PERMISSIONS_PRINT_HISTORY_BUTTON:["ROLE_PERSON_READ","ROLE_PERSON_JOURNAL_ENTRY_READ","ROLE_PERSON_TASK_READ","ROLE_PERSON_EARLY_ALERT_READ","ROLE_PERSON_EARLY_ALERT_RESPONSE_READ"],REQUIRED_PERMISSIONS_PROFILE_PRINT_CONFIDENTIALITY_AGREEMENT_BUTTON:["ROLE_REFERENCE_READ"],REQUIRED_PERMISSIONS_STUDENTINTAKE_TOOL:["ROLE_STUDENT_INTAKE_READ"],REQUIRED_PERMISSIONS_STUDENT_INTAKE_SAVE_BUTTON:["ROLE_STUDENT_INTAKE_WRITE"],REQUIRED_PERMISSIONS_STUDENT_INTAKE_CANCEL_BUTTON:["ROLE_STUDENT_INTAKE_WRITE"],REQUIRED_PERMISSIONS_STUDENT_INTAKE_CHALLENGE_TAB:["ROLE_PERSON_CHALLENGE_READ"],REQUIRED_PERMISSIONS_ACTIONPLAN_TOOL:["ROLE_PERSON_READ","ROLE_PERSON_TASK_READ","ROLE_PERSON_GOAL_READ"],REQUIRED_PERMISSIONS_EMAIL_ACTION_PLAN_BUTTON:["ROLE_PERSON_TASK_READ","ROLE_PERSON_GOAL_READ"],REQUIRED_PERMISSIONS_PRINT_ACTION_PLAN_BUTTON:["ROLE_PERSON_TASK_READ","ROLE_PERSON_GOAL_READ"],REQUIRED_PERMISSIONS_ACTION_PLAN_TASKS_PANEL:["ROLE_PERSON_TASK_READ"],REQUIRED_PERMISSIONS_FILTER_TASKS_BY_AUTHENTICATED_USER_CHECKBOX:["ROLE_PERSON_TASK_READ"],REQUIRED_PERMISSIONS_ADD_TASK_BUTTON:["ROLE_PERSON_TASK_WRITE"],REQUIRED_PERMISSIONS_EDIT_TASK_BUTTON:["ROLE_PERSON_TASK_WRITE"],REQUIRED_PERMISSIONS_CLOSE_TASK_BUTTON:["ROLE_PERSON_TASK_WRITE"],REQUIRED_PERMISSIONS_DELETE_TASK_BUTTON:["ROLE_PERSON_TASK_DELETE"],REQUIRED_PERMISSIONS_ACTION_PLAN_GOALS_PANEL:["ROLE_PERSON_TASK_READ"],REQUIRED_PERMISSIONS_ADD_GOAL_BUTTON:["ROLE_PERSON_GOAL_WRITE"],REQUIRED_PERMISSIONS_EDIT_GOAL_BUTTON:["ROLE_PERSON_GOAL_WRITE"],REQUIRED_PERMISSIONS_DELETE_GOAL_BUTTON:["ROLE_PERSON_GOAL_DELETE"],REQUIRED_PERMISSIONS_ACTION_PLAN_STRENGTHS_PANEL:["ROLE_PERSON_READ"],REQUIRED_PERMISSIONS_ACTION_PLAN_STRENGTHS_FIELD:["ROLE_PERSON_WRITE"],REQUIRED_PERMISSIONS_SAVE_STRENGTHS_BUTTON:["ROLE_PERSON_WRITE"],REQUIRED_PERMISSIONS_JOURNAL_TOOL:["ROLE_PERSON_JOURNAL_ENTRY_READ"],REQUIRED_PERMISSIONS_ADD_JOURNAL_ENTRY_BUTTON:["ROLE_PERSON_JOURNAL_ENTRY_WRITE"],REQUIRED_PERMISSIONS_EDIT_JOURNAL_ENTRY_BUTTON:["ROLE_PERSON_JOURNAL_ENTRY_WRITE"],REQUIRED_PERMISSIONS_DELETE_JOURNAL_ENTRY_BUTTON:["ROLE_PERSON_JOURNAL_ENTRY_DELETE"],REQUIRED_PERMISSIONS_EARLYALERT_TOOL:["ROLE_PERSON_EARLY_ALERT_READ","ROLE_PERSON_EARLY_ALERT_RESPONSE_READ"],REQUIRED_PERMISSIONS_RESPOND_EARLY_ALERT_BUTTON:["ROLE_PERSON_EARLY_ALERT_RESPONSE_WRITE"],REQUIRED_PERMISSIONS_EARLY_ALERT_DETAILS_BUTTON:["ROLE_PERSON_EARLY_ALERT_READ","ROLE_PERSON_EARLY_ALERT_RESPONSE_READ"],REQUIRED_PERMISSIONS_STUDENTINFORMATIONSYSTEM_TOOL:["ROLE_PERSON_READ"],REQUIRED_PERMISSIONS_DISABILITYINTAKE_TOOL:["ROLE_DISABILITY_INTAKE_READ"],REQUIRED_PERMISSIONS_DISABILITY_INTAKE_SAVE_BUTTON:["ROLE_DISABILITY_INTAKE_WRITE"],REQUIRED_PERMISSIONS_DISABILITY_INTAKE_CANCEL_BUTTON:["ROLE_DISABILITY_INTAKE_WRITE"],REQUIRED_PERMISSIONS_SELF_HELP_GUIDE_EDIT_BUTTON:["ROLE_SELF_HELP_GUIDE_ADMIN_READ"],REQUIRED_PERMISSIONS_SELF_HELP_GUIDE_DELETE_BUTTON:["ROLE_SELF_HELP_GUIDE_ADMIN_WRITE"],REQUIRED_PERMISSIONS_SELF_HELP_GUIDE_ADD_BUTTON:["ROLE_SELF_HELP_GUIDE_ADMIN_WRITE"],REQUIRED_PERMISSIONS_SELF_HELP_GUIDE_SAVE_BUTTON:["ROLE_SELF_HELP_GUIDE_ADMIN_WRITE"]},hasAccess:function(c){var b=this.get("objectPermissionsCollection");var a=b.findBy(function(e,d){if(c==e.get("name")){return true}});return((a!=null)?a.get("hasAccess"):false)},setObjectPermissions:function(){var f=this;var b=new Ext.util.MixedCollection();var d=new RegExp(/REQUIRED_PERMISSIONS/);var a,e,c;for(prop in Ssp.model.AuthenticatedPerson){if(prop.search(d)!=-1){c=Ssp.model.AuthenticatedPerson[prop];e=f.hasRequiredPermissions(c);a=new Ssp.model.ObjectPermission;a.set("name",prop.replace("REQUIRED_PERMISSIONS_",""));a.set("hasAccess",e);b.add(a)}}f.set("objectPermissionsCollection",b)},hasRequiredPermissions:function(b){var a=new Array();Ext.Array.each(b,function(c){if(this.hasPermission(c)==true){a.push(true)}},this);return((a.length==b.length)?true:false)},hasPermission:function(a){return Ext.Array.contains(this.get("permissions"),a)},hasConfidentialityLevel:function(d){var b=this;var c=new Array();var a=b.get("confidentialityLevels");Ext.Array.each(a,function(e){if(e.id==d){c.push(d)}},b);return((c.length==0)?false:true)},applyConfidentialityLevelsFilter:function(a){var c=this;var d=[];var b;b=new Ext.util.Filter({filterFn:function(e){return this.hasConfidentialityLevel(e.get("id"))},scope:c});d.push(b);a.filter(d)},showUnauthorizedAccessAlert:function(){Ext.Msg.alert(this.getUnauthorizedAccessAlertTitle(),this.getUnauthorizedAccessAlertMessage())},showDeveloperRestrictedContentAlert:function(){Ext.Msg.alert("WARNING","Access to this information has been restricted due to the sensitive nature of the information and it's impact on the SSP System. Please see your system administrator if you need to make changes to this information.")},isDeveloperRestrictedContent:function(b){var a=false;if(b instanceof Ssp.model.reference.ConfidentialityLevel){a=true}return a}});Ext.define("Ssp.model.Person",{extend:"Ssp.model.AbstractBase",fields:[{name:"photoUrl",type:"string"},{name:"schoolId",type:"string"},{name:"firstName",type:"string"},{name:"middleName",type:"string"},{name:"lastName",type:"string"},{name:"homePhone",type:"string"},{name:"cellPhone",type:"string"},{name:"workPhone",type:"string"},{name:"nonLocalAddress",type:"boolean",useNull:true},{name:"addressLine1",type:"string"},{name:"addressLine2",type:"string"},{name:"city",type:"string"},{name:"state",type:"string"},{name:"zipCode",type:"string"},{name:"alternateAddressInUse",type:"boolean",useNull:true},{name:"alternateAddressLine1",type:"string"},{name:"alternateAddressLine2",type:"string"},{name:"alternateAddressCity",type:"string"},{name:"alternateAddressState",type:"string"},{name:"alternateAddressZipCode",type:"string"},{name:"alternateAddressCountry",type:"string"},{name:"primaryEmailAddress",type:"string"},{name:"secondaryEmailAddress",type:"string"},{name:"birthDate",type:"date",dateFormat:"time"},{name:"username",type:"string"},{name:"enabled",type:"boolean",defaultValue:true},{name:"coach",type:"auto"},{name:"strengths",type:"string"},{name:"studentType",type:"auto"},{name:"abilityToBenefit",type:"boolean"},{name:"anticipatedStartTerm",type:"string"},{name:"anticipatedStartYear",type:"string"},{name:"actualStartTerm",type:"string"},{name:"actualStartYear",type:"string"},{name:"studentIntakeRequestDate",type:"date",dateFormat:"time"},{name:"specialServiceGroups",type:"auto"},{name:"referralSources",type:"auto"},{name:"serviceReasons",type:"auto"},{name:"studentIntakeCompleteDate",type:"date",dateFormat:"time"},{name:"currentProgramStatusName",type:"auto"},{name:"registeredForCurrentTerm",type:"string"}],getFullName:function(){var c=this.get("firstName")||"";var b=this.get("middleName")||"";var a=this.get("lastName")||"";return c+" "+b+" "+a},getFormattedBirthDate:function(){return Ext.util.Format.date(this.get("birthDate"),"m/d/Y")},getFormattedStudentIntakeRequestDate:function(){return Ext.util.Format.date(this.get("studentIntakeRequestDate"),"m/d/Y")},getCoachId:function(){var a=this.get("coach");return((a!=null)?a.id:"")},setCoachId:function(a){if(a!=""){if(this.get("coach")!=null){this.set("coach",{id:a})}}},getCoachFullName:function(){var a=this.get("coach");return((a!=null)?a.firstName+" "+a.lastName:"")},getCoachWorkPhone:function(){var a=this.get("coach");return((a!=null)?a.workPhone:"")},getCoachPrimaryEmailAddress:function(){var a=this.get("coach");return((a!=null)?a.primaryEmailAddress:"")},getCoachOfficeLocation:function(){var a=this.get("coach");return((a!=null)?a.officeLocation:"")},getCoachDepartmentName:function(){var a=this.get("coach");return((a!=null)?a.departmentName:"")},getStudentTypeId:function(){var a=this.get("studentType");return((a!=null)?a.id:"")},getStudentTypeName:function(){var a=this.get("studentType");return((a!=null)?a.name:"")},setStudentTypeId:function(b){var a=this;if(b!=""){if(a.get("studentType")!=null){a.set("studentType",{id:b})}}},getProgramStatusName:function(){return this.get("currentProgramStatusName")?this.get("currentProgramStatusName"):""},buildAddress:function(){var b=this;var a="";a+=((b.get("addressLine1")!=null)?b.get("addressLine1")+"<br/>":"");a+=((b.get("city")!=null)?b.get("city")+", ":"");a+=((b.get("state")!=null)?b.get("state")+"<br/>":"");a+=((b.get("zipCode")!=null)?b.get("zipCode"):"");if(a.length<30){a=""}return a},buildAlternateAddress:function(){var a=this;var b="";b+=((a.get("alternateAddressLine1")!=null)?a.get("alternateAddressLine1")+"<br/>":"");b+=((a.get("alternateAddressCity")!=null)?a.get("alternateAddressCity"):"");b+=((a.get("alternateAddressState")!=null)?", "+a.get("alternateAddressState")+"<br/>":"");b+=((a.get("alternateAddressZipCode")!=null)?a.get("alternateAddressZipCode"):"<br />");b+=((a.get("alternateAddressCountry")!=null)?", "+a.get("alternateAddressCountry"):"");if(b.length<30){b=""}return b},setPropsNullForSave:function(a){delete a.studentIntakeCompleteDate;delete a.currentProgramStatusName;if(a.studentType==""){a.studentType=null}if(a.coach==""){a.coach=null}if(a.serviceReasons==""){a.serviceReasons=null}if(a.specialServiceGroups==""){a.specialServiceGroups=null}if(a.referralSources==""){a.referralSources=null}if(a.username==""){a.username=a.firstName+"."+a.lastName}return a},populateFromExternalData:function(a){var b=this;b.set("photoUrl",a.photoUrl);b.set("schoolId",a.schoolId);b.set("firstName",a.firstName);b.set("middleName",a.middleName);b.set("lastName",a.lastName);b.set("anticipatedStartTerm",a.anticipatedStartTerm);b.set("anticipatedStartYear",a.anticipatedStartYear);b.set("homePhone",a.homePhone);b.set("cellPhone",a.cellPhone);b.set("workPhone",a.workPhone);b.set("addressLine1",a.addressLine1);b.set("addressLine2",a.addressLine2);b.set("city",a.city);b.set("state",a.state);b.set("zipCode",a.zipCode);b.set("primaryEmailAddress",a.primaryEmailAddress);b.set("secondaryEmailAddress",a.secondaryEmailAddress);b.set("birthDate",a.birthDate);b.set("username",a.username)}});Ext.define("Ssp.model.PersonAppointment",{extend:"Ssp.model.AbstractBase",fields:[{name:"startTime",type:"date",dateFormat:"time"},{name:"endTime",type:"date",dateFormat:"time"},{name:"attended",type:"boolean"}],setAppointment:function(a,c){var b=this;if(a!=null&&c!=null){b.set("startTime",a);b.set("endTime",c)}}});Ext.define("Ssp.model.Appointment",{extend:"Ssp.model.AbstractBase",mixins:["Deft.mixin.Injectable"],inject:{formUtils:"formRendererUtils"},fields:[{name:"appointmentDate",type:"date",dateFormat:"time"},{name:"startTime",type:"date",dateFormat:"time"},{name:"endTime",type:"date",dateFormat:"time"}],getStartDate:function(){var b=this;var a=b.get("appointmentDate");a.setHours(b.get("startTime").getHours());a.setMinutes(b.get("startTime").getMinutes());return a},getEndDate:function(){var a=this;var b=a.get("appointmentDate");b.setHours(a.get("endTime").getHours());b.setMinutes(a.get("endTime").getMinutes());return b}});Ext.define("Ssp.model.PersonGoal",{extend:"Ssp.model.AbstractBase",fields:[{name:"name",type:"string"},{name:"description",type:"string"},{name:"confidentialityLevel",convert:function(c,a){var b=Ssp.util.Constants.DEFAULT_SYSTEM_CONFIDENTIALITY_LEVEL_ID;var d={id:b,name:""};if(c!=null){if(c!=""){d.id=c.id;d.name=c.name}}return d}}]});Ext.define("Ssp.model.PersonDocument",{extend:"Ssp.model.AbstractBase",fields:[{name:"name",type:"string"},{name:"note",type:"string"},{name:"confidentialityLevel",type:"auto"}]});Ext.define("Ssp.model.PersonProgramStatus",{extend:"Ssp.model.AbstractBase",fields:[{name:"programStatusId",type:"string"},{name:"effectiveDate",type:"date",dateFormat:"time"},{name:"expirationDate",type:"date",dateFormat:"time",defaultValue:null},{name:"programStatusChangeReasonId",type:"string",defaultValue:null}]});Ext.define("Ssp.model.tool.studentintake.PersonDemographics",{extend:"Ssp.model.AbstractBase",fields:[{name:"personId",type:"string"},{name:"coachId",type:"string"},{name:"maritalStatusId",type:"string"},{name:"citizenshipId",type:"string"},{name:"ethnicityId",type:"string"},{name:"militaryAffiliationId",type:"string"},{name:"veteranStatusId",type:"string"},{name:"primaryCaregiver",type:"boolean"},{name:"childCareNeeded",type:"boolean"},{name:"employed",type:"boolean"},{name:"numberOfChildren",type:"int"},{name:"countryOfResidence",type:"string"},{name:"paymentStatus",type:"string"},{name:"gender",type:"string"},{name:"countryOfCitizenship",type:"string"},{name:"childAges",type:"string"},{name:"placeOfEmployment",type:"string"},{name:"shift",type:"string"},{name:"wage",type:"string"},{name:"totalHoursWorkedPerWeek",type:"int"},{name:"local",type:"string"},{name:"childCareArrangementId",type:"string"}]});Ext.define("Ssp.model.tool.studentintake.PersonEducationGoal",{extend:"Ssp.model.AbstractBase",fields:[{name:"personId",type:"string"},{name:"educationGoalId",type:"string"},{name:"description",type:"string"},{name:"plannedMajor",type:"string"},{name:"howSureAboutMajor",type:"int"},{name:"careerDecided",type:"boolean"},{name:"plannedOccupation",type:"string"},{name:"howSureAboutOccupation",type:"int"},{name:"confidentInAbilities",type:"boolean"},{name:"additionalAcademicProgramInformationNeeded",type:"boolean"}]});Ext.define("Ssp.model.tool.studentintake.PersonEducationPlan",{extend:"Ssp.model.AbstractBase",fields:[{name:"personId",type:"string"},{name:"studentStatusId",type:"string"},{name:"newOrientationComplete",type:"boolean"},{name:"registeredForClasses",type:"boolean"},{name:"specialNeeds",type:"boolean"},{name:"gradeTypicallyEarned",type:"string"},{name:"collegeDegreeForParents",type:"boolean"}]});Ext.define("Ssp.model.tool.actionplan.Task",{extend:"Ssp.model.AbstractBase",fields:[{name:"name",type:"string"},{name:"description",type:"string"},{name:"dueDate",type:"date",dateFormat:"time"},{name:"reminderSentDate",type:"date",dateFormat:"time"},{name:"confidentialityLevel",convert:function(c,a){var b=Ssp.util.Constants.DEFAULT_SYSTEM_CONFIDENTIALITY_LEVEL_ID;var d={id:b,name:""};if(c!=null){if(c!=""){d.id=c.id;d.name=c.name}}return d}},{name:"deletable",type:"boolean"},{name:"completed",type:"boolean"},{name:"completedDate",type:"date",dateFormat:"time"},{name:"challengeId",type:"string"},{name:"type",type:"string"},{name:"personId",type:"string"}]});Ext.define("Ssp.model.tool.earlyalert.PersonEarlyAlert",{extend:"Ssp.model.AbstractBase",fields:[{name:"personId",type:"string"},{name:"courseName",type:"string"},{name:"courseTitle",type:"string"},{name:"emailCC",type:"string"},{name:"campusId",type:"string"},{name:"earlyAlertReasonId",type:"string"},{name:"earlyAlertReasonIds",type:"string"},{name:"earlyAlertReasonOtherDescription",type:"string"},{name:"earlyAlertSuggestionIds",type:"auto"},{name:"earlyAlertSuggestionOtherDescription",type:"string"},{name:"comment",type:"string"},{name:"closedDate",type:"date",dateFormat:"time"},{name:"closedById",type:"string"},{name:"sendEmailToStudent",type:"boolean"}]});Ext.define("Ssp.model.tool.earlyalert.PersonEarlyAlertTree",{extend:"Ssp.model.AbstractBase",fields:[{name:"personId",type:"string"},{name:"courseName",type:"string"},{name:"courseTitle",type:"string"},{name:"emailCC",type:"string"},{name:"campusId",type:"string"},{name:"earlyAlertReasonId",type:"string"},{name:"earlyAlertReasonIds",type:"auto"},{name:"earlyAlertReasonOtherDescription",type:"string"},{name:"earlyAlertSuggestionIds",type:"auto"},{name:"earlyAlertSuggestionOtherDescription",type:"string"},{name:"comment",type:"string"},{name:"closedDate",type:"date",dateFormat:"time"},{name:"closedById",type:"string"},{name:"sendEmailToStudent",type:"boolean"},{name:"iconCls",type:"string"},{name:"leaf",type:"boolean",defaultValue:false},{name:"expanded",type:"boolean"},{name:"text",type:"string"},{name:"nodeType",type:"string",defaultValue:"early alert"},{name:"gridDisplayDetails",type:"string"},{name:"earlyAlertId",type:"string"},{name:"earlyAlertOutcomeId",type:"string"},{name:"earlyAlertOutcomeOtherDescription",type:"string"},{name:"earlyAlertReferralIds",type:"auto"},{name:"earlyAlertOutreachIds",type:"auto"},{name:"comment",type:"string"}]});Ext.define("Ssp.model.tool.earlyalert.EarlyAlertResponse",{extend:"Ssp.model.AbstractBase",fields:[{name:"earlyAlertId",type:"string"},{name:"earlyAlertOutcomeId",type:"string"},{name:"earlyAlertOutcomeOtherDescription",type:"string"},{name:"earlyAlertReferralIds",type:"auto"},{name:"earlyAlertOutreachIds",type:"auto"},{name:"comment",type:"string"}]});Ext.define("Ssp.model.tool.journal.JournalEntry",{extend:"Ssp.model.AbstractBase",fields:[{name:"comment",type:"string"},{name:"entryDate",type:"date",dateFormat:"time",defaultValue:new Date()},{name:"confidentialityLevel",convert:function(c,a){var b=Ssp.util.Constants.DEFAULT_SYSTEM_CONFIDENTIALITY_LEVEL_ID;var d={id:b,name:""};if(c!=null){if(c!=""){d.id=c.id;d.name=c.name}}return d}},{name:"journalSource",type:"auto"},{name:"journalTrack",type:"auto"},{name:"journalEntryDetails",type:"auto",defaultValue:[]}],getConfidentialityLevelId:function(){return this.get("confidentialityLevel").id},addJournalDetail:function(c,b){var a=false;Ext.Array.each(this.get("journalEntryDetails"),function(e,d){if(e.journalStep.id==c.id){a=true;e.journalStepDetails.push(b)}});if(a==false){this.addJournalStep(c,b)}},removeJournalDetail:function(b,a){Ext.Array.each(this.get("journalEntryDetails"),function(d,c){if(d.journalStep.id==b.id){Ext.Array.each(d.journalStepDetails,function(e,f){if(e.id==a.id){Ext.Array.remove(d.journalStepDetails,e)}},this);if(d.journalStepDetails.length<1){this.removeJournalStep(b)}}},this)},addJournalStep:function(b,a){this.get("journalEntryDetails").push({journalStep:b,journalStepDetails:[a]})},removeJournalStep:function(a){var b=this.get("journalEntryDetails");Ext.Array.each(b,function(d,c){if(d.journalStep.id==a.id){Ext.Array.remove(b,d)}})},removeAllJournalEntryDetails:function(){this.set("journalEntryDetails",[])},getGroupedDetails:function(){var a=[];var b=this.get("journalEntryDetails");Ext.Array.each(b,function(e,c){var f=e.journalStep.name;var d=e.journalStepDetails;Ext.Array.each(d,function(h,g){h.group=f;a.push(h)},this)},this);return a},clearGroupedDetails:function(a){Ext.Array.each(a,function(d,b){var c=d.journalStepDetails;Ext.Array.each(c,function(f,e){delete f.group},this)},this);return a}});Ext.define("Ssp.model.reference.Challenge",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"tags",type:"string"},{name:"showInStudentIntake",type:"boolean"},{name:"showInSelfHelpSearch",type:"boolean"},{name:"selfHelpGuideQuestion",type:"string"},{name:"selfHelpGuideDescription",type:"string"},{name:"defaultConfidentialityLevelId",type:"string"},{name:"referralCount",type:"int"}]});Ext.define("Ssp.model.reference.ChallengeCategory",{extend:"Ssp.model.reference.AbstractReference",fields:[],constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+"challengeCategory/"})}});Ext.define("Ssp.model.reference.ChallengeReferral",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"publicDescription",type:"string"},{name:"showInSelfHelpGuide",type:"boolean"}]});Ext.define("Ssp.model.reference.JournalTrack",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.JournalStep",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"usedForTransition",type:"boolean"}]});Ext.define("Ssp.model.reference.JournalStepDetail",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.ConfidentialityLevel",{extend:"Ssp.model.reference.AbstractReference",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},fields:[{name:"acronym",type:"string",defaultValue:"DEFAULT"}],constructor:function(){Ext.apply(this.getProxy(),{url:this.apiProperties.createUrl(this.apiProperties.getItemUrl("confidentialityLevel"))});return this.callParent(arguments)},proxy:{type:"rest",url:"",actionMethods:{create:"POST",read:"GET",update:"PUT",destroy:"DELETE"},reader:{type:"json",successProperty:"success",message:"message"},writer:{type:"json",successProperty:"success"}}});Ext.define("Ssp.model.reference.ConfidentialityDisclosureAgreement",{extend:"Ssp.model.reference.AbstractReference",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},fields:[{name:"text",type:"string"}],constructor:function(){Ext.apply(this.getProxy(),{url:this.apiProperties.createUrl(this.apiProperties.getItemUrl("confidentialityDisclosureAgreement"))});return this.callParent(arguments)},proxy:{type:"rest",url:"",actionMethods:{create:"POST",read:"GET",update:"PUT",destroy:"DELETE"},reader:{type:"json"},writer:{type:"json",successProperty:"success"}}});Ext.define("Ssp.store.Coaches",{extend:"Ext.data.Store",model:"Ssp.model.Coach",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){var a=this;Ext.apply(a,{proxy:a.apiProperties.getProxy(a.apiProperties.getItemUrl("personCoach")+"/?sort=lastName"),autoLoad:false,pageSize:1000,params:{page:0,start:0,limit:1000}});return a.callParent(arguments)}});Ext.define("Ssp.store.Goals",{extend:"Ext.data.Store",model:"Ssp.model.PersonGoal",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){Ext.apply(this,{proxy:this.apiProperties.getProxy(this.apiProperties.getItemUrl("personGoal")),autoLoad:false});return this.callParent(arguments)},});Ext.define("Ssp.store.JournalEntries",{extend:"Ext.data.Store",model:"Ssp.model.tool.journal.JournalEntry",mixins:["Deft.mixin.Injectable"],inject:{currentPerson:"currentPerson",apiProperties:"apiProperties"},constructor:function(){Ext.apply(this,{proxy:this.apiProperties.getProxy(this.apiProperties.getItemUrl("personJournalEntry")),autoLoad:false});return this.callParent(arguments)},});Ext.define("Ssp.store.EarlyAlerts",{extend:"Ext.data.Store",model:"Ssp.model.tool.earlyalert.PersonEarlyAlert",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){Ext.apply(this,{proxy:this.apiProperties.getProxy(this.apiProperties.getItemUrl("personEarlyAlert")),autoLoad:false});return this.callParent(arguments)}});Ext.define("Ssp.store.Documents",{extend:"Ext.data.Store",model:"Ssp.model.PersonDocument",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){Ext.apply(this,{proxy:this.apiProperties.getProxy(this.apiProperties.getItemUrl("personDocument")),autoLoad:false});return this.callParent(arguments)}});Ext.define("Ssp.store.reference.AnticipatedStartTerms",{extend:"Ext.data.Store",model:"Ssp.model.reference.AbstractReference",autoLoad:false,constructor:function(){return this.callParent(arguments)},data:[{name:"FA",description:"FA"},{name:"WI",description:"WI"},{name:"SP",description:"SP"},{name:"SU",description:"SU"}]});Ext.define("Ssp.store.reference.Challenges",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.Challenge",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("challenge")})}});Ext.define("Ssp.store.reference.ChallengeCategories",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.ChallengeCategory",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("category")})}});Ext.define("Ssp.store.reference.ChallengeReferrals",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.ChallengeReferral",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("challengeReferral")})}});Ext.define("Ssp.store.reference.ConfidentialityLevels",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.ConfidentialityLevel",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("confidentialityLevel")})}});Ext.define("Ssp.store.reference.Genders",{extend:"Ext.data.Store",model:"Ssp.model.reference.Gender",autoLoad:false});Ext.define("Ssp.store.reference.JournalStepDetails",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.JournalStepDetail",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("journalStepDetail")})}});Ext.define("Ssp.store.reference.JournalSteps",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.JournalStep",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("journalStep")})}});Ext.define("Ssp.store.reference.JournalTracks",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.JournalTrack",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("journalTrack")})}});Ext.define("Ssp.store.People",{extend:"Ext.data.Store",model:"Ssp.model.Person",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){Ext.apply(this,{proxy:this.apiProperties.getProxy(this.apiProperties.getItemUrl("person")),autoLoad:false});return this.callParent(arguments)}});Ext.define("Ssp.store.reference.States",{extend:"Ext.data.Store",model:"Ssp.model.reference.State",autoLoad:false});Ext.define("Ssp.store.Students",{extend:"Ext.data.Store",model:"Ssp.model.Person",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){Ext.apply(this,{proxy:this.apiProperties.getProxy(this.apiProperties.getItemUrl("person")),autoLoad:false});return this.callParent(arguments)}});Ext.define("Ssp.store.Tools",{extend:"Ext.data.Store",mixins:["Deft.mixin.Injectable"],inject:{authenticatedPerson:"authenticatedPerson"},model:"Ssp.model.Tool",autoLoad:false,constructor:function(){var a=this;a.callParent(arguments);var b=[{group:"beta",name:"Profile",toolType:"profile",active:true},{group:"beta",name:"Student Intake",toolType:"studentintake",active:true},{group:"beta",name:"Action Plan",toolType:"actionplan",active:true},{group:"beta",name:"Journal",toolType:"journal",active:true},{group:"rc1",name:"Early Alert",toolType:"earlyalert",active:true},{group:"rc1",name:"Disability Intake",toolType:"disabilityintake",active:true}];a.loadData(a.applySecurity(b));return a},applySecurity:function(c){var b=this;var a=[];Ext.Array.each(c,function(f,e){var d=f.toolType.toUpperCase()+"_TOOL";if(b.authenticatedPerson.hasAccess(d)){a.push(f)}});return a}});Ext.define("Ssp.store.reference.YesNo",{extend:"Ext.data.Store",model:"Ssp.model.reference.AbstractReference",constructor:function(){var a=[{id:"Y",name:"Yes"},{id:"N",name:"No"}];Ext.apply(this,{items:a});Ext.apply(this,{autoLoad:false});this.callParent(arguments)}});Ext.define("Ssp.controller.admin.crg.AssociateChallengeCategoriesAdminViewController",{extend:"Ssp.controller.admin.AdminItemAssociationViewController",config:{associatedItemType:"challenge",parentItemType:"category",parentIdAttribute:"categoryId",associatedItemIdAttribute:"challengeId"},constructor:function(){this.callParent(arguments);this.clear();this.getParentItems();return this}});Ext.define("Ssp.view.admin.forms.crg.AssociateChallengeCategoriesAdmin",{extend:"Ext.tree.Panel",alias:"widget.displaychallengecategoriesadmin",title:"Challenge Category Associations",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.crg.AssociateChallengeCategoriesAdminViewController",inject:{authenticatedPerson:"authenticatedPerson",store:"treeStore"},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{singleExpand:true,store:a.store,useArrows:true,rootVisible:false,singleExpand:true,viewConfig:{plugins:{ptype:"treeviewdragdrop",dropGroup:"gridtotree",enableDrop:true}},dockedItems:[{dock:"top",xtype:"toolbar",items:[{tooltip:"Delete selected association",text:"Delete Associations",hidden:!a.authenticatedPerson.hasAccess("CHALLENGE_CATEGORIES_ASSOCIATION_ADMIN_DELETE_BUTTON"),xtype:"button",itemId:"deleteAssociationButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.controller.admin.crg.AssociateChallengeReferralsAdminViewController",{extend:"Ssp.controller.admin.AdminItemAssociationViewController",config:{associatedItemType:"challengeReferral",parentItemType:"challenge",parentIdAttribute:"challengeId",associatedItemIdAttribute:"challengeReferralId"},constructor:function(){var a=this;a.callParent(arguments);a.clear();a.getParentItems();return a}});Ext.define("Ssp.view.admin.forms.crg.AssociateChallengeReferralsAdmin",{extend:"Ext.tree.Panel",alias:"widget.displaychallengereferralsadmin",title:"Challenge Referral Associations",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.crg.AssociateChallengeReferralsAdminViewController",inject:{authenticatedPerson:"authenticatedPerson",store:"treeStore"},viewConfig:{plugins:{ptype:"treeviewdragdrop"}},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,store:a.store,useArrows:true,rootVisible:false,singleExpand:true,viewConfig:{plugins:{ptype:"treeviewdragdrop",dropGroup:"gridtotree",enableDrop:true}},dockedItems:[{dock:"top",xtype:"toolbar",items:[{tooltip:"Delete selected association",text:"Delete Associations",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("CHALLENGE_REFERRALS_ASSOCIATION_ADMIN_DELETE_BUTTON"),itemId:"deleteAssociationButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.controller.admin.journal.AssociateTrackStepsAdminViewController",{extend:"Ssp.controller.admin.AdminItemAssociationViewController",config:{associatedItemType:"journalStep",parentItemType:"journalTrack",parentIdAttribute:"journalTrackId",associatedItemIdAttribute:"journalStepId"},constructor:function(){this.callParent(arguments);this.clear();this.getParentItems();return this}});Ext.define("Ssp.view.admin.forms.journal.AssociateTrackStepsAdmin",{extend:"Ext.tree.Panel",alias:"widget.associatetrackstepsadmin",title:"Track Steps Associations",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.journal.AssociateTrackStepsAdminViewController",inject:{authenticatedPerson:"authenticatedPerson",store:"treeStore"},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{store:a.store,useArrows:true,rootVisible:false,singleExpand:true,viewConfig:{plugins:{ptype:"treeviewdragdrop",dropGroup:"gridtotree",enableDrop:true}},dockedItems:[{dock:"top",xtype:"toolbar",items:[{tooltip:"Delete selected association",text:"Delete Associations",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("TRACK_STEP_ASSOCIATION_ADMIN_DELETE_BUTTON"),itemId:"deleteAssociationButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.controller.admin.journal.AssociateStepDetailsAdminViewController",{extend:"Ssp.controller.admin.AdminItemAssociationViewController",config:{associatedItemType:"journalStepDetail",parentItemType:"journalStep",parentIdAttribute:"journalStepId",associatedItemIdAttribute:"journalStepDetailId"},constructor:function(){var a=this;a.callParent(arguments);a.clear();a.getParentItems();return a}});Ext.define("Ssp.view.admin.forms.journal.AssociateStepDetailsAdmin",{extend:"Ext.tree.Panel",alias:"widget.associatestepdetailsadmin",title:"Step Details Associations",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.journal.AssociateStepDetailsAdminViewController",inject:{authenticatedPerson:"authenticatedPerson",store:"treeStore"},viewConfig:{plugins:{ptype:"treeviewdragdrop"}},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,store:a.store,useArrows:true,rootVisible:false,singleExpand:true,viewConfig:{plugins:{ptype:"treeviewdragdrop",dropGroup:"gridtotree",enableDrop:true}},dockedItems:[{dock:"top",xtype:"toolbar",items:[{tooltip:"Delete selected association",text:"Delete Associations",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("STEP_DETAIL_ASSOCIATION_ADMIN_DELETE_BUTTON"),itemId:"deleteAssociationButton"}]}]});return a.callParent(arguments)}});Ext.define("Ssp.model.tool.actionplan.TaskGroup",{extend:"Ssp.model.tool.actionplan.Task",fields:[{name:"group",type:"string"}]});Ext.define("Ssp.store.Tasks",{extend:"Ext.data.Store",model:"Ssp.model.tool.actionplan.TaskGroup",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties"},constructor:function(){Ext.apply(this,{proxy:this.apiProperties.getProxy(this.apiProperties.getItemUrl("personTaskGroup")),autoLoad:false});return this.callParent(arguments)},groupField:"group"});Ext.define("Ssp.model.reference.EmploymentShift",{extend:"Ssp.model.reference.AbstractReference",fields:["code","title"]});Ext.define("Ssp.store.reference.EmploymentShifts",{extend:"Ext.data.Store",model:"Ssp.model.reference.EmploymentShift",autoLoad:false});Ext.define("Ssp.model.reference.Campus",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"earlyAlertCoordinatorId",type:"string"}]});Ext.define("Ssp.model.reference.CampusEarlyAlertRouting",{extend:"Ssp.model.AbstractBase",fields:[{name:"earlyAlertReasonId",type:"string"},{name:"person",type:"auto"},{name:"groupName",type:"string"},{name:"groupEmail",type:"string"}],getPersonFullName:function(){var b=this;var a;var c="";if(b.get("person")!=null){a=b.get("person");c=a.firstName+" "+a.lastName}return c}});Ext.define("Ssp.model.reference.ChildCareArrangement",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.Citizenship",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.EarlyAlertOutcome",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"sortOrder",type:"int"}]});Ext.define("Ssp.model.reference.EarlyAlertOutreach",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"sortOrder",type:"int"}]});Ext.define("Ssp.model.reference.EarlyAlertReason",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"sortOrder",type:"int"}]});Ext.define("Ssp.model.reference.EarlyAlertReferral",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"acronym",type:"string"},{name:"sortOrder",type:"int"}]});Ext.define("Ssp.model.reference.EarlyAlertSuggestion",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"sortOrder",type:"int"}]});Ext.define("Ssp.model.reference.Ethnicity",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.FundingSource",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.JournalSource",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.MaritalStatus",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.ProgramStatus",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"programStatusChangeReasonRequired",type:"boolean"}]});Ext.define("Ssp.model.reference.ProgramStatusChangeReason",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.ReferralSource",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.ServiceReason",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.SpecialServiceGroup",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.StudentStatus",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.model.reference.StudentType",{extend:"Ssp.model.reference.AbstractReference",fields:[{name:"requireInitialAppointment",type:"boolean"}]});Ext.define("Ssp.model.reference.VeteranStatus",{extend:"Ssp.model.reference.AbstractReference",fields:[]});Ext.define("Ssp.store.reference.Campuses",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.Campus",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("campus")})}});Ext.define("Ssp.store.reference.CampusEarlyAlertRoutings",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.CampusEarlyAlertRouting",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("campusEarlyAlertRouting")})}});Ext.define("Ssp.store.reference.ChildCareArrangements",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.ChildCareArrangement",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("childCareArrangement")})}});Ext.define("Ssp.store.reference.Citizenships",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.Citizenship",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("citizenship")})}});Ext.define("Ssp.store.reference.EarlyAlertOutcomes",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.EarlyAlertOutcome",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("earlyAlertOutcome")})}});Ext.define("Ssp.store.reference.EarlyAlertOutreaches",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.EarlyAlertOutreach",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("earlyAlertOutreach")})}});Ext.define("Ssp.store.reference.EarlyAlertReasons",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.EarlyAlertReason",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("earlyAlertReason")})}});Ext.define("Ssp.store.reference.EarlyAlertReferrals",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.EarlyAlertReferral",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("earlyAlertReferral")})}});Ext.define("Ssp.store.reference.EarlyAlertSuggestions",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.EarlyAlertSuggestion",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("earlyAlertSuggestion")})}});Ext.define("Ssp.store.reference.Ethnicities",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.Ethnicity",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("ethnicity")})}});Ext.define("Ssp.store.reference.FundingSources",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.FundingSource",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("fundingSource")})}});Ext.define("Ssp.store.reference.JournalSources",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.JournalSource",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("journalSource")})}});Ext.define("Ssp.store.reference.MaritalStatuses",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.MaritalStatus",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("maritalStatus")})}});Ext.define("Ssp.store.reference.ProgramStatuses",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.ProgramStatus",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("programStatus")})}});Ext.define("Ssp.store.reference.ProgramStatusChangeReasons",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.ProgramStatusChangeReason",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("programStatusChangeReason")})}});Ext.define("Ssp.store.reference.ReferralSources",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.ReferralSource",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("referralSource")})}});Ext.define("Ssp.store.reference.ServiceReasons",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.ServiceReason",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("serviceReason")})}});Ext.define("Ssp.store.reference.SpecialServiceGroups",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.SpecialServiceGroup",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("specialServiceGroup")})}});Ext.define("Ssp.store.reference.StudentStatuses",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.StudentStatus",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("studentStatus")})}});Ext.define("Ssp.store.reference.StudentTypes",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.StudentType",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("studentType")})}});Ext.define("Ssp.store.reference.VeteranStatuses",{extend:"Ssp.store.reference.AbstractReferences",model:"Ssp.model.reference.VeteranStatus",constructor:function(){this.callParent(arguments);Ext.apply(this.getProxy(),{url:this.getProxy().url+this.apiProperties.getItemUrl("veteranStatus")})}});Ext.define("Ssp.controller.tool.studentintake.EducationGoalsViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{formUtils:"formRendererUtils",model:"currentStudentIntake",sspConfig:"sspConfig"},control:{careerDecidedCheckOn:"#careerDecidedCheckOn",careerDecidedCheckOff:"#careerDecidedCheckOff",confidentInAbilitiesCheckOn:"#confidentInAbilitiesCheckOn",confidentInAbilitiesCheckOff:"#confidentInAbilitiesCheckOff",additionalAcademicProgramInformationNeededCheckOn:"#additionalAcademicProgramInformationNeededCheckOn",additionalAcademicProgramInformationNeededCheckOff:"#additionalAcademicProgramInformationNeededCheckOff"},init:function(){var d=this;var a=d.model.get("personEducationGoal");var b=d.model.get("personEducationGoal").get("careerDecided");var c=d.model.get("personEducationGoal").get("confidentInAbilities");var e=d.model.get("personEducationGoal").get("additionalAcademicProgramInformationNeeded");if(a!=null&&a!=undefined){d.getCareerDecidedCheckOn().setValue(b);d.getCareerDecidedCheckOff().setValue(!b);d.getConfidentInAbilitiesCheckOn().setValue(c);d.getConfidentInAbilitiesCheckOff().setValue(!c);d.getAdditionalAcademicProgramInformationNeededCheckOn().setValue(e);d.getAdditionalAcademicProgramInformationNeededCheckOff().setValue(!e)}return d.callParent(arguments)}});Ext.define("Ssp.view.tools.studentintake.EducationGoals",{extend:"Ext.form.Panel",alias:"widget.studentintakeeducationgoals",id:"StudentIntakeEducationGoals",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.tool.studentintake.EducationGoalsViewController",width:"100%",height:"100%",initComponent:function(){var a=this;Ext.apply(a,{autoScroll:true,bodyPadding:5,border:0,layout:"anchor",defaults:{anchor:"100%"},fieldDefaults:{msgTarget:"side",labelAlign:"right",labelWidth:200},defaultType:"radiogroup",items:[{xtype:"fieldset",border:0,title:"",id:"StudentIntakeEducationGoalsFieldSet",defaultType:"textfield",defaults:{anchor:"95%"},items:[{xtype:"radiogroup",id:"StudentIntakeEducationGoalsRadioGroup",fieldLabel:"Education/Career Goal",allowBlank:true,columns:1}]},{xtype:"fieldset",border:0,title:"",defaultType:"textfield",defaults:{anchor:"95%"},items:[{fieldLabel:"What is your planned major?",name:"plannedMajor"},{xtype:"radiogroup",fieldLabel:"How sure are you about your major?",columns:1,items:[{boxLabel:"Very Unsure",name:"howSureAboutMajor",inputValue:"1"},{boxLabel:"",name:"howSureAboutMajor",inputValue:"2"},{boxLabel:"",name:"howSureAboutMajor",inputValue:"3"},{boxLabel:"",name:"howSureAboutMajor",inputValue:"4"},{boxLabel:"Very Sure",name:"howSureAboutMajor",inputValue:"5"}]},{xtype:"radiogroup",fieldLabel:"Have you decided on a career/occupation?",columns:1,itemId:"careerDecided",items:[{boxLabel:"Yes",itemId:"careerDecidedCheckOn",name:"careerDecided",inputValue:"true"},{boxLabel:"No",itemId:"careerDecidedCheckOff",name:"careerDecided",inputValue:"false"}]},{fieldLabel:"What is your planned occupation?",name:"plannedOccupation"},{xtype:"radiogroup",fieldLabel:"How sure are you about your occupation?",columns:1,items:[{boxLabel:"Very Unsure",name:"howSureAboutOccupation",inputValue:"1"},{boxLabel:"",name:"howSureAboutOccupation",inputValue:"2"},{boxLabel:"",name:"howSureAboutOccupation",inputValue:"3"},{boxLabel:"",name:"howSureAboutOccupation",inputValue:"4"},{boxLabel:"Very Sure",name:"howSureAboutOccupation",inputValue:"5"}]},{xtype:"radiogroup",fieldLabel:"Are you confident your abilities are compatible with the career field?",columns:1,itemId:"confidentInAbilities",items:[{boxLabel:"Yes",itemId:"confidentInAbilitiesCheckOn",name:"confidentInAbilities",inputValue:"true"},{boxLabel:"No",itemId:"confidentInAbilitiesCheckOff",name:"confidentInAbilities",inputValue:"false"}]},{xtype:"radiogroup",fieldLabel:"Do you need additional information about which academic programs may lead to a future career?",columns:1,itemId:"additionalAcademicProgramInformationNeeded",items:[{boxLabel:"Yes",itemId:"additionalAcademicProgramInformationNeededCheckOn",name:"additionalAcademicProgramInformationNeeded",inputValue:"true"},{boxLabel:"No",itemId:"additionalAcademicProgramInformationNeededCheckOff",name:"additionalAcademicProgramInformationNeeded",inputValue:"false"}]}]}]});return a.callParent(arguments)}});Ext.define("Ssp.controller.admin.shg.EditSelfHelpGuideAvailableChallengesAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",store:"challengesStore",formUtils:"formRendererUtils",model:"currentChallenge"},config:{containerToLoadInto:"adminforms",formToDisplay:"editchallenge"},init:function(){var a=this;a.formUtils.reconfigureGridPanel(a.getView(),a.store);a.store.load();return a.callParent(arguments)},displayEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.shg.EditSelfHelpGuideChallengesViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",formUtils:"formRendererUtils",parent:"currentSelfHelpGuide",store:"selfHelpGuideQuestionsStore",model:"currentSelfHelpGuideQuestions"},config:{formToDisplay:"selfhelpguideadmin",containerToLoadInto:"adminforms"},control:{deleteChallengeButton:{click:"deleteConfirmation"},gridView:{refresh:"onRefresh",drop:"onDrop"},},init:function(){this.formUtils.reconfigureGridPanel(this.getView(),this.store);this.store.load({params:{selfReferenceGuideId:this.parent.data.id}});return this.callParent(arguments)},onRefresh:function(b,c,d,a){console.log("foo")},onDrop:function(a,c,f,h,j){var g=this.store.findRecord("id",c.records[0].data.id);var d=this.store.indexOf(g)+1;var e=new Ssp.model.tool.shg.SelfHelpGuideQuestions();e.data.critical=false;e.data.mandatory=false;e.data.name=g.data.name;e.data.challengeId=g.data.id;e.data.questionNumber=d;e.data.selfHelpGuideId=this.parent.data.id;if(g){this.store.data.replace(this.store.data.getKey(g),e);for(var b=0;b<this.store.data.items.length;b++){this.store.data.items[b].data.questionNumber=b+1}}else{this.store.data.add(e)}this.formUtils.reconfigureGridPanel(this.getView(),this.store)},deleteConfirmation:function(c){var f=this;var b=c.up("grid");var a=b.getStore();var d=b.getView().getSelectionModel().getSelection()[0];var e;if(d.get("id")){if(!Ssp.util.Constants.isRestrictedAdminItemId(d.get("id"))){e="You are about to delete "+d.get("name")+". Would you like to continue?";Ext.Msg.confirm({title:"Delete?",msg:e,buttons:Ext.Msg.YESNO,fn:f.deleteRecord,scope:f})}else{Ext.Msg.alert("WARNING","This item is related to core SSP functionality. Please see a developer to delete this item.")}}else{Ext.Msg.alert("SSP Error","Unable to delete item.")}},deleteRecord:function(f){var d=this;var b=d.getView();var a=b.getStore();var c=b.getView().getSelectionModel().getSelection()[0];var e=c.get("id");if(f=="yes"){d.apiProperties.makeRequest({url:a.getProxy().url+"/"+e,method:"DELETE",successFunc:function(g,h){a.remove(a.getById(e))}})}},onCancelClick:function(a){this.displayMain()},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.shg.EditSelfHelpGuideViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",formUtils:"formRendererUtils",model:"currentSelfHelpGuide",store:"selfHelpGuidesStore",questionStore:"selfHelpGuideQuestionsStore"},config:{containerToLoadInto:"adminforms",formToDisplay:"selfhelpguideadmin"},control:{saveButton:{click:"onSaveClick"},cancelButton:{click:"onCancelClick"}},init:function(){this.getView().getForm().loadRecord(this.model);return this.callParent(arguments)},onSaveClick:function(c){var e=this;var a,g,d,b,f;b=this.store.getProxy().url;this.getView().getForm().updateRecord();a=this.model;g=a.get("id");d=a.data;successFuncGetId=function(j,h){var l=Ext.decode(j.responseText);f=l.id;b=e.questionStore.getProxy().url;for(var k=0;k<e.questionStore.data.items.length;k++){d=e.questionStore.data.items[k].data;d.selfHelpGuideId=f;g=d.id;if(g.length>0){e.apiProperties.makeRequest({url:b+"/"+g,method:"PUT",jsonData:d,successFunc:successFunc})}else{e.apiProperties.makeRequest({url:b,method:"POST",jsonData:d,successFunc:successFunc})}}};successFunc=function(i,h){e.displayMain()};if(g.length>0){this.apiProperties.makeRequest({url:b+"/"+g,method:"PUT",jsonData:d,successFunc:successFuncGetId})}else{this.apiProperties.makeRequest({url:b,method:"POST",jsonData:d,successFunc:successFuncGetId})}},onCancelClick:function(a){this.displayMain()},displayMain:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.controller.admin.shg.SelfHelpGuideAdminViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{selfHelpGuidesStore:"selfHelpGuidesStore"},init:function(){this.selfHelpGuidesStore.load();return this.callParent(arguments)}});Ext.define("Ssp.controller.admin.shg.SelfHelpGuideEditAdminController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],init:function(){return this.callParent(arguments)}});Ext.define("Ssp.controller.admin.shg.SelfHelpGuideEditChallengesAdminController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],init:function(){return this.callParent(arguments)}});Ext.define("Ssp.controller.admin.shg.SelfHelpGuidesDisplayViewController",{extend:"Deft.mvc.ViewController",mixins:["Deft.mixin.Injectable"],inject:{apiProperties:"apiProperties",store:"selfHelpGuidesStore",selfHelpGuideQuestionsStore:"selfHelpGuideQuestionsStore",formUtils:"formRendererUtils",model:"currentSelfHelpGuide",},config:{containerToLoadInto:"adminforms",formToDisplay:"editselfhelpguide"},control:{editButton:{click:"onEditClick"},addButton:{click:"onAddClick"}},init:function(){var a=this;a.formUtils.reconfigureGridPanel(a.getView(),a.store);a.store.load();return a.callParent(arguments)},onEditClick:function(c){var b,a;b=c.up("grid");a=b.getView().getSelectionModel().getSelection()[0];if(a){this.model.data=a.data;this.displayEditor()}else{Ext.Msg.alert("SSP Error","Please select an item to edit.")}},onAddClick:function(b){var a=new Ssp.model.tool.shg.SelfHelpGuides();this.model.data=a.data;this.displayEditor()},displayEditor:function(){var a=this.formUtils.loadDisplay(this.getContainerToLoadInto(),this.getFormToDisplay(),true,{})}});Ext.define("Ssp.model.tool.shg.SelfHelpGuideQuestions",{extend:"Ssp.model.AbstractBase",fields:[{name:"id",type:"string"},{name:"name",type:"string"},{name:"questionNumber",type:"integer"},{name:"critical",type:"boolean"},{name:"mandatory",type:"boolean"},{name:"selfHelpGuideId",type:"string"},{name:"challengeId",type:"string"},]});Ext.define("Ssp.model.tool.shg.SelfHelpGuides",{extend:"Ssp.model.AbstractBase",fields:[{name:"id",type:"string"},{name:"name",type:"string"},{name:"description",type:"string"},{name:"active",type:"boolean"},{name:"authenticationRequired",type:"boolean"},{name:"threshold",type:"integer"},{name:"introductoryText",type:"string"},{name:"summaryText",type:"string"},{name:"summaryTextEarlyAlert",type:"string"},{name:"summaryTextThreshold",type:"string"},{name:"summaryTextEarlyAlert",type:"string"}]});Ext.define("Ssp.view.admin.forms.shg.EditSelfHelpGuide",{extend:"Ext.form.Panel",alias:"widget.editselfhelpguide",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.shg.SelfHelpGuideEditAdminController",height:"100%",width:"100%",layout:{type:"vbox",align:"stretch"},autoScroll:true,initComponent:function(){Ext.apply(this,{items:[{xtype:"editselfhelpguidedetails",flex:1},{xtype:"editselfhelpguideeditchallenges",flex:1}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.shg.EditSelfHelpGuideAvailableChallengesAdmin",{extend:"Ext.grid.Panel",alias:"widget.editselfhelpguideavailablechallengesadmin",title:"Available Challenges",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.shg.EditSelfHelpGuideAvailableChallengesAdminViewController",inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson",columnRendererUtils:"columnRendererUtils"},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{viewConfig:{plugins:{ptype:"gridviewdragdrop",dragGroup:"gridtogrid",enableDrag:true},},autoScroll:true,selType:"rowmodel",enableDragDrop:false,columns:[{header:"Name",dataIndex:"name",flex:1}],dockedItems:[{xtype:"pagingtoolbar",dock:"bottom",displayInfo:true,pageSize:a.apiProperties.getPagingSize()}]});return a.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.shg.EditSelfHelpGuideChallenges",{extend:"Ext.grid.Panel",alias:"widget.editselfhelpguidechallenges",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.shg.EditSelfHelpGuideChallengesViewController",title:"Assigned Challenges",inject:{selfHelpGuideQuestionsStore:"selfHelpGuideQuestionsStore",apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson",columnRendererUtils:"columnRendererUtils",parent:"currentSelfHelpGuide"},initComponent:function(){var a=this;Ext.apply(a,{viewConfig:{itemId:"gridView",plugins:{ptype:"gridviewdragdrop",dropGroup:"gridtogrid",dragGroup:"gridtogrid",enableDrop:true,enableDrag:true,}},enableDragDrop:true,selType:"rowmodel",columns:[{header:"Question Number",dataIndex:"questionNumber",flex:1},{header:"Challenge Name",dataIndex:"name",flex:3},{header:"Critical",dataIndex:"critical",xtype:"checkcolumn",flex:1},{header:"Mandatory",dataIndex:"mandatory",xtype:"checkcolumn",flex:1}],dockedItems:[{xtype:"toolbar",items:[{text:"Delete Challenge",xtype:"button",action:"delete",hidden:!a.authenticatedPerson.hasAccess("SELF_HELP_GUIDE_DELETE_BUTTON"),itemId:"deleteChallengeButton"}]},{xtype:"pagingtoolbar",dock:"bottom",displayInfo:true,pageSize:this.apiProperties.getPagingSize()}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.shg.EditSelfHelpGuideDetails",{extend:"Ext.form.Panel",alias:"widget.editselfhelpguidedetails",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.shg.EditSelfHelpGuideViewController",title:"Edit Self Help Guide",inject:{selfHelpGuidesStore:"selfHelpGuidesStore",authenticatedPerson:"authenticatedPerson"},autoScroll:true,collapsible:true,scroll:"vertical",initComponent:function(){var a=this;Ext.applyIf(a,{items:[{xtype:"textfield",fieldLabel:"Self Help Guide Name",anchor:"100%",name:"name"},{xtype:"textareafield",fieldLabel:"Description",anchor:"100%",name:"description"},{xtype:"numberfield",fieldLabel:"Threshold",anchor:"30%",name:"threshold"},{xtype:"textareafield",fieldLabel:"Introduction",anchor:"100%",name:"introductoryText"},{xtype:"textareafield",fieldLabel:"Summary",anchor:"100%",name:"summaryText"},{xtype:"textareafield",fieldLabel:"Threshold Summary",anchor:"100%",name:"summaryTextThreshold"},{xtype:"textareafield",fieldLabel:"Early Alert Summary",anchor:"100%",name:"summaryTextEarlyAlert"},{xtype:"checkboxfield",fieldLabel:"Published",anchor:"100%",name:"active"},{xtype:"checkboxfield",fieldLabel:"Authentication Required",anchor:"100%",name:"authenticationRequired"}],dockedItems:[{xtype:"toolbar",items:[{text:"Save",xtype:"button",action:"save",hidden:!a.authenticatedPerson.hasAccess("SELF_HELP_GUIDE_SAVE_BUTTON"),itemId:"saveButton"},"-",{text:"Cancel",xtype:"button",action:"cancel",itemId:"cancelButton"}]}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.shg.EditSelfHelpGuideEditChallenges",{extend:"Ext.form.Panel",alias:"widget.editselfhelpguideeditchallenges",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.shg.SelfHelpGuideEditChallengesAdminController",title:"Manage Challenges",height:"100%",width:"100%",layout:{type:"hbox",align:"stretch"},collapsible:true,initComponent:function(){Ext.apply(this,{items:[{xtype:"editselfhelpguidechallenges",flex:1},{xtype:"editselfhelpguideavailablechallengesadmin",flex:1}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.shg.SelfHelpGuideAdmin",{extend:"Ext.container.Container",alias:"widget.selfhelpguideadmin",title:"Self Help Guide Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.shg.SelfHelpGuideAdminViewController",height:"100%",width:"100%",layout:{type:"vbox",align:"stretch"},initComponent:function(){Ext.apply(this,{items:[{xtype:"selfhelpguidesdisplayadmin",anchor:"100%",flex:1}]});return this.callParent(arguments)}});Ext.define("Ssp.view.admin.forms.shg.SelfHelpGuidesDisplayAdmin",{extend:"Ext.grid.Panel",alias:"widget.selfhelpguidesdisplayadmin",title:"Self Help Guides Admin",mixins:["Deft.mixin.Injectable","Deft.mixin.Controllable"],controller:"Ssp.controller.admin.shg.SelfHelpGuidesDisplayViewController",inject:{apiProperties:"apiProperties",authenticatedPerson:"authenticatedPerson",columnRendererUtils:"columnRendererUtils"},height:"100%",width:"100%",initComponent:function(){var a=this;Ext.apply(a,{viewConfig:{},autoScroll:true,selType:"rowmodel",enableDragDrop:false,columns:[{header:"Self Help Guide",dataIndex:"name",flex:1},{header:"Description",dataIndex:"description",flex:1},{header:"Published",dataIndex:"active",renderer:a.columnRendererUtils.renderFriendlyBoolean,flex:1}],dockedItems:[{xtype:"pagingtoolbar",dock:"bottom",displayInfo:true,pageSize:a.apiProperties.getPagingSize()},{xtype:"toolbar",items:[{text:"Add",iconCls:"icon-add",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("SELF_HELP_GUIDE_DELETE_BUTTON"),action:"add",itemId:"addButton"},"-",{text:"Edit",iconCls:"icon-edit",xtype:"button",hidden:!a.authenticatedPerson.hasAccess("SELF_HELP_GUIDE_EDIT_BUTTON"),action:"edit",itemId:"editButton"}]},{xtype:"toolbar",dock:"top",items:[{xtype:"label",text:'Click on an existing Guide to Edit or Delete.  Click on "add" to create a new Guide.'}]}]});return a.callParent(arguments)}});Ext.Loader.setConfig({enabled:true,paths:{Ssp:"/ssp/app",ContextName:"ssp"}});Ext.require(["Ssp.view.admin.AdminMain","Ssp.view.admin.AdminTreeMenu","Ssp.view.admin.AdminForms","Ssp.view.Main","Ssp.view.Search","Ssp.view.StudentRecord","Ssp.view.ProgramStatusChangeReasonWindow","Ssp.view.person.CaseloadAssignment","Ssp.view.person.EditPerson","Ssp.view.person.Coach","Ssp.view.person.Appointment","Ssp.view.person.SpecialServiceGroups","Ssp.view.person.ReferralSources","Ssp.view.person.ServiceReasons","Ssp.view.person.AnticipatedStartDate","Ssp.view.component.MappedTextField","Ssp.view.component.MappedTextArea","Ssp.view.component.MappedCheckBox","Ssp.view.component.MappedRadioButton","Ssp.view.ToolsMenu","Ssp.view.Tools","Ssp.view.tools.profile.Profile","Ssp.view.tools.profile.Person","Ssp.view.tools.profile.SpecialServiceGroups","Ssp.view.tools.profile.ReferralSources","Ssp.view.tools.profile.ServicesProvided","Ssp.view.tools.profile.ServiceReasons","Ssp.view.tools.actionplan.ActionPlan","Ssp.view.tools.actionplan.Tasks","Ssp.view.tools.actionplan.AddTask","Ssp.view.tools.actionplan.AddTaskForm","Ssp.view.tools.actionplan.EditGoalForm","Ssp.view.tools.actionplan.DisplayActionPlan","Ssp.view.tools.actionplan.DisplayActionPlanGoals","Ssp.view.tools.actionplan.DisplayStrengths","Ssp.view.tools.actionplan.TaskTree","Ssp.view.tools.studentintake.StudentIntake","Ssp.view.tools.studentintake.Challenges","Ssp.view.tools.studentintake.Demographics","Ssp.view.tools.studentintake.EducationGoals","Ssp.view.tools.studentintake.EducationLevels","Ssp.view.tools.studentintake.EducationPlans","Ssp.view.tools.studentintake.Funding","Ssp.view.tools.studentintake.Personal","Ssp.view.tools.journal.Journal","Ssp.view.tools.journal.EditJournal","Ssp.view.tools.journal.DisplayDetails","Ssp.view.tools.journal.TrackTree","Ssp.view.tools.earlyalert.EarlyAlert","Ssp.view.tools.earlyalert.EarlyAlertResponse","Ssp.view.tools.earlyalert.EarlyAlertReferrals","Ssp.view.tools.earlyalert.EarlyAlertDetails","Ssp.view.tools.earlyalert.EarlyAlertResponseDetails","Ssp.view.tools.document.StudentDocuments","Ssp.view.tools.document.EditDocument","Ssp.view.tools.sis.StudentInformationSystem","Ssp.view.tools.sis.Registration","Ssp.view.tools.sis.Assessment","Ssp.view.tools.sis.Transcript","Ssp.view.tools.disabilityintake.DisabilityIntake","Ssp.view.tools.disabilityintake.General","Ssp.view.tools.disabilityintake.AgencyContacts","Ssp.view.tools.disabilityintake.DisabilityTypes","Ssp.view.tools.disabilityintake.Disposition","Ssp.view.tools.disabilityintake.Accommodations","Ssp.view.tools.displacedworker.DisplacedWorker","Ssp.view.tools.studentsuccess.StudentSuccess","Ssp.view.admin.AdminForms","Ssp.view.admin.forms.AbstractReferenceAdmin","Ssp.view.admin.forms.ConfidentialityDisclosureAgreementAdmin","Ssp.view.admin.forms.crg.ChallengeAdmin","Ssp.view.admin.forms.crg.ChallengeReferralAdmin","Ssp.view.admin.forms.crg.AssociateChallengeCategoriesAdmin","Ssp.view.admin.forms.crg.AssociateChallengeReferralsAdmin","Ssp.view.admin.forms.crg.DisplayChallengesAdmin","Ssp.view.admin.forms.crg.DisplayReferralsAdmin","Ssp.view.admin.forms.crg.EditChallenge","Ssp.view.admin.forms.crg.EditReferral","Ssp.view.admin.forms.shg.SelfHelpGuideAdmin","Ssp.view.admin.forms.shg.SelfHelpGuidesDisplayAdmin","Ssp.view.admin.forms.shg.EditSelfHelpGuide","Ssp.view.admin.forms.shg.EditSelfHelpGuideChallenges","Ssp.view.admin.forms.shg.EditSelfHelpGuideDetails","Ssp.view.admin.forms.shg.EditSelfHelpGuideAvailableChallengesAdmin","Ssp.view.admin.forms.shg.EditSelfHelpGuideEditChallenges","Ssp.view.admin.forms.journal.JournalStepAdmin","Ssp.view.admin.forms.journal.JournalStepDetailAdmin","Ssp.view.admin.forms.journal.AssociateTrackStepsAdmin","Ssp.view.admin.forms.journal.AssociateStepDetailsAdmin","Ssp.view.admin.forms.journal.DisplayDetailsAdmin","Ssp.view.admin.forms.journal.DisplayStepsAdmin","Ssp.view.admin.forms.journal.EditStep","Ssp.view.admin.forms.journal.EditStepDetail","Ssp.view.admin.forms.campus.CampusAdmin","Ssp.view.admin.forms.campus.DefineCampus","Ssp.view.admin.forms.campus.EditCampus","Ssp.view.admin.forms.campus.CampusEarlyAlertRoutingsAdmin","Ssp.view.admin.forms.campus.EarlyAlertRoutingsAdmin","Ssp.view.admin.forms.campus.EditCampusEarlyAlertRouting","Ssp.view.ErrorWindow","Ssp.view.Report","Ssp.model.SimpleItemDisplay","Ssp.model.ObjectPermission","Ssp.model.AuthenticatedPerson","Ssp.model.Preferences","Ssp.model.FieldError","Ssp.model.util.TreeRequest","Ssp.model.Configuration","Ssp.model.Person","Ssp.model.PersonAppointment","Ssp.model.Appointment","Ssp.model.CaseloadPerson","Ssp.model.SearchPerson","Ssp.model.SearchCriteria","Ssp.model.CaseloadFilterCriteria","Ssp.model.PersonGoal","Ssp.model.PersonDocument","Ssp.model.PersonLite","Ssp.model.PersonSearchLite","Ssp.model.PersonProgramStatus","Ssp.model.tool.studentintake.StudentIntakeForm","Ssp.model.tool.studentintake.PersonDemographics","Ssp.model.tool.studentintake.PersonEducationGoal","Ssp.model.tool.studentintake.PersonEducationPlan","Ssp.model.tool.disabilityintake.DisabilityIntakeForm","Ssp.model.tool.disabilityintake.PersonDisability","Ssp.model.tool.disabilityintake.PersonDisabilityAgency","Ssp.model.tool.disabilityintake.PersonDisabilityType","Ssp.model.tool.disabilityintake.PersonDisabilityAccommodation","Ssp.model.tool.actionplan.Task","Ssp.model.tool.earlyalert.PersonEarlyAlert","Ssp.model.tool.earlyalert.PersonEarlyAlertTree","Ssp.model.tool.earlyalert.EarlyAlertResponse","Ssp.model.tool.journal.JournalEntry","Ssp.model.tool.journal.JournalEntryDetail","Ssp.model.tool.shg.SelfHelpGuides","Ssp.model.tool.shg.SelfHelpGuideQuestions","Ssp.model.reference.AbstractReference","Ssp.model.reference.Challenge","Ssp.model.reference.ChallengeCategory","Ssp.model.reference.ChallengeReferral","Ssp.model.reference.JournalTrack","Ssp.model.reference.JournalStep","Ssp.model.reference.JournalStepDetail","Ssp.model.reference.ConfidentialityLevel","Ssp.model.reference.ConfidentialityDisclosureAgreement","Ssp.model.ApiUrl","Ssp.mixin.ApiProperties","Ssp.util.FormRendererUtils","Ssp.util.ColumnRendererUtils","Ssp.util.TreeRendererUtils","Ssp.util.Constants","Ssp.store.Coaches","Ssp.store.Caseload","Ssp.store.Tasks","Ssp.store.Goals","Ssp.store.SelfHelpGuides","Ssp.store.SelfHelpGuideQuestions","Ssp.store.JournalEntries","Ssp.store.JournalEntryDetails","Ssp.store.EarlyAlerts","Ssp.store.EarlyAlertCoordinators","Ssp.store.Documents","Ssp.store.reference.AbstractReferences","Ssp.store.admin.AdminTreeMenus","Ssp.store.reference.AnticipatedStartTerms","Ssp.store.reference.Campuses","Ssp.store.reference.CampusEarlyAlertRoutings","Ssp.store.reference.CampusServices","Ssp.store.reference.Challenges","Ssp.store.reference.ChallengeCategories","Ssp.store.reference.ChallengeReferrals","Ssp.store.reference.ChildCareArrangements","Ssp.store.reference.Citizenships","Ssp.store.reference.ConfidentialityLevels","Ssp.store.reference.DisabilityAccommodations","Ssp.store.reference.DisabilityAgencies","Ssp.store.reference.DisabilityStatuses","Ssp.store.reference.DisabilityTypes","Ssp.store.reference.EarlyAlertOutcomes","Ssp.store.reference.EarlyAlertOutreaches","Ssp.store.reference.EarlyAlertReasons","Ssp.store.reference.EarlyAlertReferrals","Ssp.store.reference.EarlyAlertSuggestions","Ssp.store.reference.EmploymentShifts","Ssp.store.reference.Ethnicities","Ssp.store.reference.FundingSources","Ssp.store.reference.Genders","Ssp.store.reference.JournalSources","Ssp.store.reference.JournalStepDetails","Ssp.store.reference.JournalSteps","Ssp.store.reference.JournalTracks","Ssp.store.reference.Lassis","Ssp.store.reference.MaritalStatuses","Ssp.store.reference.MilitaryAffiliations","Ssp.store.People","Ssp.store.PeopleSearchLite","Ssp.store.reference.PersonalityTypes","Ssp.store.reference.ProgramStatuses","Ssp.store.reference.ProgramStatusChangeReasons","Ssp.store.reference.ReferralSources","Ssp.store.reference.ServiceReasons","Ssp.store.reference.SpecialServiceGroups","Ssp.store.reference.States","Ssp.store.Students","Ssp.store.Search","Ssp.store.reference.StudentStatuses","Ssp.store.reference.StudentTypes","Ssp.store.Tools","Ssp.store.reference.VeteranStatuses","Ssp.store.reference.YesNo","Ssp.service.AbstractService","Ssp.service.AppointmentService","Ssp.service.AssessmentService","Ssp.service.CaseloadService","Ssp.service.CampusService","Ssp.service.CampusEarlyAlertRoutingService","Ssp.service.ConfidentialityDisclosureAgreementService","Ssp.service.DisabilityIntakeService","Ssp.service.EarlyAlertService","Ssp.service.EarlyAlertResponseService","Ssp.service.EarlyAlertReferralService","Ssp.service.JournalEntryService","Ssp.service.PersonService","Ssp.service.ProgramStatusService","Ssp.service.ReferralSourceService","Ssp.service.SearchService","Ssp.service.SpecialServiceGroupService","Ssp.service.StudentIntakeService","Ssp.service.TranscriptService","Ssp.controller.ApplicationEventsController","Ext.tab.*","Ext.util.Filter","Ext.data.TreeStore","Ext.dd.DropTarget","Ext.data.Store","Ext.form.field.VTypes","Ext.form.field.Text","Ext.form.field.TextArea","Ext.form.FieldSet","Ext.ux.CheckColumn","Ext.ux.form.MultiSelect","Ext.ux.form.ItemSelector","Ext.util.MixedCollection","Ext.util.TaskRunner","Ext.tree.*","Ext.toolbar.Spacer","Ext.form.field.ComboBox","Ext.grid.column.Action","Ext.grid.feature.Grouping"]);var apiUrls=[{name:"campus",url:"reference/campus"},{name:"campusEarlyAlertRouting",url:"reference/campus/{id}/earlyAlertRouting"},{name:"campusService",url:"reference/campusService"},{name:"category",url:"reference/category"},{name:"challenge",url:"reference/challenge"},{name:"challengeReferral",url:"reference/challengeReferral"},{name:"childCareArrangement",url:"reference/childCareArrangement"},{name:"citizenship",url:"reference/citizenship"},{name:"confidentialityDisclosureAgreement",url:"reference/confidentialityDisclosureAgreement"},{name:"printConfidentialityDisclosureAgreement",url:"/forms/ConfidentialityAgreement.jsp"},{name:"confidentialityLevel",url:"reference/confidentialityLevel"},{name:"configuration",url:"reference/configuration"},{name:"disabilityAccommodation",url:"reference/disabilityAccommodation"},{name:"disabilityIntakeTool",url:"tool/disabilityIntake"},{name:"disabilityAgency",url:"reference/disabilityAgency"},{name:"disabilityStatus",url:"reference/disabilityStatus"},{name:"disabilityType",url:"reference/disabilityType"},{name:"earlyAlertOutcome",url:"reference/earlyAlertOutcome"},{name:"earlyAlertOutreach",url:"reference/earlyAlertOutreach"},{name:"earlyAlertReason",url:"reference/earlyAlertReason"},{name:"earlyAlertReferral",url:"reference/earlyAlertReferral"},{name:"earlyAlertSuggestion",url:"reference/earlyAlertSuggestion"},{name:"educationGoal",url:"reference/educationGoal"},{name:"educationLevel",url:"reference/educationLevel"},{name:"ethnicity",url:"reference/ethnicity"},{name:"fundingSource",url:"reference/fundingSource"},{name:"journalSource",url:"reference/journalSource"},{name:"journalStep",url:"reference/journalStep"},{name:"journalTrack",url:"reference/journalTrack"},{name:"journalStepDetail",url:"reference/journalStepDetail"},{name:"lassi",url:"reference/lassi"},{name:"maritalStatus",url:"reference/maritalStatus"},{name:"militaryAffiliation",url:"reference/militaryAffiliation"},{name:"studentStatus",url:"reference/studentStatus"},{name:"veteranStatus",url:"reference/veteranStatus"},{name:"person",url:"person"},{name:"personAppointment",url:"person/{id}/appointment"},{name:"personAssessment",url:"person/{id}/test"},{name:"personCaseload",url:"person/caseload"},{name:"personMasterCaseload",url:"person/{id}/caseload"},{name:"personChallenge",url:"person/{id}/challenge"},{name:"personCoach",url:"person/coach"},{name:"personDocument",url:"person/{id}/document"},{name:"personEarlyAlert",url:"person/{personId}/earlyAlert"},{name:"personEarlyAlertResponse",url:"person/{personId}/earlyAlert/{earlyAlertId}/response"},{name:"personGoal",url:"person/{id}/goal"},{name:"personJournalEntry",url:"person/{id}/journalEntry"},{name:"personTask",url:"person/{id}/task"},{name:"personTaskGroup",url:"person/{id}/task/group"},{name:"personalityType",url:"reference/personalityType"},{name:"personTranscript",url:"person/{id}/transcript"},{name:"personEmailTask",url:"person/{id}/task/email"},{name:"personViewHistory",url:"report/{id}/History"},{name:"personPrintTask",url:"person/{id}/task/print"},{name:"personSearch",url:"person/search"},{name:"selfHelpGuides",url:"selfHelpGuides/search"},{name:"selfHelpGuideQuestions",url:"selfHelpGuides/selfHelpGuideQuestions"},{name:"personProgramStatus",url:"person/{id}/programStatus"},{name:"programStatus",url:"reference/programStatus"},{name:"programStatusChangeReason",url:"reference/programStatusChangeReason"},{name:"referralSource",url:"reference/referralSource"},{name:"serviceReasons",url:"reference/serviceReason"},{name:"session",url:"session"},{name:"specialServiceGroup",url:"reference/specialServiceGroup"},{name:"studentIntakeTool",url:"tool/studentIntake"},{name:"studentType",url:"reference/studentType"}];Ext.onReady(function(){Ext.Ajax.request({url:Ssp.mixin.ApiProperties.getBaseApiUrl()+"session/getAuthenticatedPerson",method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},success:function(b){var c=Ext.decode(b.responseText);var a={};if(c!=null){a=c;Deft.Injector.configure({sspParentDivId:{value:sspParentDivId},renderSSPFullScreen:{value:renderSSPFullScreen},apiUrlStore:{fn:function(){var d=Ext.create("Ext.data.Store",{model:"Ssp.model.ApiUrl",storeId:"apiUrlStore"});d.loadData(apiUrls);return d},singleton:true},sspConfig:{fn:function(){return new Ssp.model.Configuration({})},singleton:true},currentPerson:{fn:function(){return new Ssp.model.Person({id:""})},singleton:true},personLite:{fn:function(){return new Ssp.model.PersonLite({id:""})},singleton:true},authenticatedPerson:{fn:function(){var d=new Ssp.model.AuthenticatedPerson();d.populateFromGenericObject(a);d.setObjectPermissions();return d},singleton:true},preferences:{fn:function(){return new Ssp.model.Preferences()},singleton:true},apiProperties:{fn:function(){return new Ssp.mixin.ApiProperties({})},singleton:true},formRendererUtils:{fn:function(){return new Ssp.util.FormRendererUtils({})},singleton:true},columnRendererUtils:{fn:function(){return new Ssp.util.ColumnRendererUtils({})},singleton:true},treeRendererUtils:{fn:function(){return new Ssp.util.TreeRendererUtils({})},singleton:true},appEventsController:{fn:function(){return new Ssp.controller.ApplicationEventsController({})},singleton:true},currentAppointment:{fn:function(){return new Ssp.model.Appointment({id:""})},singleton:true},currentPersonAppointment:{fn:function(){return new Ssp.model.PersonAppointment({id:""})},singleton:true},currentChallenge:{fn:function(){return new Ssp.model.reference.Challenge({id:""})},singleton:true},currentChallengeReferral:{fn:function(){return new Ssp.model.reference.ChallengeReferral({id:""})},singleton:true},currentJournalStep:{fn:function(){return new Ssp.model.reference.JournalStep({id:""})},singleton:true},currentJournalStepDetail:{fn:function(){return new Ssp.model.reference.JournalStepDetail({id:""})},singleton:true},currentTask:{fn:function(){return new Ssp.model.tool.actionplan.Task({id:""})},singleton:true},currentGoal:{fn:function(){return new Ssp.model.PersonGoal({id:""})},singleton:true},currentStudentIntake:{fn:function(){return new Ssp.model.tool.studentintake.StudentIntakeForm()},singleton:true},currentDisabilityIntake:{fn:function(){return new Ssp.model.tool.disabilityintake.DisabilityIntakeForm()},singleton:true},currentJournalEntry:{fn:function(){return new Ssp.model.tool.journal.JournalEntry({id:""})},singleton:true},currentEarlyAlert:{fn:function(){return new Ssp.model.tool.earlyalert.PersonEarlyAlert({id:""})},singleton:true},currentEarlyAlertResponse:{fn:function(){return new Ssp.model.tool.earlyalert.EarlyAlertResponse({id:""})},singleton:true},currentDocument:{fn:function(){return new Ssp.model.PersonDocument({id:""})},singleton:true},currentCampus:{fn:function(){return new Ssp.model.reference.Campus({id:""})},singleton:true},currentCampusEarlyAlertRouting:{fn:function(){return new Ssp.model.reference.CampusEarlyAlertRouting({id:""})},singleton:true},currentSelfHelpGuide:{fn:function(){return new Ssp.model.tool.shg.SelfHelpGuides({id:""})},singleton:true},currentSelfHelpGuideQuestions:{fn:function(){return new Ssp.model.tool.shg.SelfHelpGuideQuestions({id:""})},singleton:true},treeStore:{fn:function(){return Ext.create("Ext.data.TreeStore",{root:{text:"root",expanded:true,children:[]}})},singleton:true},earlyAlertsTreeStore:{fn:function(){return Ext.create("Ext.data.TreeStore",{model:"Ssp.model.tool.earlyalert.PersonEarlyAlertTree",proxy:{type:"ajax",url:""}})},singleton:true},earlyAlertDetailsSuggestionsStore:{fn:function(){return Ext.create("Ext.data.Store",{model:"Ssp.model.SimpleItemDisplay",storeId:"earlyAlertDetailsSuggestionsStore"})},singleton:true},earlyAlertResponseDetailsOutreachesStore:{fn:function(){return Ext.create("Ext.data.Store",{model:"Ssp.model.SimpleItemDisplay",storeId:"earlyAlertResponseDetailsOutreachesStore"})},singleton:true},earlyAlertResponseDetailsReferralsStore:{fn:function(){return Ext.create("Ext.data.Store",{model:"Ssp.model.SimpleItemDisplay",storeId:"earlyAlertResponseDetailsReferralsStore"})},singleton:true},profileSpecialServiceGroupsStore:{fn:function(){return Ext.create("Ext.data.Store",{model:"Ssp.model.reference.SpecialServiceGroup"})},singleton:true},profileReferralSourcesStore:{fn:function(){return Ext.create("Ext.data.Store",{model:"Ssp.model.reference.ReferralSource"})},singleton:true},profileServiceReasonsStore:{fn:function(){return Ext.create("Ext.data.Store",{model:"Ssp.model.reference.ServiceReason"})},singleton:true},errorsStore:{fn:function(){return Ext.create("Ext.data.Store",{model:"Ssp.model.FieldError"})},singleton:true},searchCriteria:{fn:function(){return new Ssp.model.SearchCriteria()},singleton:true},caseloadFilterCriteria:{fn:function(){return new Ssp.model.CaseloadFilterCriteria()},singleton:true},abstractReferencesStore:"Ssp.store.reference.AbstractReferences",adminTreeMenusStore:"Ssp.store.admin.AdminTreeMenus",anticipatedStartTermsStore:"Ssp.store.reference.AnticipatedStartTerms",campusesStore:"Ssp.store.reference.Campuses",campusEarlyAlertRoutingsStore:"Ssp.store.reference.CampusEarlyAlertRoutings",campusServicesStore:"Ssp.store.reference.CampusServices",caseloadStore:"Ssp.store.Caseload",challengesStore:"Ssp.store.reference.Challenges",challengeCategoriesStore:"Ssp.store.reference.ChallengeCategories",challengeReferralsStore:"Ssp.store.reference.ChallengeReferrals",childCareArrangementsStore:"Ssp.store.reference.ChildCareArrangements",citizenshipsStore:"Ssp.store.reference.Citizenships",coachesStore:"Ssp.store.Coaches",confidentialityDisclosureAgreementsStore:"Ssp.store.reference.ConfidentialityDisclosureAgreements",confidentialityLevelsStore:"Ssp.store.reference.ConfidentialityLevels",disabilityAccommodationsStore:"Ssp.store.reference.DisabilityAccommodations",disabilityAgenciesStore:"Ssp.store.reference.DisabilityAgencies",disabilityStatusesStore:"Ssp.store.reference.DisabilityStatuses",disabilityTypesStore:"Ssp.store.reference.DisabilityTypes",documentsStore:"Ssp.store.Documents",earlyAlertCoordinatorsStore:"Ssp.store.EarlyAlertCoordinators",earlyAlertOutcomesStore:"Ssp.store.reference.EarlyAlertOutcomes",earlyAlertOutreachesStore:"Ssp.store.reference.EarlyAlertOutreaches",earlyAlertReasonsStore:"Ssp.store.reference.EarlyAlertReasons",earlyAlertReferralsStore:"Ssp.store.reference.EarlyAlertReferrals",earlyAlertReferralsBindStore:"Ssp.store.reference.EarlyAlertReferralsBind",earlyAlertsStore:"Ssp.store.EarlyAlerts",earlyAlertSuggestionsStore:"Ssp.store.reference.EarlyAlertSuggestions",educationGoalsStore:"Ssp.store.reference.EducationGoals",educationLevelsStore:"Ssp.store.reference.EducationLevels",employmentShiftsStore:"Ssp.store.reference.EmploymentShifts",ethnicitiesStore:"Ssp.store.reference.Ethnicities",fundingSourcesStore:"Ssp.store.reference.FundingSources",gendersStore:"Ssp.store.reference.Genders",goalsStore:"Ssp.store.Goals",journalEntriesStore:"Ssp.store.JournalEntries",journalEntryDetailsStore:"Ssp.store.JournalEntryDetails",journalSourcesStore:"Ssp.store.reference.JournalSources",journalStepsStore:"Ssp.store.reference.JournalSteps",journalDetailsStore:"Ssp.store.reference.JournalStepDetails",journalTracksStore:"Ssp.store.reference.JournalTracks",lassisStore:"Ssp.store.reference.Lassis",maritalStatusesStore:"Ssp.store.reference.MaritalStatuses",militaryAffiliationsStore:"Ssp.store.reference.MilitaryAffiliations",peopleSearchLiteStore:"Ssp.store.PeopleSearchLite",peopleStore:"Ssp.store.People",personalityTypesStore:"Ssp.store.reference.PersonalityTypes",programStatusesStore:"Ssp.store.reference.ProgramStatuses",programStatusChangeReasonsStore:"Ssp.store.reference.ProgramStatusChangeReasons",referralSourcesStore:"Ssp.store.reference.ReferralSources",referralSourcesBindStore:"Ssp.store.reference.ReferralSourcesBind",searchStore:"Ssp.store.Search",selfHelpGuidesStore:"Ssp.store.SelfHelpGuides",selfHelpGuideQuestionsStore:"Ssp.store.SelfHelpGuideQuestions",serviceReasonsStore:"Ssp.store.reference.ServiceReasons",specialServiceGroupsStore:"Ssp.store.reference.SpecialServiceGroups",specialServiceGroupsBindStore:"Ssp.store.reference.SpecialServiceGroupsBind",statesStore:"Ssp.store.reference.States",studentsStore:"Ssp.store.Students",studentStatusesStore:"Ssp.store.reference.StudentStatuses",studentTypesStore:"Ssp.store.reference.StudentTypes",tasksStore:"Ssp.store.Tasks",toolsStore:"Ssp.store.Tools",veteranStatusesStore:"Ssp.store.reference.VeteranStatuses",yesNoStore:"Ssp.store.reference.YesNo",appointmentService:"Ssp.service.AppointmentService",assessmentService:"Ssp.service.AssessmentService",campusService:"Ssp.service.CampusService",campusEarlyAlertRoutingService:"Ssp.service.CampusEarlyAlertRoutingService",caseloadService:"Ssp.service.CaseloadService",confidentialityDisclosureAgreementService:"Ssp.service.ConfidentialityDisclosureAgreementService",disabilityIntakeService:"Ssp.service.DisabilityIntakeService",earlyAlertService:"Ssp.service.EarlyAlertService",earlyAlertReferralService:"Ssp.service.EarlyAlertReferralService",earlyAlertResponseService:"Ssp.service.EarlyAlertResponseService",journalEntryService:"Ssp.service.JournalEntryService",personService:"Ssp.service.PersonService",personProgramStatusService:"Ssp.service.PersonProgramStatusService",programStatusService:"Ssp.service.ProgramStatusService",referralSourceService:"Ssp.service.ReferralSourceService",searchService:"Ssp.service.SearchService",specialServiceGroupService:"Ssp.service.SpecialServiceGroupService",studentIntakeService:"Ssp.service.StudentIntakeService",transcriptService:"Ssp.service.TranscriptService"});Ext.application({name:"Ssp",appFolder:Ext.Loader.getPath("Ssp"),autoCreateViewport:true,launch:function(e){var d=this;Deft.Injector.providers.appEventsController.value.config.app=d;Deft.Injector.providers.appEventsController.value.app=d;Ext.Date.patterns={ISO8601Long:"Y-m-d H:i:s",ISO8601Short:"Y-m-d",ShortDate:"n/j/Y",LongDate:"l, F d, Y",FullDateTime:"l, F d, Y g:i:s A",MonthDay:"F d",ShortTime:"g:i A",LongTime:"g:i:s A",SortableDateTime:"Y-m-d\\TH:i:s",UniversalSortableDateTime:"Y-m-d H:i:sO",YearMonth:"F, Y"};Ext.override(Ext.data.proxy.Server,{constructor:function(f){this.callOverridden([f]);this.addListener("exception",function(i,h,g){if(h.status==403){Ext.Msg.confirm({title:"Access Denied Error",msg:"It looks like you are trying to access restricted information or your login session has expired. Would you like to login to continue working in SSP?",buttons:Ext.Msg.YESNO,fn:function(j){if(j=="yes"){window.location.reload()}else{window.location.reload()}},scope:d})}if(h.status==404){Ext.Msg.alert("SSP Error","404 Server Error. See logs for additional details")}})}});Ext.Function.interceptAfter(Ext.form.Field.prototype,"initComponent",function(){var g=this.fieldLabel,f=this.allowBlank;if(g){this.labelStyle=Ssp.util.Constants.SSP_LABEL_STYLE}if(f===false&&g){this.fieldLabel+=Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY}});Ext.Function.interceptAfter(Ext.form.FieldContainer.prototype,"initComponent",function(){var g=this.fieldLabel,f=this.allowBlank;if(g){this.labelStyle=Ssp.util.Constants.SSP_LABEL_STYLE}if(f===false&&g){this.fieldLabel+=Ssp.util.Constants.REQUIRED_ASTERISK_DISPLAY}});Ext.override(Ext.form.BasicForm,{findInvalid:function(){var g=[],k=this.getFields().items,h=k.length,j,m;for(j=0;j<h;j++){if(!(m=k[j]).disabled&&m.isValid()){g.push(m)}}return g}});Ext.override(Ext.Component,{ensureVisible:function(f){var g;this.ownerCt.bubble(function(h){if(g=h.ownerCt){if(g instanceof Ext.TabPanel){g.setActiveTab(h)}else{if(g.layout.setActiveItem){g.layout.setActiveItem(h)}else{if(g.layout.type=="accordion"){h.expand()}}}}return(h!==f)});return this}});Ext.apply(d,{items:[{xtype:"sspview"}]})}})}else{Ext.Msg.alert("Error","Unable to determine authenticated user. Please see your system administrator for assistance.")}}},this)});