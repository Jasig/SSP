<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

	<property name="schema" value="public" dbms="postgresql" />
	<property name="schema" value="dbo" dbms="mssql" />
	<property name="nvarchar.type" value="character varying" dbms="postgresql" />
	<property name="nvarchar.type" value="nvarchar" dbms="mssql" />
	<property name="externalUser" value="a new UUID" />
	<property name="check_for_manage_integration_database_config_sql"
			  value="select count(id) from config where name='manage_integration_database'" />
	<property name="should_manage_integration_database_sql"
			  value="select case lower(value) when 'true' then 'true' else 'false' end as value from config where name='manage_integration_database'" />


	<!-- Postgres type was 'timestamp with time zone', which is actually
	stored in UTC regardless of assigned time zone. So when you narrow the
	type you get the UTC date. This is very likely to be what you want since
	all real-world SSP deployments are behind UTC time, i.e. if you wanted
	a birthdate of Oct 10, 1990 and your default timezone was US east,
	you would have likely loaded 1990-10-10 00:00:00-04, which is the same
	as 1990-10-10 04:00:00-00, i.e. it has the same date part as UTC time,
	so narrowing is safe. And of course if you had loaded UTC times in the
	first place a narrowing would be fine.

	The SqlServer type was timezone-less, so a narrowing has no choice but
	to preserve the existing date portion.

	Where this gets sticky is if you had intentionally set a time component
	in an attempt to game the system into correcting unexpected on-screen
	values. Given the small number of adopters at this time, it is hard to
	imagine why anyone would have decided that was the right thing
	to do, though, as opposed to just contacting us with the problem. -->
	<changeSet id="narrow person birth_date" author="dan.mccallum">
		<modifyDataType tableName="person" columnName="birth_date" newDataType="date" />
		<!-- No point in a rollback - this is a destructive change. And this
		 isn't actually operational data and can be reconstructed from external
		 sources, so creating backup columns isn't worth it. -->
	</changeSet>

</databaseChangeLog>